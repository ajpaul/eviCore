{"version":3,"sources":["webpack:///module-transactions/webpack/universalModuleDefinition","webpack:///module-transactions/scripts/main.js","webpack:///module-transactions/webpack/bootstrap 311c6a0d5ebb75b7e807","webpack:///module-transactions/./styles/base.less?c37a","webpack:///module-transactions/./styles/base.less","webpack:///module-transactions//Users/igorn/~/cli/~/css-loader/lib/css-base.js","webpack:///module-transactions//Users/igorn/~/cli/~/style-loader/addStyles.js","webpack:///module-transactions/./scripts/main.js","webpack:///module-transactions/(webpack)/buildin/module.js","webpack:///module-transactions/external \"base\"","webpack:///module-transactions/external \"core\"","webpack:///module-transactions/external \"module-tags\"","webpack:///module-transactions/external \"module-charts\"","webpack:///module-transactions/./scripts/components/transactions-categories/scripts/main.js","webpack:///module-transactions/./scripts/components/transactions-categories/scripts/providers.js","webpack:///module-transactions/./scripts/components/transactions-categories/scripts/directives.js","webpack:///module-transactions/external \"hammerjs\"","webpack:///module-transactions/./scripts/components/transactions-categories/scripts/filters.js","webpack:///module-transactions/./scripts/components/transactions-p2p/scripts/main.js","webpack:///module-transactions/./scripts/components/transactions-p2p/scripts/providers.js","webpack:///module-transactions/./scripts/components/transactions-currency/scripts/main.js","webpack:///module-transactions/./scripts/components/transactions-currency/scripts/providers.js","webpack:///module-transactions/./scripts/components/transactions-list/scripts/main.js","webpack:///module-transactions/external \"ui\"","webpack:///module-transactions/./scripts/components/transactions-list/scripts/details.js","webpack:///module-transactions/./scripts/components/transactions-list/scripts/directives.js","webpack:///module-transactions/external \"moment\"","webpack:///module-transactions/./scripts/components/transactions-list/templates/info.js","webpack:///module-transactions/./scripts/components/transactions-list/templates/list.js","webpack:///module-transactions/./scripts/components/transactions-list/templates/details.js","webpack:///module-transactions/./scripts/components/transactions-list-authorizations/scripts/main.js","webpack:///module-transactions/./scripts/components/transactions-list-authorizations/scripts/providers.js","webpack:///module-transactions/./scripts/components/transactions-list-authorizations/scripts/directives.js","webpack:///module-transactions/./scripts/components/transactions-list-authorizations/templates/list.js","webpack:///module-transactions/./scripts/components/transactions-search/scripts/main.js","webpack:///module-transactions/external \"module-contacts\"","webpack:///module-transactions/./scripts/components/transactions-search/scripts/controllers.js","webpack:///module-transactions/./scripts/components/transactions-search/scripts/directives.js","webpack:///module-transactions/./scripts/components/transactions-search/templates/dropdownOption.js","webpack:///module-transactions/./scripts/components/transactions-search/templates/export-transactions.js","webpack:///module-transactions/./scripts/components/transactions-search/templates/search.js","webpack:///module-transactions/./scripts/components/transactions-search/scripts/factories.js","webpack:///module-transactions/./scripts/components/transactions-spendings/scripts/main.js","webpack:///module-transactions/./scripts/components/transactions-spendings/scripts/factories.js","webpack:///module-transactions/./scripts/components/transactions-spendings/scripts/directives.js","webpack:///module-transactions/external \"d3\"","webpack:///module-transactions/./scripts/components/transactions-charts/scripts/main.js","webpack:///module-transactions/./scripts/components/transactions-charts/scripts/factories.js","webpack:///module-transactions/./scripts/components/transactions-charts/scripts/directives.js","webpack:///module-transactions/./scripts/components/transactions-charts/templates/charts.js","webpack:///module-transactions/./scripts/components/transactions-charts/templates/charts-horizontal.js","webpack:///module-transactions/./scripts/providers.js","webpack:///module-transactions/./scripts/directives.js"],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE_7__","__WEBPACK_EXTERNAL_MODULE_8__","__WEBPACK_EXTERNAL_MODULE_9__","__WEBPACK_EXTERNAL_MODULE_10__","__WEBPACK_EXTERNAL_MODULE_14__","__WEBPACK_EXTERNAL_MODULE_21__","__WEBPACK_EXTERNAL_MODULE_24__","__WEBPACK_EXTERNAL_MODULE_33__","__WEBPACK_EXTERNAL_MODULE_43__","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","content","locals","push","list","toString","result","i","length","item","join","mediaQuery","alreadyImportedModules","addStylesToDom","styles","options","domStyle","stylesInDom","refs","j","parts","addStyle","listToStyles","newStyles","css","media","sourceMap","part","createStyleElement","styleElement","document","createElement","head","getHeadElement","type","appendChild","createLinkElement","linkElement","rel","obj","update","remove","singleton","styleIndex","singletonCounter","singletonElement","applyToSingletonTag","bind","URL","createObjectURL","revokeObjectURL","Blob","btoa","updateLink","parentNode","removeChild","href","applyToTag","newObj","index","styleSheet","cssText","replaceText","cssNode","createTextNode","childNodes","insertBefore","setAttribute","firstChild","unescape","encodeURIComponent","JSON","stringify","blob","oldSrc","memoize","fn","memo","apply","arguments","isOldIE","test","window","navigator","userAgent","toLowerCase","getElementsByTagName","newList","mayRemove","textStore","replacement","filter","Boolean","__WEBPACK_AMD_DEFINE_RESULT__","name","base","core","tags","charts","categories","p2p","currency","transactionsList","transactionsListAuth","transactionsSearch","spendingsChart","transactionsCharts","transactionsCurrency","deps","createModule","provider","directive","undefined","webpackPolyfill","deprecate","paths","children","lpTransactionsCategory","lpCoreUtils","messages","generic","badId","$get","$http","$q","lpCoreError","API","TransactionsCategoryModel","prototype","getAll","get","config","endpoint","then","response","isArray","data","status","headers","throwException","Error","getById","category","find","when","create","isObject","color","post","newCategory","removeById","isString","TypeError","splice","indexOf","setConfig","chain","mapValues","resolvePortalPlaceholders","defaults","value","api","$inject","rgb2hsl","h","s","r","g","b","max","Math","min","l","d","round","Hammer","$","jQuery","lpCategoryDisplay","$templateCache","lpCoreBus","put","restrict","replace","scope","isCategoryView","categoryList","transaction","categoryClick","categorySwipe","categoryStartSwipe","categoryEndSwipe","template","link","element","attrs","transactionRow","parent","dragStartWidth","markerStyle","onClick","event","$event","gestures","swipeHammer","panright","srcEvent","stopPropagation","preventDefault","addClass","newWidth","floor","deltaX","panstart","parseInt","panend","removeClass","on","$on","Object","keys","forEach","eventType","ev","off","handlers","$watch","setCategory","backgroundColor","categoryId","subscribe","lpCategoryItem","lpCategorySelect","$timeout","model","smallLayout","offsetTopCorrection","showColorPicker","searchResultNumber","cloneCategoryList","transactionCategories","cloneDeep","goToCategoryStep","stepNumber","animate","scrollTop","offset","top","focusChangeButton","focus","categoryExists","categoryFilter","getTextColor","hexColor","substr","newCategoryId","markNewCategory","createCategory","categoryKeyDown","which","target","tagName","deleteCategory","notInList","selectColor","publish","notification","level","message","error","closable","changeCategory","similar","showDetails","input","initialSelected","priority","selectedCategory","markedCategory","lpP2PTransactions","TransactionsP2PModel","transactions","from","moreAvailable","accountsArray","errorCode","clearTransactionsList","loadTransactions","accounts","loadMoreTransactions","self","deferred","defer","loading","queryParams","accountIds","limit","pageSize","transactionsEndpoint","params","success","newTransactions","preprocessTransactions","concat","resolve","promise","map","currentValue","currDate","Date","initiationDateTime","showDate","prevDate","getDate","getMonth","getFullYear","requiresUserAction","creditDebitIndicator","allowMoreResults","noTransactionsFound","getConfig","prop","lpTransactionsCurrency","TransactionsCurrencyModel","groups","defaultCurrency","preferredCurrencies","rest","orderedCurrencies","loadDefaultCurrency","defaultCurrencyEndpoint","configureDefaultCurrency","defaultCurrencyData","dc","currency_code","exchange_rate","group","selected","loadOtherCurrencies","currencyListEndpoint","sortCurrencies","currencyData","preferred","disableExtraCurrencies","sort","a","currencyA","currencyB","findCurrency","currencyCode","selectCurrency","ui","lpTransactionDetailsAddress","address","lpTransactionDetailsDatetime","detailLabel","datetime","lpTransactionDetailsMap","location","lpTransactionDetailsVertical","detailValue","lpTransactionDetailsHorizontal","isES3Browser","es3Browser","defineProperty","e","angular","ng","moment","lpTransactionsList","$compile","lpCoreTemplate","lpTransactions","findTransactionElem","findTransactionCategoryElem","linkFn","elem","isOldBrowser","ie8CategoryFull","ie8CategoryCollapsed","groupTransactionsByDate","account","showScrollbar","enableVerticalScrollbar","isTodayOrYesterday","timestamp","today","getTime","startOf","yesterday","subtract","date","isSame","todayOrYesterday","previewAll","transactionKeydown","evt","loadTransactionDetails","openDetails","isLoading","details","transactionsCategories","transactionsLoading","updateTransactionCategory","updateSimilarTransactionCategory","selectedTab","$transaction","size","$details","append","setDetailTabValues","tabs","selectedDetailTab","tab","hasOwnProperty","detailTabs","closePreview","categorySmallLayout","transactionTabs","getElementById","style","display","selectDetailsTab","openPreview","preview","width","categorySwipeStart","calculatedWidth","$category","categorySwipeEnd","parseTransactionAttribute","attribute","trim","getTransactionDescription","counterpartyName","description","transactionDescription","transactionType","getTransactionSubDescription","accountName","toggleCategoryView","safeApply","compileFn","customTemplateSrc","customTemplateCache","customTemplatePath","resolvePath","rawElement","currentHeight","offsetHeight","height","overflowY","categoryLayout","showCategories","showTransactionIcons","showDatesAllTransactions","hideDetailsPreference","compile","templateUrl","lpTransactionsListDetails","lpStickyTitle","$sticky","onScrolling","outerHeight","isSpecialDate","bookingDateTime","stickies","querySelectorAll","len","domNextSticky","nextStickyPosition","domSticky","next","prev","$thisSticky","scrollY","stickyPosition","getAttribute","originalHeight","domPrevSticky","$prevSticky","isNaN","wrap","lpTransactionsAuth","TransactionsAuthModel","clearTransactionsAuthList","loadTransactionsAuth","loadMoreTransactionsAuth","utils","t","uniqueId","amount","dateTime","parse","accountHoldsEndpoint","f","ids","noTransactionsAuthFound","lpTransactionsAuthorizationsList","listVisible","showToggle","serverError","contacts","controller","lpExportTransactions","$scope","$modalInstance","download","option","close","cancel","dismiss","lpTransactionsSearch","$modal","currentSuggestion","suggestionType","fromDate","toDate","to","fromAmount","toAmount","contact","query","baseIconClass","newestOnTopClass","oldestOnTopClass","largestAmountOnTopClass","smallestAmountOnTopClass","label","icon","aria","doSearch","filters","search","onPerformSearch","selectSuggestion","suggestion","clearSuggestion","onClearSearch","updateSuggestion","onUpdateSearch","changeSort","onChangeSort","tmpl","showExportOptions","modalInstance","open","format","onExportTransactions","err","console","log","showExportButton","showCategoriesToggle","isUndefined","lpSmartsuggest","SmartSuggestEngine","SmartSuggestFormatter","smartsuggestSelect","smartsuggestClear","smartsuggestUpdate","tagsInput","closest","smartSuggest","addSuggester","suggest","builtIn","getContactSuggestions","types","AMOUNT","getAmountSuggestions","DATE","getDateSuggestions","GENERAL","getGeneralSuggestions","formatter","locale","CATEGORY","getCategorySuggestions","autosuggest","lookup","q","suggs","getSuggestions","displayValue","values","onSelect","text","getSuggestionIcon","$apply","onClear","onChangeModel","formatResult","getSuggestionHtml","autoSelectFirst","lpDownloadTransactionsFile","$window","endpointSrc","cfg","$resource","getEndpoint","CategorySpendingsResource","method","CategoriesResource","wrapText","textNode","selectAll","textNodeWidth","attr","tspanCount","tspan","words","split","lineHeight","slice","node","getComputedTextLength","x","dy","formatPercentage","val","toFixed","d3","lpCategoriesSpendings","categoriesSpendings","spendings","categorySpending","currentCategory","assign","accountId","viewLoading","missingData","showChart","$watchCollection","newVals","oldVals","selectItem","selectedItem","resize","updateData","start","end","all","$promise","onAccountsLoaded","removeWatch","allAccounts","spending","templateFn","lpAccounts","categoryDetails","lpCoreI18n","radius","innerRadius","unitSize","select","y","delta","historicalChangeFactor","symbol","formatCurrency","totalFraction","abs","canvases","canvas","chart","_","normalizeData","current","reduce","acc","lpAccountsChartData","accountsChartEndpoint","AccountsChartModel","extend","chartData","setId","load","url","allAccountsChartEndpoint","errors","code","getInstance","lpTransactionsChartData","transactionsChartEndpoint","TransactionsChartModel","allTransactionsChartEndpoint","buildCharts","getNiceTimePeriod","startTime","endTime","monthNames","setDate","getStartDate","endDate","scale","setMonth","setDateRange","timePeriod","onTransactionsReady","unsubscribe","updateCharts","direction","onlyTransactions","setHours","setMinutes","setSeconds","getTransactionsValue","series","deposit","withdrawal","withdraw","formatAmount","emptyTurnovers","emptyBalances","transactionsChartModel","accountsChartModel","results","turnovers","balances","transactionsChartOptions","padding","parsers","formatters","time","tooltip","accountBalanceChartOptions","animation","updateChartsOnAccountSelected","cardId","initialize","now","nextPeriod","prevPeriod","setScale","setSeries","showNextPeriod","vertical","horizontal","lpTransactionsCharts","lpTransactionsChartsHorizontal","lpTagsUtils","TransactionsModel","availableFilters","QUERY","FROM_DATE","TO_DATE","FROM_AMOUNT","TO_AMOUNT","CONTACT","DEBITCREDIT","setFilters","setFilter","getFilters","clearFilters","updateFilters","lastTransaction","prevTransaction","add","newDate","month","year","transactionAmount","getQueryParamaters","debitCredit","df","dt","af","at","ca","categoryIds","crdb","getExportTransactionsLink","buildQueryString","compact","pop","decorateTransactionsWithAccountsName","preprocessTransactionDetails","specialDetails","customDetails","detailsToOmit","specialDetailsKeys","longValueKeys","latLong","latitude","longitude","mapParams","mapUrl","key","detailData","longValue","special","custom","isEmpty","transactionDetailsEndpoint","transactionId","condition","isSearching","names","accountsNames","lpBalanceUpdate","ngModelCtrl","$modelValue","newValue","oldValue","cssClass","increase","decrease","removeClassTimeout","setTimeout","lpResponsiveCallback","$parse","lpUIResponsive","applyRule","enable","rule","max-width","min-width"],"mappings":"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","file":"scripts/main.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"base\"), require(\"core\"), require(\"module-tags\"), require(\"module-charts\"), require(\"hammerjs\"), require(\"ui\"), require(\"moment\"), require(\"module-contacts\"), require(\"d3\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"base\", \"core\", \"module-tags\", \"module-charts\", \"hammerjs\", \"ui\", \"moment\", \"module-contacts\", \"d3\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"module-transactions\"] = factory(require(\"base\"), require(\"core\"), require(\"module-tags\"), require(\"module-charts\"), require(\"hammerjs\"), require(\"ui\"), require(\"moment\"), require(\"module-contacts\"), require(\"d3\"));\n\telse\n\t\troot[\"module-transactions\"] = factory(root[\"base\"], root[\"core\"], root[\"module-tags\"], root[\"module-charts\"], root[\"hammerjs\"], root[\"ui\"], root[\"moment\"], root[\"module-contacts\"], root[\"d3\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_7__, __WEBPACK_EXTERNAL_MODULE_8__, __WEBPACK_EXTERNAL_MODULE_9__, __WEBPACK_EXTERNAL_MODULE_10__, __WEBPACK_EXTERNAL_MODULE_14__, __WEBPACK_EXTERNAL_MODULE_21__, __WEBPACK_EXTERNAL_MODULE_24__, __WEBPACK_EXTERNAL_MODULE_33__, __WEBPACK_EXTERNAL_MODULE_43__) {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"base\"), require(\"core\"), require(\"module-tags\"), require(\"module-charts\"), require(\"hammerjs\"), require(\"ui\"), require(\"moment\"), require(\"module-contacts\"), require(\"d3\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"base\", \"core\", \"module-tags\", \"module-charts\", \"hammerjs\", \"ui\", \"moment\", \"module-contacts\", \"d3\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"module-transactions\"] = factory(require(\"base\"), require(\"core\"), require(\"module-tags\"), require(\"module-charts\"), require(\"hammerjs\"), require(\"ui\"), require(\"moment\"), require(\"module-contacts\"), require(\"d3\"));\n\telse\n\t\troot[\"module-transactions\"] = factory(root[\"base\"], root[\"core\"], root[\"module-tags\"], root[\"module-charts\"], root[\"hammerjs\"], root[\"ui\"], root[\"moment\"], root[\"module-contacts\"], root[\"d3\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_7__, __WEBPACK_EXTERNAL_MODULE_8__, __WEBPACK_EXTERNAL_MODULE_9__, __WEBPACK_EXTERNAL_MODULE_10__, __WEBPACK_EXTERNAL_MODULE_14__, __WEBPACK_EXTERNAL_MODULE_21__, __WEBPACK_EXTERNAL_MODULE_24__, __WEBPACK_EXTERNAL_MODULE_33__, __WEBPACK_EXTERNAL_MODULE_43__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n\n\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/_karma_webpack_//\";\n\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(1);\n\tmodule.exports = __webpack_require__(5);\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// style-loader: Adds some css to the DOM by adding a <style> tag\n\n\t// load the styles\n\tvar content = __webpack_require__(2);\n\tif(typeof content === 'string') content = [[module.id, content, '']];\n\t// add the styles to the DOM\n\tvar update = __webpack_require__(4)(content, {});\n\tif(content.locals) module.exports = content.locals;\n\t// Hot Module Replacement\n\tif(false) {\n\t\t// When the styles change, update the <style> tags\n\t\tif(!content.locals) {\n\t\t\tmodule.hot.accept(\"!!./../../../../../node_modules/cli/node_modules/css-loader/index.js!./../../../../../node_modules/cli/node_modules/less-loader/index.js!./../../../../../node_modules/cli/node_modules/postcss-loader/index.js!./base.less\", function() {\n\t\t\t\tvar newContent = require(\"!!./../../../../../node_modules/cli/node_modules/css-loader/index.js!./../../../../../node_modules/cli/node_modules/less-loader/index.js!./../../../../../node_modules/cli/node_modules/postcss-loader/index.js!./base.less\");\n\t\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\t\tupdate(newContent);\n\t\t\t});\n\t\t}\n\t\t// When the module is disposed, remove the <style> tags\n\t\tmodule.hot.dispose(function() { update(); });\n\t}\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\texports = module.exports = __webpack_require__(3)();\n\t// imports\n\n\n\t// module\n\texports.push([module.id, \".lp-transactions-list-authorizations .lp-auth-header{padding-left:15px;cursor:pointer;font-size:1.3em}.lp-transactions-list-authorizations .centered div{line-height:1.5}.lp-chart-balances,.lp-chart-turnovers{height:260px}.chart-progress-indicator .panel{border:0}.chart-empty-data{text-align:center;padding:80px 0}.lp-search-right .input-group-btn{width:170px}.lp-search-right .input-group-btn>button>span{font-size:.857em;width:100%;min-width:25px;display:inline-block;overflow:hidden;text-overflow:ellipsis;line-height:1em}.lp-search-right .input-group-btn>button>span:before{font-family:Backbase-Neue;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;content:\\\"\\\\E603\\\";position:absolute;right:5px;top:50%;margin-top:-.5em}.lp-search-right .input-group-btn.open>button>span:before{content:\\\"\\\\E604\\\"}.lp-search-right .input-group-btn .dropdown-toggle i{display:none}.lp-search-right .input-group-btn .dropdown-toggle .option-icon{display:inline-block}.lp-search-right .dropdown .dropdown-menu{margin-top:4px;right:0;border:1px solid #ddd}.lp-search-right .dropdown .dropdown-menu>li:first-child{border-top:none}.lp-search-right .dropdown .dropdown-menu>li>a{padding:20px}.lp-search-right .dropdown .dropdown-menu>li>a i{font-size:1.2em}.lp-search-right .dropdown .dropdown-menu>li>a .option-label{font-size:1em;padding:0 36px 0 18px}.lp-search-right .dropdown .dropdown-menu>li>a>span>i.lp-icon-checkmark_fat{visibility:hidden;position:absolute;top:22px;right:20px}.lp-search-right .dropdown .dropdown-menu>li.active>a>span>i.lp-icon-checkmark_fat{visibility:visible}.lp-search-right .dropdown .dropdown-menu>li.active>a>span>i.option-icon{color:currentColor}.lp-medium-size .lp-search-tags>input,.lp-small-size .lp-search-tags>input{height:47px}.lp-medium-size .lp-search-right .input-group-btn,.lp-small-size .lp-search-right .input-group-btn{width:60px}.lp-medium-size .lp-search-right .input-group-btn button .option-label,.lp-small-size .lp-search-right .input-group-btn button .option-label{display:none}.lp-medium-size .lp-search-right .input-group-btn button .option-icon,.lp-small-size .lp-search-right .input-group-btn button .option-icon{font-size:1.8em}.lp-transactions-export-btn{text-align:center}.lp-transactions-export-btn button>span{padding-left:5px}.lp-medium-size .lp-transactions-export-btn button>span,.lp-small-size .lp-transactions-export-btn button>span{display:none}.export-transactions-modal p{margin:0;padding:0}.export-transactions-modal .panel-body{padding:0}.export-transactions-modal .modal-header{color:#fff;background-color:#d67500;margin:0;padding:15px 20px;text-transform:uppercase}.export-transactions-modal .modal-body{padding:0 20px;margin:20px 0;text-align:center}.export-transactions-modal .modal-body ul{list-style-type:none;text-align:left;margin:40px 15%;padding:0}.export-transactions-modal .modal-footer{margin:40px 0 20px;padding:0 20px;text-align:center}.export-transactions-modal .modal-footer button.btn-primary{border:0 none;color:#fff;background-color:#d67500;padding-left:30px;padding-right:30px}.export-transactions-modal .modal-footer button.btn-primary[disabled]{background-color:#878787}.export-transactions-modal .modal-footer i{color:#d67500}.export-transactions-modal .modal-footer p{margin-top:20px}.lp-transactions-list{min-height:248px}.transaction-details .transaction-details-navbar .tab-content{background-color:transparent;padding:0 19px 14px}.transaction-details .transaction-details-navbar .tab-content .lp-category-select{margin-top:14px}.transaction-details .transaction-details-navbar .tab-content .lp-transaction-details .progress-indicator{border:0 none}.transaction-details .transaction-details-navbar .tab-content .lp-transaction-details .row>div{margin-top:14px;text-align:left;padding-right:10px}.transaction-details .transaction-details-navbar .tab-content .lp-transaction-details .row>div .transaction-detail-label{line-height:1em;margin-bottom:10px;font-weight:700}.transaction-details .transaction-details-navbar .tab-content .lp-transaction-details .row>div .transaction-detail-map{width:100%;height:90px;max-width:160px}.transaction-details .transaction-details-navbar .tab-content .lp-transaction-details .row.transaction-detail-reference{margin-top:23px}.transaction-details .transaction-details-navbar .tab-content .lp-transaction-details .row.transaction-detail-reference .transaction-detail-value{white-space:nowrap}.lp-transactions-list-category{max-width:150px}.lp-transactions-list-category.lp-transactions-list-category-noanim{transition:none}.lp-transactions-list-item .lp-transactions-list-item-head{display:block;padding-left:9px;white-space:nowrap;transition:padding-left .4s ease}.lp-transactions-list-item-head-noanim{transition:none}.preview-all .lp-transactions-list-item-head,.preview.lp-transactions-list-item-head{padding-left:160px}.lp-transactions-list .column{display:inline-block;vertical-align:top;transition:padding .4s ease,width .4s ease}.lp-transactions-list-large .column{padding-left:15px;padding-right:15px}.lp-transactions-list .lp-transactions-list-item-head .lp-transactions-list-item-category{display:block}.lp-transactions-list-item-content{height:55px;position:relative;width:100%}.lp-transactions-list-item-date{width:16.66666667%}.lp-transactions-list-large .lp-transactions-list-item-date{width:8.33333333%}.lp-transactions-list-no-icons .lp-transactions-list-item-date{width:16.66666667%}.lp-transactions-list-item-date-value{font-size:16px;font-weight:500;line-height:1.1;text-align:center}.lp-transactions-list-item-icon{width:8.33333333%}.lp-transactions-list-medium .lp-transactions-list-item-icon,.lp-transactions-list-no-icons .lp-transactions-list-item-icon,.lp-transactions-list-small .lp-transactions-list-item-icon{display:none}.lp-transactions-list-item-summary{text-align:left;width:58.33333333%}.lp-transactions-list-item-name{font-size:16px;font-weight:500;line-height:1.1;margin-bottom:3px}.lp-transactions-list-item-info,.lp-transactions-list-item-type{font-size:12px;font-weight:500;line-height:1.1;margin-top:0;margin-bottom:0;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.lp-transactions-list-large .lp-transactions-list-item-info,.lp-transactions-list-medium .lp-transactions-list-item-type,.lp-transactions-list-small .lp-transactions-list-item-type{display:none}.lp-transactions-list-item-amount{font-weight:500;line-height:1.1;text-align:right;white-space:nowrap;width:24.99999999%}.lp-transactions-list-item-amount-value{float:right;font-size:16px}.lp-transactions-list-item-details{height:0;overflow:hidden}.lp-transactions-list-item.open .lp-transactions-list-item-details{height:auto}.preview-all .lp-transactions-list-category{width:160px}.lp-transactions-list-item-head-noanim .lp-transaction-category{transition:none}.lp-search-wrapper{margin-left:0}.lp-search-wrapper .sort-select button.dropdown-toggle .caret{display:none}\", \"\"]);\n\n\t// exports\n\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\t/*\r\n\t\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\t\tAuthor Tobias Koppers @sokra\r\n\t*/\r\n\t// css base code, injected by the css-loader\r\n\tmodule.exports = function() {\r\n\t\tvar list = [];\r\n\r\n\t\t// return the list of modules as css string\r\n\t\tlist.toString = function toString() {\r\n\t\t\tvar result = [];\r\n\t\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\t\tvar item = this[i];\r\n\t\t\t\tif(item[2]) {\r\n\t\t\t\t\tresult.push(\"@media \" + item[2] + \"{\" + item[1] + \"}\");\r\n\t\t\t\t} else {\r\n\t\t\t\t\tresult.push(item[1]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn result.join(\"\");\r\n\t\t};\r\n\r\n\t\t// import a list of modules into the list\r\n\t\tlist.i = function(modules, mediaQuery) {\r\n\t\t\tif(typeof modules === \"string\")\r\n\t\t\t\tmodules = [[null, modules, \"\"]];\r\n\t\t\tvar alreadyImportedModules = {};\r\n\t\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\t\tvar id = this[i][0];\r\n\t\t\t\tif(typeof id === \"number\")\r\n\t\t\t\t\talreadyImportedModules[id] = true;\r\n\t\t\t}\r\n\t\t\tfor(i = 0; i < modules.length; i++) {\r\n\t\t\t\tvar item = modules[i];\r\n\t\t\t\t// skip already imported module\r\n\t\t\t\t// this implementation is not 100% perfect for weird media query combinations\r\n\t\t\t\t//  when a module is imported multiple times with different media queries.\r\n\t\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\r\n\t\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\r\n\t\t\t\t\tif(mediaQuery && !item[2]) {\r\n\t\t\t\t\t\titem[2] = mediaQuery;\r\n\t\t\t\t\t} else if(mediaQuery) {\r\n\t\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlist.push(item);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\treturn list;\r\n\t};\r\n\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*\r\n\t\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\t\tAuthor Tobias Koppers @sokra\r\n\t*/\r\n\tvar stylesInDom = {},\r\n\t\tmemoize = function(fn) {\r\n\t\t\tvar memo;\r\n\t\t\treturn function () {\r\n\t\t\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\r\n\t\t\t\treturn memo;\r\n\t\t\t};\r\n\t\t},\r\n\t\tisOldIE = memoize(function() {\r\n\t\t\treturn /msie [6-9]\\b/.test(window.navigator.userAgent.toLowerCase());\r\n\t\t}),\r\n\t\tgetHeadElement = memoize(function () {\r\n\t\t\treturn document.head || document.getElementsByTagName(\"head\")[0];\r\n\t\t}),\r\n\t\tsingletonElement = null,\r\n\t\tsingletonCounter = 0;\r\n\r\n\tmodule.exports = function(list, options) {\r\n\t\tif(false) {\r\n\t\t\tif(typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\r\n\t\t}\r\n\r\n\t\toptions = options || {};\r\n\t\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\r\n\t\t// tags it will allow on a page\r\n\t\tif (typeof options.singleton === \"undefined\") options.singleton = isOldIE();\r\n\r\n\t\tvar styles = listToStyles(list);\r\n\t\taddStylesToDom(styles, options);\r\n\r\n\t\treturn function update(newList) {\r\n\t\t\tvar mayRemove = [];\r\n\t\t\tfor(var i = 0; i < styles.length; i++) {\r\n\t\t\t\tvar item = styles[i];\r\n\t\t\t\tvar domStyle = stylesInDom[item.id];\r\n\t\t\t\tdomStyle.refs--;\r\n\t\t\t\tmayRemove.push(domStyle);\r\n\t\t\t}\r\n\t\t\tif(newList) {\r\n\t\t\t\tvar newStyles = listToStyles(newList);\r\n\t\t\t\taddStylesToDom(newStyles, options);\r\n\t\t\t}\r\n\t\t\tfor(var i = 0; i < mayRemove.length; i++) {\r\n\t\t\t\tvar domStyle = mayRemove[i];\r\n\t\t\t\tif(domStyle.refs === 0) {\r\n\t\t\t\t\tfor(var j = 0; j < domStyle.parts.length; j++)\r\n\t\t\t\t\t\tdomStyle.parts[j]();\r\n\t\t\t\t\tdelete stylesInDom[domStyle.id];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n\r\n\tfunction addStylesToDom(styles, options) {\r\n\t\tfor(var i = 0; i < styles.length; i++) {\r\n\t\t\tvar item = styles[i];\r\n\t\t\tvar domStyle = stylesInDom[item.id];\r\n\t\t\tif(domStyle) {\r\n\t\t\t\tdomStyle.refs++;\r\n\t\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\r\n\t\t\t\t\tdomStyle.parts[j](item.parts[j]);\r\n\t\t\t\t}\r\n\t\t\t\tfor(; j < item.parts.length; j++) {\r\n\t\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tvar parts = [];\r\n\t\t\t\tfor(var j = 0; j < item.parts.length; j++) {\r\n\t\t\t\t\tparts.push(addStyle(item.parts[j], options));\r\n\t\t\t\t}\r\n\t\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction listToStyles(list) {\r\n\t\tvar styles = [];\r\n\t\tvar newStyles = {};\r\n\t\tfor(var i = 0; i < list.length; i++) {\r\n\t\t\tvar item = list[i];\r\n\t\t\tvar id = item[0];\r\n\t\t\tvar css = item[1];\r\n\t\t\tvar media = item[2];\r\n\t\t\tvar sourceMap = item[3];\r\n\t\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\r\n\t\t\tif(!newStyles[id])\r\n\t\t\t\tstyles.push(newStyles[id] = {id: id, parts: [part]});\r\n\t\t\telse\r\n\t\t\t\tnewStyles[id].parts.push(part);\r\n\t\t}\r\n\t\treturn styles;\r\n\t}\r\n\r\n\tfunction createStyleElement() {\r\n\t\tvar styleElement = document.createElement(\"style\");\r\n\t\tvar head = getHeadElement();\r\n\t\tstyleElement.type = \"text/css\";\r\n\t\thead.appendChild(styleElement);\r\n\t\treturn styleElement;\r\n\t}\r\n\r\n\tfunction createLinkElement() {\r\n\t\tvar linkElement = document.createElement(\"link\");\r\n\t\tvar head = getHeadElement();\r\n\t\tlinkElement.rel = \"stylesheet\";\r\n\t\thead.appendChild(linkElement);\r\n\t\treturn linkElement;\r\n\t}\r\n\r\n\tfunction addStyle(obj, options) {\r\n\t\tvar styleElement, update, remove;\r\n\r\n\t\tif (options.singleton) {\r\n\t\t\tvar styleIndex = singletonCounter++;\r\n\t\t\tstyleElement = singletonElement || (singletonElement = createStyleElement());\r\n\t\t\tupdate = applyToSingletonTag.bind(null, styleElement, styleIndex, false);\r\n\t\t\tremove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);\r\n\t\t} else if(obj.sourceMap &&\r\n\t\t\ttypeof URL === \"function\" &&\r\n\t\t\ttypeof URL.createObjectURL === \"function\" &&\r\n\t\t\ttypeof URL.revokeObjectURL === \"function\" &&\r\n\t\t\ttypeof Blob === \"function\" &&\r\n\t\t\ttypeof btoa === \"function\") {\r\n\t\t\tstyleElement = createLinkElement();\r\n\t\t\tupdate = updateLink.bind(null, styleElement);\r\n\t\t\tremove = function() {\r\n\t\t\t\tstyleElement.parentNode.removeChild(styleElement);\r\n\t\t\t\tif(styleElement.href)\r\n\t\t\t\t\tURL.revokeObjectURL(styleElement.href);\r\n\t\t\t};\r\n\t\t} else {\r\n\t\t\tstyleElement = createStyleElement();\r\n\t\t\tupdate = applyToTag.bind(null, styleElement);\r\n\t\t\tremove = function() {\r\n\t\t\t\tstyleElement.parentNode.removeChild(styleElement);\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tupdate(obj);\r\n\r\n\t\treturn function updateStyle(newObj) {\r\n\t\t\tif(newObj) {\r\n\t\t\t\tif(newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap)\r\n\t\t\t\t\treturn;\r\n\t\t\t\tupdate(obj = newObj);\r\n\t\t\t} else {\r\n\t\t\t\tremove();\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n\r\n\tvar replaceText = (function () {\r\n\t\tvar textStore = [];\r\n\r\n\t\treturn function (index, replacement) {\r\n\t\t\ttextStore[index] = replacement;\r\n\t\t\treturn textStore.filter(Boolean).join('\\n');\r\n\t\t};\r\n\t})();\r\n\r\n\tfunction applyToSingletonTag(styleElement, index, remove, obj) {\r\n\t\tvar css = remove ? \"\" : obj.css;\r\n\r\n\t\tif (styleElement.styleSheet) {\r\n\t\t\tstyleElement.styleSheet.cssText = replaceText(index, css);\r\n\t\t} else {\r\n\t\t\tvar cssNode = document.createTextNode(css);\r\n\t\t\tvar childNodes = styleElement.childNodes;\r\n\t\t\tif (childNodes[index]) styleElement.removeChild(childNodes[index]);\r\n\t\t\tif (childNodes.length) {\r\n\t\t\t\tstyleElement.insertBefore(cssNode, childNodes[index]);\r\n\t\t\t} else {\r\n\t\t\t\tstyleElement.appendChild(cssNode);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction applyToTag(styleElement, obj) {\r\n\t\tvar css = obj.css;\r\n\t\tvar media = obj.media;\r\n\t\tvar sourceMap = obj.sourceMap;\r\n\r\n\t\tif(media) {\r\n\t\t\tstyleElement.setAttribute(\"media\", media)\r\n\t\t}\r\n\r\n\t\tif(styleElement.styleSheet) {\r\n\t\t\tstyleElement.styleSheet.cssText = css;\r\n\t\t} else {\r\n\t\t\twhile(styleElement.firstChild) {\r\n\t\t\t\tstyleElement.removeChild(styleElement.firstChild);\r\n\t\t\t}\r\n\t\t\tstyleElement.appendChild(document.createTextNode(css));\r\n\t\t}\r\n\t}\r\n\r\n\tfunction updateLink(linkElement, obj) {\r\n\t\tvar css = obj.css;\r\n\t\tvar media = obj.media;\r\n\t\tvar sourceMap = obj.sourceMap;\r\n\r\n\t\tif(sourceMap) {\r\n\t\t\t// http://stackoverflow.com/a/26603875\r\n\t\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\r\n\t\t}\r\n\r\n\t\tvar blob = new Blob([css], { type: \"text/css\" });\r\n\r\n\t\tvar oldSrc = linkElement.href;\r\n\r\n\t\tlinkElement.href = URL.createObjectURL(blob);\r\n\r\n\t\tif(oldSrc)\r\n\t\t\tURL.revokeObjectURL(oldSrc);\r\n\t}\r\n\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(module) {'use strict';\n\n\t/**\n\t *  ----------------------------------------------------------------\n\t *  Copyright © Backbase B.V.\n\t *  ----------------------------------------------------------------\n\t *  Author : Backbase R&D - Amsterdam - New York\n\t *  Filename : main.js\n\t *  Description:\n\t *  Main File Module Transactions\n\t *  ----------------------------------------------------------------\n\t */\n\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, module) {\n\n\t    'use strict';\n\n\t    module.name = 'module-transactions-3';\n\n\t    var base = __webpack_require__(7);\n\t    var core = __webpack_require__(8);\n\t    var tags = __webpack_require__(9);\n\t    var charts = __webpack_require__(10);\n\n\t    // Custom components\n\t    var categories = __webpack_require__(11);\n\t    var p2p = __webpack_require__(16);\n\t    var currency = __webpack_require__(18);\n\t    var transactionsList = __webpack_require__(20);\n\t    var transactionsListAuth = __webpack_require__(28);\n\t    var transactionsSearch = __webpack_require__(32);\n\t    var spendingsChart = __webpack_require__(40);\n\t    var transactionsCharts = __webpack_require__(44);\n\t    var transactionsCurrency = __webpack_require__(18);\n\n\t    var deps = [core.name, tags.name, charts.name, categories.name, p2p.name, currency.name, transactionsList.name, transactionsListAuth.name, transactionsSearch.name, spendingsChart.name, transactionsCharts.name, transactionsCurrency.name];\n\n\t    module.exports = base.createModule(module.name, deps).provider(__webpack_require__(49)).directive(__webpack_require__(50));\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6)(module)))\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function(module) {\r\n\t\tif(!module.webpackPolyfill) {\r\n\t\t\tmodule.deprecate = function() {};\r\n\t\t\tmodule.paths = [];\r\n\t\t\t// module.parent = undefined by default\r\n\t\t\tmodule.children = [];\r\n\t\t\tmodule.webpackPolyfill = 1;\r\n\t\t}\r\n\t\treturn module;\r\n\t}\r\n\n\n/***/ },\n/* 7 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_7__;\n\n/***/ },\n/* 8 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_8__;\n\n/***/ },\n/* 9 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_9__;\n\n/***/ },\n/* 10 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_10__;\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(module) {'use strict';\n\n\t/**\n\t *  ----------------------------------------------------------------\n\t *  Copyright © Backbase B.V.\n\t *  ----------------------------------------------------------------\n\t *  Author : Backbase R&D - Amsterdam - New York\n\t *  Filename : main.js\n\t *  Description:\n\t *  Transactions Categories Component main file\n\t *  ----------------------------------------------------------------\n\t */\n\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, module) {\n\n\t    'use strict';\n\n\t    module.name = 'component.transactions-categories';\n\n\t    var base = __webpack_require__(7);\n\t    var core = __webpack_require__(8);\n\n\t    var deps = [core.name];\n\n\t    module.exports = base.createModule(module.name, deps).provider(__webpack_require__(12)).directive(__webpack_require__(13)).filter(__webpack_require__(15));\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6)(module)))\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;'use strict';\n\n\t/**\n\t * Providers\n\t * @module transactions\n\t */\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, module) {\n\t    'use strict';\n\n\t    // @ngInject\n\n\t    exports.lpTransactionsCategory = function (lpCoreUtils) {\n\t        var messages = {\n\t            generic: 'Generic error',\n\t            badId: 'The id must be a string'\n\t        };\n\n\t        // @ngInject\n\t        this.$get = function ($http, $q, lpCoreError) {\n\t            var config = {\n\t                endpoint: ''\n\t            };\n\n\t            function API() {\n\t                function TransactionsCategoryModel() {\n\t                    this.categories = [];\n\t                }\n\n\t                /**\n\t                 * Returns all the categories\n\t                 * @return {Object} A promise\n\t                 */\n\t                TransactionsCategoryModel.prototype.getAll = function () {\n\t                    return $http.get(config.endpoint)\n\t                    // success\n\t                    .then(function (response) {\n\t                        this.categories = lpCoreUtils.isArray(response.data) ? response.data : [];\n\t                        return this.categories;\n\t                    }.bind(this),\n\t                    // error\n\t                    function (data, status, headers, options) {\n\t                        lpCoreError.throwException(new Error(messages.generic));\n\t                    });\n\t                };\n\n\t                /**\n\t                 * Returns the category that corresponds to `id`\n\t                 * @param  {String} id the `id` of the category\n\t                 * @return {Object}    A promise\n\t                 */\n\t                TransactionsCategoryModel.prototype.getById = function (id) {\n\t                    var category = lpCoreUtils(this.categories).find({ id: id });\n\t                    return $q.when(category);\n\t                };\n\n\t                /**\n\t                 * Creates a new category\n\t                 * @param  {Object} category The `category` to be created\n\t                 * @param  {String} category.name\n\t                 * @param  {String} category.color\n\t                 * @return {Object}          A promise\n\t                 */\n\t                TransactionsCategoryModel.prototype.create = function (category) {\n\t                    if (!lpCoreUtils.isObject(category) || !category.name || !category.color) {\n\t                        lpCoreError.throwException(new Error('Bad category data: ' + category));\n\t                    }\n\n\t                    return $http.post(config.endpoint, category)\n\t                    // success\n\t                    .then(function (response) {\n\t                        var newCategory = response.data;\n\t                        this.categories.push(newCategory);\n\t                        return newCategory;\n\t                    }.bind(this),\n\t                    // error\n\t                    function (response) {\n\t                        lpCoreError.throwException(new Error(messages.generic));\n\t                    });\n\t                };\n\n\t                /**\n\t                 * Deletes the category with a certain`id`\n\t                 * @param  {String} id The `id` of the category\n\t                 * @return {Object}    A promise\n\t                 */\n\t                TransactionsCategoryModel.prototype.removeById = function (id) {\n\t                    if (!lpCoreUtils.isString(id)) {\n\t                        lpCoreError.throwException(new TypeError(messages.badId));\n\t                    }\n\n\t                    return $http['delete'](config.endpoint + '/' + id)\n\t                    // success\n\t                    .then(function (response) {\n\t                        var category = lpCoreUtils(this.categories).find({ id: id });\n\t                        this.categories.splice(lpCoreUtils(this.categories).indexOf(category), 1);\n\t                        return category;\n\t                    }.bind(this),\n\t                    // error\n\t                    function (response) {\n\t                        lpCoreError.throwException(new Error(messages.generic));\n\t                    });\n\t                };\n\n\t                return new TransactionsCategoryModel();\n\t            }\n\n\t            return {\n\t                setConfig: function setConfig(options) {\n\t                    config = lpCoreUtils(options).chain().mapValues(lpCoreUtils.resolvePortalPlaceholders).defaults(config).value();\n\t                    return this;\n\t                },\n\n\t                api: API\n\t            };\n\t        };\n\t    };\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ },\n/* 13 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;'use strict';\n\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, module) {\n\n\t    'use strict';\n\n\t    var Hammer = __webpack_require__(14);\n\t    var $ = window.jQuery;\n\t    // TODO: put in core.utils\n\t    function rgb2hsl() {\n\t        var r = arguments[0] / 255,\n\t            g = arguments[1] / 255,\n\t            b = arguments[2] / 255;\n\t        var max = Math.max(r, g, b),\n\t            min = Math.min(r, g, b);\n\t        var h,\n\t            s,\n\t            l = (max + min) / 2;\n\n\t        if (max === min) {\n\t            h = s = 0; // achromatic\n\t        } else {\n\t                var d = max - min;\n\t                s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n\t                switch (max) {\n\t                    case r:\n\t                        h = (g - b) / d + (g < b ? 6 : 0);break;\n\t                    case g:\n\t                        h = (b - r) / d + 2;break;\n\t                    case b:\n\t                        h = (r - g) / d + 4;break;\n\t                }\n\t                h = h / 6;\n\t            }\n\n\t        return {\n\t            h: Math.round(h * 360),\n\t            s: Math.round(s * 100),\n\t            l: Math.round(l * 100)\n\t        };\n\t    }\n\n\t    // @ngInject\n\t    exports.lpCategoryDisplay = function ($templateCache, lpCoreBus) {\n\t        $templateCache.put('$categoryDisplay.html', '<div class=\"lp-transaction-category\" ng-click=\"onClick($event, transaction)\">' + '<span class=\"category-marker\" ng-style=\"markerStyle\"></span>' + '<div class=\"category-name\"><span class=\"h4\">{{category.name}}</span></div>' + '</div>');\n\n\t        return {\n\t            restrict: 'A',\n\t            replace: true,\n\t            require: 'ngModel',\n\t            scope: {\n\t                isCategoryView: '=lpCategoryView',\n\t                categoryList: '=lpCategoryList',\n\t                transaction: '=ngModel',\n\t                categoryClick: '&',\n\t                categorySwipe: '&',\n\t                categoryStartSwipe: '&',\n\t                categoryEndSwipe: '&'\n\t            },\n\t            template: $templateCache.get('$categoryDisplay.html'),\n\t            link: function link(scope, element, attrs) {\n\n\t                var transactionRow = element.parent().parent(),\n\t                    dragStartWidth = 0;\n\n\t                scope.markerStyle = {};\n\t                scope.category = null;\n\n\t                scope.onClick = function (event, transaction) {\n\t                    scope.categoryClick({\n\t                        $event: event,\n\t                        transaction: scope.transaction\n\t                    });\n\t                };\n\n\t                var gestures = {},\n\t                    swipeHammer = transactionRow.data('touch');\n\n\t                var panright = function panright(event) {\n\t                    event.srcEvent.stopPropagation();\n\t                    event.preventDefault();\n\t                    element.parent().addClass('no-animation');\n\t                    var newWidth = dragStartWidth + Math.floor(event.deltaX);\n\t                    if (newWidth > 160) {\n\t                        newWidth = 160;\n\t                    }\n\t                    if (newWidth > dragStartWidth) {\n\t                        element.parent().css('width', newWidth + 'px');\n\t                    }\n\t                    scope.categorySwipe({\n\t                        $event: event,\n\t                        transaction: scope.transaction\n\t                    });\n\t                };\n\n\t                var panstart = function panstart(event) {\n\t                    event.srcEvent.stopPropagation();\n\t                    event.preventDefault();\n\t                    dragStartWidth = parseInt(element.css('width'), 10);\n\t                    scope.categoryStartSwipe({\n\t                        $event: event,\n\t                        transaction: scope.transaction\n\t                    });\n\t                };\n\n\t                var panend = function panend(event) {\n\t                    event.srcEvent.stopPropagation();\n\t                    event.preventDefault();\n\t                    element.parent().removeClass('no-animation');\n\t                    var newWidth = dragStartWidth + Math.floor(event.deltaX);\n\t                    if (newWidth > 160) {\n\t                        newWidth = 160;\n\t                    }\n\t                    if (newWidth > 150) {\n\t                        scope.categoryClick({\n\t                            $event: null,\n\t                            transaction: scope.transaction\n\t                        });\n\t                    }\n\t                    element.parent().css('width', '');\n\t                    scope.categoryEndSwipe({\n\t                        event: event,\n\t                        transaction: scope.transaction\n\t                    });\n\t                };\n\n\t                if (!scope.isCategoryView && typeof Hammer !== 'undefined') {\n\t                    if (!swipeHammer) {\n\t                        swipeHammer = new Hammer(transactionRow[0]);\n\t                        transactionRow.data('touch', swipeHammer);\n\t                    }\n\n\t                    gestures.panright = swipeHammer.on('panright', panright);\n\n\t                    gestures.panstart = swipeHammer.on('panstart', panstart);\n\n\t                    gestures.panend = swipeHammer.on('panend', panend);\n\t                }\n\n\t                scope.$on('$destroy', function () {\n\t                    Object.keys(gestures).forEach(function (eventType) {\n\t                        var ev = gestures[eventType];\n\t                        ev.off(eventType, ev.handlers[eventType][0]);\n\t                    });\n\t                });\n\n\t                scope.$watch('transaction.categoryId', function (value) {\n\t                    scope.setCategory(value);\n\t                });\n\n\t                scope.setCategory = function (id) {\n\t                    if (scope.categoryList) {\n\t                        for (var i = 0; i < scope.categoryList.length; i++) {\n\t                            if (scope.categoryList[i].id === id) {\n\t                                scope.category = scope.categoryList[i];\n\t                            }\n\t                        }\n\t                    }\n\n\t                    if (scope.category && id) {\n\t                        scope.markerStyle.backgroundColor = scope.category.color;\n\t                    } else {\n\t                        // temporary fix to set 'Uncategorised' if transaction category id isn't valid\n\t                        scope.transaction.categoryId = '00cc9919-ba0c-4702-917b-1fba4c256b4d';\n\t                    }\n\t                };\n\n\t                lpCoreBus.subscribe('launchpad-retail.categoryDelete', function (data) {\n\t                    if (data.id === scope.transaction.categoryId) {\n\t                        scope.setCategory();\n\t                    }\n\t                });\n\t            }\n\t        };\n\t    };\n\n\t    // @ngInject\n\t    exports.lpCategoryItem = function () {\n\t        return {\n\t            restrict: 'A',\n\t            replace: true,\n\t            template: '<div class=\"category-item btn btn-block btn-default\" tabIndex=\"{{category.id !== transaction.categoryId ? 0 : -1}}\" ng-style=\"{\\'background-color\\': category.id === newCategoryId ? category.color : \\'#ffffff\\'}\" ng-click=\"markNewCategory(category.id)\" ng-keydown=\"categoryKeyDown($event, category)\">' + '<div class=\"marker\" ng-style=\"{\\'background-color\\':category.color}\"></div>' + '<span class=\"name\" ng-class=\"{ light: (category.id === newCategoryId && getTextColor(category.color)) }\">{{category.name}}</span>' + '<button type=\"button\" class=\"close\" aria-hidden=\"true\" ng-click=\"deleteCategory($event, category)\" ng-if=\"category.type ===\\'NORMAL\\'\">&times;</button>' + '</div>'\n\t        };\n\t    };\n\n\t    // @ngInject\n\t    exports.lpCategorySelect = function ($templateCache, $timeout, lpCoreBus, lpCoreUtils) {\n\t        $templateCache.put('$categorySelect.html', '<div class=\"lp-category-select clearfix\">' + '<div class=\"clearfix\">' + '<label class=\"control-label pull-left\" lp-i18n=\"Current Category:\"></label>' + '<div ng-repeat=\"category in transactionCategories | orderBy:\\'-priority\\' | selectedCategory:this\" class=\"col-xs-6 col-sm-4 col-md-4\">' + '<div lp-category-item=\"lp-category-item\"></div>' + '</div>' + '</div>' + '<label class=\"control-label pull-left\" lp-i18n=\"Change category to:\"></label>' + '<form class=\"form category-search clearfix\" role=\"form\" ng-submit=\"createCategory()\">' + '<input type=\"text\" ng-model=\"categoryFilter\" class=\"form-control\" placeholder=\"{{\\'Search categories / Create category\\'|translate}}\" maxlength=\"40\" ng-disabled=\"showColorPicker\" />' + '</form>' + '<div class=\"category-list col-xs-12 col-sm-12 col-md-9\">' + '<div class=\"new-category col-xs-12 col-sm-12 col-md-12\" ng-if=\"!categoryExists() && !showColorPicker && categoryFilter.length > 0\">' + '<label class=\"control-label pull-left\" lp-i18n=\"Create new category:\"></label>' + '<div ng-repeat=\"category in newCategory\" class=\"col-xs-6 col-sm-6 col-md-6\">' + '<div lp-category-item=\"lp-category-item\"></div>' + '</div>' + '</div>' + '<ul class=\"category-list col-xs-12 col-sm-12 col-md-12\">' + '<li ng-repeat=\"category in transactionCategories | orderBy:\\'-priority\\' | categoryList:this\" class=\"col-xs-6 col-sm-4 col-md-4\" ng-show=\"!showColorPicker\">' + '<div lp-category-item=\"lp-category-item\"></div>' + '</li>' + '<div id=\"{{\\'transaction-\\' + transaction.id + \\'-category-step-2\\'}}\" class=\"clearfix\" ng-if=\"showColorPicker\">' + '<label class=\"clearfix\" lp-i18n=\"Choose a color for the new category:\"></label>' + '<div lp-color-picker=\"lp-color-picker\" select-color=\"selectColor\"></div>' + '</div>' + '</ul>' + '</div>' + '<div id=\"{{\\'transaction-\\' + transaction.id + \\'-category-step-3\\'}}\" class=\"col-xs-12 col-sm-12 col-md-3 category-apply\" ng-if=\"(smallLayout && newCategoryId.length) || !smallLayout\">' + '<div class=\"row\" ng-if=\"smallLayout\">' + '<div class=\"col-xs-12 col-sm-12 clearfix\">' + '<label class=\"control-label pull-left\" lp-i18n=\"You\\'ve selected:\"></label>' + '<div ng-repeat=\"category in transactionCategories | orderBy:\\'-priority\\' | markedCategory:this\" class=\"col-xs-7 col-sm-6 col-md-4\">' + '<div lp-category-item=\"lp-category-item\"></div>' + '</div>' + '</div>' + '<div class=\"col-xs-12 col-sm-12 clearfix\">' + '<p lp-i18n=\"Would you like to change the category for only this transaction or all similar transactions?\"></p>' + '</div>' + '</div>' + '<div class=\"row\">' + '<div class=\"col-sm-12 col-md-12\" ng-if=\"!smallLayout\">' + '<p lp-i18n=\"Apply category change to?\"></p>' + '</div>' + '<div class=\"col-xs-6 col-sm-6 col-md-12\">' + '<button type=\"button\" class=\"btn btn-default btn-block\" ng-click=\"changeCategory(newCategoryId)\" ng-disabled=\"!newCategoryId.length\" lp-i18n=\"Only This\"></button>' + '</div>' + '<div class=\"col-xs-6 col-sm-6 col-md-12\">' + '<button type=\"button\" class=\"btn btn-default btn-block\" ng-click=\"changeCategory(newCategoryId, true)\" ng-disabled=\"!newCategoryId.length\" lp-i18n=\"All Similar\"></button>' + '</div>' + '</div>' + '</div>' + '</div>');\n\n\t        return {\n\t            restrict: 'A',\n\t            replace: false,\n\t            require: 'ngModel',\n\t            scope: {\n\t                model: '=ngModel',\n\t                transaction: '=',\n\t                update: '=',\n\t                smallLayout: '=',\n\t                offsetTopCorrection: '='\n\t            },\n\t            template: $templateCache.get('$categorySelect.html'),\n\t            link: function link(scope, element, attrs) {\n\n\t                scope.showColorPicker = false;\n\t                scope.searchResultNumber = scope.model.categories.length;\n\n\t                var cloneCategoryList = function cloneCategoryList() {\n\t                    scope.transactionCategories = [];\n\t                    for (var i = 0; i < scope.model.categories.length; i++) {\n\t                        scope.transactionCategories.push(lpCoreUtils.cloneDeep(scope.model.categories[i]));\n\t                    }\n\t                };\n\t                cloneCategoryList();\n\n\t                var goToCategoryStep = function goToCategoryStep(stepNumber) {\n\t                    if (scope.smallLayout) {\n\t                        $timeout(function () {\n\t                            $('body').animate({\n\t                                scrollTop: $('#transaction-' + scope.transaction.id + (stepNumber > 1 ? '-category-step-' + stepNumber : '')).offset().top - 5 - (scope.offsetTopCorrection || 0)\n\t                            }, 500);\n\t                        }, 0);\n\t                    }\n\t                };\n\n\t                var focusChangeButton = function focusChangeButton() {\n\t                    $timeout(function () {\n\t                        $(element).find('button[ng-click^=\"changeCategory\"]')[0].focus();\n\t                    }, 0);\n\t                };\n\n\t                scope.$watch('categoryFilter', function (value) {\n\t                    scope.newCategory = [{\n\t                        id: null,\n\t                        name: value,\n\t                        color: '#cccccc'\n\t                    }];\n\t                });\n\n\t                scope.categoryExists = function () {\n\t                    var result = false;\n\n\t                    if (scope.categoryFilter && scope.categoryFilter.length > 0) {\n\t                        for (var i = 0; i < scope.model.categories.length; i++) {\n\t                            if (scope.categoryFilter.toLowerCase() === scope.model.categories[i].name.toLowerCase()) {\n\t                                result = true;\n\t                            }\n\t                        }\n\t                    }\n\n\t                    return result;\n\t                };\n\n\t                scope.getTextColor = function (hexColor) {\n\t                    var result = true,\n\t                        r = hexColor.substr(1, 2),\n\t                        g = hexColor.substr(3, 2),\n\t                        b = hexColor.substr(5, 2);\n\n\t                    if (hexColor.length === 4) {\n\t                        r = hexColor.substr(1, 1) + hexColor.substr(1, 1);\n\t                        g = hexColor.substr(2, 1) + hexColor.substr(2, 1);\n\t                        b = hexColor.substr(3, 1) + hexColor.substr(3, 1);\n\t                    }\n\n\t                    r = parseInt(r, 16);\n\t                    g = parseInt(g, 16);\n\t                    b = parseInt(b, 16);\n\n\t                    if (rgb2hsl(r, g, b).l > 45) {\n\t                        result = false;\n\t                    }\n\n\t                    return result;\n\t                };\n\n\t                scope.newCategoryId = '';\n\t                scope.markNewCategory = function (categoryId) {\n\t                    if (categoryId === null) {\n\t                        scope.createCategory();\n\t                        return;\n\t                    }\n\t                    if (scope.transaction.categoryId === categoryId) {\n\t                        return;\n\t                    }\n\t                    if (scope.newCategoryId === categoryId) {\n\t                        scope.newCategoryId = '';\n\t                        return;\n\t                    }\n\t                    scope.newCategoryId = categoryId;\n\n\t                    goToCategoryStep(3);\n\t                    focusChangeButton();\n\t                };\n\n\t                scope.categoryKeyDown = function (event, category) {\n\t                    if (event.which === 13 || event.which === 32) {\n\t                        event.preventDefault();\n\t                        event.stopPropagation();\n\n\t                        if (event.target.tagName.toLowerCase() === 'button') {\n\t                            scope.deleteCategory(event, category);\n\t                            return;\n\t                        }\n\t                        scope.markNewCategory(category.id);\n\t                    }\n\t                };\n\n\t                scope.createCategory = function () {\n\t                    var notInList = !scope.categoryExists() && scope.categoryFilter.length > 0;\n\n\t                    if (notInList) {\n\t                        scope.showColorPicker = true;\n\n\t                        goToCategoryStep(2);\n\t                    } else {\n\t                        if (scope.searchResultNumber) {\n\t                            $timeout(function () {\n\t                                $('.category-list .category-item')[0].focus();\n\t                            }, 0);\n\t                        }\n\t                    }\n\t                };\n\n\t                scope.selectColor = function (color) {\n\t                    scope.model.create({\n\t                        name: scope.categoryFilter,\n\t                        color: color\n\t                    }).then(function (response) {\n\t                        scope.categoryFilter = '';\n\t                        scope.showColorPicker = false;\n\t                        cloneCategoryList();\n\t                        scope.markNewCategory(response.id);\n\t                        lpCoreBus.publish('launchpad-retail.categoryListUpdate', null, true);\n\n\t                        goToCategoryStep(3);\n\t                        focusChangeButton();\n\t                    }, function (response) {\n\t                        lpCoreBus.publish('launchpad.add-notification', {\n\t                            notification: {\n\t                                id: 'category-create-duplicate',\n\t                                level: 'SEVERE',\n\t                                message: response.data.error,\n\t                                closable: true\n\t                            }\n\t                        }, true);\n\n\t                        scope.categoryFilter = '';\n\t                        scope.showColorPicker = false;\n\t                    });\n\t                };\n\n\t                scope.deleteCategory = function (event, category) {\n\t                    event.stopPropagation();\n\n\t                    if (category.type === 'NORMAL') {\n\t                        scope.model.removeById(category.id).then(function () {\n\t                            if (scope.newCategoryId === category.id) {\n\t                                scope.newCategoryId = '';\n\t                            }\n\t                            cloneCategoryList();\n\t                            lpCoreBus.publish('launchpad-retail.categoryDelete', { id: category.id }, true);\n\t                            lpCoreBus.publish('launchpad-retail.categoryListUpdate', null, true);\n\t                        });\n\t                    }\n\t                };\n\n\t                scope.changeCategory = function (id, similar) {\n\t                    scope.newCategoryId = '';\n\t                    scope.categoryFilter = '';\n\t                    scope.update(scope.transaction, id, similar);\n\n\t                    $timeout(function () {\n\t                        scope.transaction.showDetails = false;\n\t                    }, 100);\n\n\t                    goToCategoryStep(1);\n\t                    $('#transaction-' + scope.transaction.id)[0].focus();\n\t                };\n\n\t                lpCoreBus.subscribe('launchpad-retail.categoryListUpdate', function () {\n\t                    cloneCategoryList();\n\t                });\n\t            }\n\t        };\n\t    };\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ },\n/* 14 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_14__;\n\n/***/ },\n/* 15 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;'use strict';\n\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, module) {\n\t    'use strict';\n\n\t    // @ngInject\n\n\t    exports.categoryList = function () {\n\t        return function (input, scope) {\n\t            var result = input;\n\n\t            if (!scope.initialSelected) {\n\t                scope.initialSelected = scope.transaction.categoryId;\n\t            }\n\n\t            // Remove \"Pending\" from the selectable list of categories\n\t            for (var i = 0; i < result.length; i++) {\n\t                if (result[i].type === 'TEMPORARY') {\n\t                    result.splice(i, 1);\n\t                    i--;\n\t                    continue;\n\t                }\n\t                // add/reset priority property\n\t                result[i].priority = 1;\n\t                if (result[i].type === 'CONTROL') {\n\t                    result[i].priority = 0;\n\t                }\n\t                if (result[i].id === scope.initialSelected) {\n\t                    result[i].priority = 2;\n\t                }\n\t            }\n\n\t            for (i = 0; i < result.length; i++) {\n\t                // Filter out the categories that don't contain the string in the input\n\t                if (scope.categoryFilter && scope.categoryFilter.length && result[i].name.toLowerCase().indexOf(scope.categoryFilter.toLowerCase()) === -1) {\n\t                    result.splice(i, 1);\n\t                    i--;\n\t                    continue;\n\t                }\n\t                // Move the selected category to the first position\n\t                if (result[i].id === scope.transaction.categoryId) {\n\t                    result.splice(i, 1);\n\t                    i--;\n\t                }\n\t            }\n\n\t            scope.searchResultNumber = result.length;\n\t            return result;\n\t        };\n\t    };\n\n\t    // @ngInject\n\t    exports.selectedCategory = function () {\n\t        return function (input, scope) {\n\t            var result = input;\n\n\t            for (var i = 0; i < result.length; i++) {\n\t                if (result[i].id !== scope.transaction.categoryId) {\n\t                    result.splice(i, 1);\n\t                    i--;\n\t                }\n\t            }\n\n\t            return result;\n\t        };\n\t    };\n\n\t    // @ngInject\n\t    exports.markedCategory = function () {\n\t        return function (input, scope) {\n\t            var result = input;\n\n\t            for (var i = 0; i < result.length; i++) {\n\t                if (result[i].id !== scope.newCategoryId) {\n\t                    result.splice(i, 1);\n\t                    i--;\n\t                }\n\t            }\n\n\t            return result;\n\t        };\n\t    };\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ },\n/* 16 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(module) {'use strict';\n\n\t/**\n\t *  ----------------------------------------------------------------\n\t *  Copyright © Backbase B.V.\n\t *  ----------------------------------------------------------------\n\t *  Author : Backbase R&D - Amsterdam - New York\n\t *  Filename : main.js\n\t *  Description:\n\t *  Transactions P2P Transactions Component main file\n\t *  ----------------------------------------------------------------\n\t */\n\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, module) {\n\n\t    'use strict';\n\n\t    module.name = 'component.transactions-p2p';\n\n\t    var base = __webpack_require__(7);\n\t    var core = __webpack_require__(8);\n\n\t    var deps = [core.name];\n\n\t    module.exports = base.createModule(module.name, deps).provider(__webpack_require__(17));\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6)(module)))\n\n/***/ },\n/* 17 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;'use strict';\n\n\t/**\n\t*  ----------------------------------------------------------------\n\t*  Copyright © Backbase B.V.\n\t*  ----------------------------------------------------------------\n\t*  Author : Backbase R&D - Amsterdam - New York\n\t*  Filename : providers.js\n\t*  Description: Retrieves a list of p2p transactions from the server and maintains their state\n\t*  ----------------------------------------------------------------\n\t*/\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, module) {\n\t    'use strict';\n\n\t    // @ngInject\n\n\t    exports.lpP2PTransactions = function (lpCoreUtils) {\n\n\t        // @ngInject\n\t        this.$get = function ($http, $q) {\n\t            var config = {\n\t                transactionsEndpoint: '/mock/v1/p2p-payments',\n\t                pageSize: 20,\n\t                from: 1\n\t            };\n\n\t            function API() {\n\t                /**\n\t                 * P2P Transactions service constructor\n\t                 * @param config\n\t                 * @constructor\n\t                 */\n\t                var TransactionsP2PModel = function TransactionsP2PModel() {\n\t                    this.transactions = [];\n\t                    this.from = config.from;\n\t                    this.moreAvailable = true;\n\t                    this.accountsArray = [];\n\t                    this.errorCode = null;\n\t                };\n\n\t                /**\n\t                 * Clears list of transactions and resets pageOffset counter\n\t                 */\n\t                TransactionsP2PModel.prototype.clearTransactionsList = function () {\n\t                    this.transactions = [];\n\t                    this.moreAvailable = true;\n\t                    this.from = config.from;\n\t                };\n\n\t                /**\n\t                 * Loads a new set of transactions for the given list of accounts\n\t                 * @param accounts\n\t                 */\n\t                TransactionsP2PModel.prototype.loadTransactions = function (accounts) {\n\t                    this.clearTransactionsList();\n\t                    this.accountsArray = accounts;\n\n\t                    return this.loadMoreTransactions();\n\t                };\n\n\t                /**\n\t                 * Loads a new set of transactions for the given list of accounts\n\t                 * @param accounts\n\t                 */\n\t                TransactionsP2PModel.prototype.loadTransactions = function (accounts) {\n\t                    this.clearTransactionsList();\n\t                    this.accountsArray = accounts;\n\n\t                    return this.loadMoreTransactions();\n\t                };\n\n\t                /**\n\t                 * Load transactions\n\t                 * @param account (pass account only for first load)\n\t                 */\n\t                TransactionsP2PModel.prototype.loadMoreTransactions = function () {\n\t                    var self = this;\n\t                    var deferred = $q.defer();\n\n\t                    this.loading = true;\n\n\t                    var queryParams = {\n\t                        accountIds: this.accountsArray.join(','),\n\t                        offset: this.from,\n\t                        limit: config.pageSize\n\t                    };\n\n\t                    $http.get(config.transactionsEndpoint, {\n\t                        params: queryParams\n\t                    }).success(function (data) {\n\t                        // success callback\n\t                        self.from += config.pageSize;\n\n\t                        var newTransactions = self.preprocessTransactions(data);\n\t                        if (newTransactions && newTransactions.length < config.pageSize) {\n\t                            self.moreAvailable = false;\n\t                        }\n\n\t                        self.transactions = self.transactions.concat(newTransactions);\n\t                        deferred.resolve(self.transactions);\n\t                    }).error(function (data) {\n\t                        // error callback\n\t                        self.errorCode = data.errorCode || 500;\n\t                    })['finally'](function () {\n\t                        self.loading = false;\n\t                    });\n\n\t                    return deferred.promise;\n\t                };\n\n\t                /**\n\t                 * Enriches data with presentation logic\n\t                 * @param transactions\n\t                 * @returns {*}\n\t                 */\n\t                TransactionsP2PModel.prototype.preprocessTransactions = function (transactions) {\n\t                    var result = [];\n\n\t                    if (transactions && transactions.length > 0) {\n\t                        result = lpCoreUtils.map(transactions, function (currentValue, index) {\n\t                            var currDate = new Date(currentValue.initiationDateTime);\n\n\t                            // handle date show/hide\n\t                            currentValue.showDate = true;\n\t                            if (index > 0) {\n\t                                var prevDate = new Date(transactions[index - 1].initiationDateTime);\n\t                                currentValue.showDate = prevDate.getDate() !== currDate.getDate() || prevDate.getMonth() !== currDate.getMonth() || prevDate.getFullYear() !== currDate.getFullYear();\n\t                            }\n\n\t                            // add accept and reject buttons on transactions\n\t                            currentValue.requiresUserAction = false;\n\t                            if (currentValue.creditDebitIndicator === 'CREDIT' && currentValue.status === 'PENDING') {\n\t                                currentValue.requiresUserAction = true;\n\t                            }\n\n\t                            return currentValue;\n\t                        });\n\t                    }\n\n\t                    return result;\n\t                };\n\n\t                /**\n\t                 * Checks for errors while loading transactions\n\t                 * @returns {boolean}\n\t                 */\n\t                TransactionsP2PModel.prototype.allowMoreResults = function () {\n\t                    return !this.loading && this.moreAvailable && !this.errorCode;\n\t                };\n\n\t                /**\n\t                 * Checks for errors during download and ensures that no transactions have been loaded\n\t                 * @returns {boolean}\n\t                 */\n\t                TransactionsP2PModel.prototype.noTransactionsFound = function () {\n\t                    return !this.loading && this.transactions.length === 0 && !this.errorCode;\n\t                };\n\n\t                return new TransactionsP2PModel();\n\t            }\n\n\t            return {\n\t                setConfig: function setConfig(options) {\n\t                    config = lpCoreUtils(options).chain().mapValues(lpCoreUtils.resolvePortalPlaceholders).defaults(config).value();\n\t                    return this;\n\t                },\n\n\t                getConfig: function getConfig(prop) {\n\t                    if (prop && lpCoreUtils.isString(prop)) {\n\t                        return config[prop];\n\t                    } else {\n\t                        return config;\n\t                    }\n\t                },\n\n\t                api: API\n\t            };\n\t        };\n\t    };\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ },\n/* 18 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(module) {'use strict';\n\n\t/**\n\t *  ----------------------------------------------------------------\n\t *  Copyright © Backbase B.V.\n\t *  ----------------------------------------------------------------\n\t *  Author : Backbase R&D - Amsterdam - New York\n\t *  Filename : main.js\n\t *  Description:\n\t *  Transactions Currency Component main file\n\t *  ----------------------------------------------------------------\n\t */\n\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, module) {\n\n\t    'use strict';\n\n\t    module.name = 'component.transactions-currency';\n\n\t    var base = __webpack_require__(7);\n\t    var core = __webpack_require__(8);\n\n\t    var deps = [core.name];\n\n\t    module.exports = base.createModule(module.name, deps).provider(__webpack_require__(19));\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6)(module)))\n\n/***/ },\n/* 19 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;'use strict';\n\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, module) {\n\t    'use strict';\n\n\t    // @ngInject\n\n\t    exports.lpTransactionsCurrency = function (lpCoreUtils) {\n\n\t        // @ngInject\n\t        this.$get = function ($http, $q) {\n\t            var config = {\n\t                defaultCurrencyEndpoint: '/mock/v1/currency-rates/default',\n\t                currencyListEndpoint: '/mock/v1/currency-rates',\n\t                disableExtraCurrencies: false\n\t            };\n\n\t            function API() {\n\t                /**\n\t                 * Constructor for the API\n\t                 * @constructor\n\t                 */\n\t                var TransactionsCurrencyModel = function TransactionsCurrencyModel() {\n\t                    this.groups = {\n\t                        defaultCurrency: 'aDefault',\n\t                        preferredCurrencies: 'bPreferred',\n\t                        rest: 'cOther'\n\t                    };\n\n\t                    this.orderedCurrencies = [];\n\t                };\n\n\t                /**\n\t                 * Loads the default currency from the service\n\t                 */\n\t                TransactionsCurrencyModel.prototype.loadDefaultCurrency = function () {\n\t                    var self = this;\n\t                    var deferred = $q.defer();\n\n\t                    $http.get(config.defaultCurrencyEndpoint).success(function (data) {\n\t                        deferred.resolve(data);\n\t                    }).error(function () {\n\t                        self.error = 'currencyServiceError';\n\t                    });\n\n\t                    return deferred.promise;\n\t                };\n\n\t                /**\n\t                 * Configures the currency models default currency based on data from the service\n\t                 * @param defaultCurrencyData data object\n\t                 */\n\t                TransactionsCurrencyModel.prototype.configureDefaultCurrency = function (defaultCurrencyData) {\n\t                    var dc = {\n\t                        currency_code: defaultCurrencyData.currency_code, //eslint-disable-line camelcase\n\t                        exchange_rate: 1.0, //eslint-disable-line camelcase\n\t                        group: this.groups.defaultCurrency\n\t                    };\n\n\t                    this.defaultCurrency = dc;\n\t                    this.selected = this.defaultCurrency;\n\n\t                    //add the default currency to the top of the list\n\t                    this.orderedCurrencies.push(this.defaultCurrency);\n\t                };\n\n\t                /**\n\t                 * Loads the rest of the list of currencies\n\t                 */\n\t                TransactionsCurrencyModel.prototype.loadOtherCurrencies = function () {\n\t                    var self = this;\n\t                    var deferred = $q.defer();\n\n\t                    $http.get(config.currencyListEndpoint, {\n\t                        params: {\n\t                            currency: this.defaultCurrency.currency_code\n\t                        }\n\t                    }).success(function (data) {\n\t                        if (data) {\n\t                            self.sortCurrencies(data);\n\t                        }\n\t                        deferred.resolve(data);\n\t                    }).error(function () {\n\t                        self.error = 'currencyServiceError';\n\t                    });\n\n\t                    return deferred.promise;\n\t                };\n\n\t                /**\n\t                 * Formats and sorts the list of currencies from the service\n\t                 * @param currencyData\n\t                 */\n\t                TransactionsCurrencyModel.prototype.sortCurrencies = function (currencyData) {\n\t                    //add the preferred currencies to the top of the list under default\n\t                    for (var i = 0; i < currencyData.preferred.length; i++) {\n\t                        currencyData.preferred[i].group = this.groups.preferredCurrencies;\n\t                    }\n\n\t                    this.orderedCurrencies.push.apply(this.orderedCurrencies, currencyData.preferred);\n\n\t                    if (!config.disableExtraCurrencies) {\n\t                        for (var j = 0; j < currencyData.rest.length; j++) {\n\t                            currencyData.rest[j].group = this.groups.rest;\n\t                        }\n\n\t                        currencyData.rest.sort(function (a, b) {\n\t                            //sort rest of currencies alphabetically\n\t                            var currencyA = a.currency_code.toLowerCase(),\n\t                                currencyB = b.currency_code.toLowerCase();\n\n\t                            if (currencyA < currencyB) {\n\t                                return -1;\n\t                            } else if (currencyA > currencyB) {\n\t                                return 1;\n\t                            } else {\n\t                                return 0;\n\t                            }\n\t                        });\n\n\t                        //once the list has been sorted, and if it should be added, add the rest of the currencies to the list\n\t                        this.orderedCurrencies.push.apply(this.orderedCurrencies, currencyData.rest);\n\t                    }\n\t                };\n\n\t                /**\n\t                 * Finds a currency by Currency name\n\t                 * @param currencyCode\n\t                 */\n\t                TransactionsCurrencyModel.prototype.findCurrency = function (currencyCode) {\n\t                    return lpCoreUtils.find(this.orderedCurrencies, function (currency) {\n\t                        return currency.currency_code === currencyCode;\n\t                    });\n\t                };\n\n\t                /**\n\t                 * Selected a currency by Currency Name\n\t                 * @param currencyCode the ISO code for the currency to select\n\t                 */\n\t                TransactionsCurrencyModel.prototype.selectCurrency = function (currencyCode) {\n\t                    this.selected = this.findCurrency(currencyCode);\n\t                };\n\n\t                return new TransactionsCurrencyModel();\n\t            }\n\n\t            return {\n\t                setConfig: function setConfig(options) {\n\t                    config = lpCoreUtils(options).chain().mapValues(lpCoreUtils.resolvePortalPlaceholders).defaults(config).value();\n\t                    return this;\n\t                },\n\n\t                getConfig: function getConfig(prop) {\n\t                    if (prop && lpCoreUtils.isString(prop)) {\n\t                        return config[prop];\n\t                    } else {\n\t                        return config;\n\t                    }\n\t                },\n\n\t                api: API\n\t            };\n\t        };\n\t    };\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ },\n/* 20 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(module) {'use strict';\n\n\t/**\n\t * Widget Transactions List Component\n\t * @module widget-transactions\n\t */\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, module) {\n\n\t    'use strict';\n\n\t    module.name = 'component.transactions-list';\n\n\t    var base = __webpack_require__(7);\n\t    var ui = __webpack_require__(21);\n\t    var tags = __webpack_require__(9);\n\n\t    var deps = [ui.name, tags.name];\n\n\t    module.exports = base.createModule(module.name, deps).directive(__webpack_require__(22)).directive(__webpack_require__(23));\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6)(module)))\n\n/***/ },\n/* 21 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_21__;\n\n/***/ },\n/* 22 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;'use strict';\n\n\t/**\n\t *  ----------------------------------------------------------------\n\t *  Copyright © Backbase B.V.\n\t *  ----------------------------------------------------------------\n\t *  Author : Backbase R&D - Amsterdam - New York\n\t *  Filename : details.js\n\t *  Description:  Directives for each type of detail\n\t *  ----------------------------------------------------------------\n\t */\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports) {\n\n\t    'use strict';\n\n\t    exports.lpTransactionDetailsAddress = function () {\n\t        var template = ['<div class=\"transaction-detail-label\" lp-i18n=\"Address:\"></div>', '<div>', '<span ng-show=\"address.street\">{{address.street}}</span><br/>', '<span ng-show=\"address.city\">{{address.city}}</span>', '<span ng-show=\"address.state\">, {{address.state}}</span><br/>', '<span ng-show=\"address.country\">{{address.country}}</span><br/>', '<span ng-show=\"address.zip\">{{address.zip}}</span>', '</div>'].join('');\n\n\t        return {\n\t            restrict: 'AE',\n\t            scope: {\n\t                address: '=lpTransactionDetailsAddress'\n\t            },\n\t            template: template,\n\t            link: function link(scope, element, attrs) {}\n\t        };\n\t    };\n\n\t    exports.lpTransactionDetailsDatetime = function () {\n\t        var template = ['<div class=\"transaction-detail-label\" lp-i18n=\"{{detailLabel || \\'Time\\'}}:\"></div>', '<div>{{datetime|date:\\'shortTime\\'}}<br/>{{datetime|date:\\'longDate\\'}}</div>'].join('');\n\n\t        return {\n\t            restrict: 'AE',\n\t            scope: {\n\t                detailLabel: '=',\n\t                datetime: '=lpTransactionDetailsDatetime'\n\t            },\n\t            template: template,\n\t            link: function link(scope, element, attrs) {}\n\t        };\n\t    };\n\n\t    exports.lpTransactionDetailsMap = function () {\n\t        var template = ['<img ng-src=\"{{location.mapUrl}}\" class=\"transaction-detail-map\" alt=\"{{\\'Location map\\' | translate}}\" />'].join('');\n\n\t        return {\n\t            restrict: 'AE',\n\t            scope: {\n\t                location: '=lpTransactionDetailsMap'\n\t            },\n\t            template: template,\n\t            link: function link(scope, element, attrs) {}\n\t        };\n\t    };\n\n\t    exports.lpTransactionDetailsVertical = function () {\n\t        var template = ['<div class=\"transaction-detail-vertical\">', '<div class=\"transaction-detail-label\" lp-i18n=\"{{detailLabel}}:\"></div>', '<span class=\"transaction-detail-value\">{{detailValue}}</span>', '</div>'].join('');\n\n\t        return {\n\t            restrict: 'AE',\n\t            scope: {\n\t                detailLabel: '=',\n\t                detailValue: '='\n\t            },\n\t            template: template,\n\t            link: function link(scope, element, attrs) {}\n\t        };\n\t    };\n\n\t    exports.lpTransactionDetailsHorizontal = function () {\n\t        var template = ['<div class=\"transaction-detail-vertical\">', '<span class=\"transaction-detail-label\" lp-i18n=\"{{detailLabel}}:\"></span> ', '<span class=\"transaction-detail-value\">{{detailValue}}</span>', '</div>'].join('');\n\n\t        return {\n\t            restrict: 'AE',\n\t            scope: {\n\t                detailLabel: '=',\n\t                detailValue: '='\n\t            },\n\t            template: template,\n\t            link: function link(scope, element, attrs) {}\n\t        };\n\t    };\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ },\n/* 23 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;'use strict';\n\n\t/**\n\t *  ----------------------------------------------------------------\n\t *  Copyright © Backbase B.V.\n\t *  ----------------------------------------------------------------\n\t *  Author : Backbase R&D - Amsterdam - New York\n\t *  Filename : directives.js\n\t *  Description:  Transaction list directive\n\t *  ----------------------------------------------------------------\n\t */\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports) {\n\n\t    'use strict';\n\n\t    var $ = window.jQuery;\n\t    var angular = __webpack_require__(7).ng;\n\t    var moment = __webpack_require__(24);\n\n\t    /**\n\t     * Check if the current browser is ES3 compliant only\n\t     *\n\t     * @returns {boolean}\n\t     */\n\t    function isES3Browser() {\n\t        var es3Browser = false;\n\t        try {\n\t            Object.defineProperty({}, 'x', {});\n\t        } catch (e) {\n\t            /* this is ES3 Browser */\n\t            es3Browser = true;\n\t        }\n\t        return es3Browser;\n\t    }\n\n\t    // @ngInject\n\t    exports.lpTransactionsList = function ($timeout, $compile, $templateCache, lpCoreBus, lpCoreUtils, lpCoreTemplate, lpTransactions) {\n\t        var customTemplateSrc = lpTransactions.getConfig('customTemplateSrc'),\n\t            groupTransactionsByDate = lpTransactions.getConfig('groupTransactionsByDate'),\n\t            customTemplateCache = customTemplateSrc && $templateCache.get(customTemplateSrc),\n\t            customTemplatePath = customTemplateSrc && lpCoreTemplate.resolvePath(customTemplateSrc),\n\t            enableVerticalScrollbar = function enableVerticalScrollbar(element) {\n\t            $timeout(function () {\n\t                // Handle fixed height with scrollbar\n\t                var rawElement = element.length ? element[0] : element;\n\t                var currentHeight = rawElement.offsetHeight;\n\n\t                if (currentHeight) {\n\t                    rawElement.style.height = currentHeight + 'px';\n\t                    rawElement.style.overflowY = 'auto';\n\t                }\n\t            });\n\t        };\n\n\t        function findTransactionElem(transaction) {\n\t            return $('#transaction-' + transaction.id);\n\t        }\n\n\t        function findTransactionCategoryElem(transaction) {\n\t            return findTransactionElem(transaction).find('[data-role=\"transactions-list-item-category\"]');\n\t        }\n\n\t        function linkFn(scope, elem, attrs) {\n\t            /*----------------------------------------------------------------*/\n\t            /* Private methods & variables\n\t             /*----------------------------------------------------------------*/\n\t            var isOldBrowser = isES3Browser(),\n\t                ie8CategoryFull = 160,\n\t                ie8CategoryCollapsed = 9;\n\n\t            scope.groupTransactionsByDate = groupTransactionsByDate;\n\t            /*----------------------------------------------------------------*/\n\t            /* Watchers\n\t             /*----------------------------------------------------------------*/\n\t            scope.$watch('accounts.selected', function (account) {\n\t                if (account) {\n\t                    scope.transactions.loadTransactions(account).then(function () {\n\t                        lpCoreBus.publish('widget-transactions:transactions:ready', scope.transactions.transactions);\n\t                        if (scope.showScrollbar) {\n\t                            enableVerticalScrollbar(elem.find('.transactions-list-wrapper'));\n\t                        }\n\t                    });\n\t                }\n\t            });\n\n\t            scope.isTodayOrYesterday = function (timestamp) {\n\t                var today = moment(new Date().getTime()).startOf('day'),\n\t                    yesterday = moment(today).subtract(1, 'days'),\n\t                    date = moment(parseInt(timestamp, 10)).startOf('day'),\n\t                    result = false;\n\t                if (today.isSame(date)) {\n\t                    scope.todayOrYesterday = 'Today';\n\t                    result = true;\n\t                } else if (yesterday.isSame(date)) {\n\t                    scope.todayOrYesterday = 'Yesterday';\n\t                    result = true;\n\t                }\n\t                return result;\n\t            };\n\n\t            scope.$on('$destroy', function () {\n\t                // clean up\n\t            });\n\n\t            /*----------------------------------------------------------------\n\t             /* Public methods & properties\n\t             /*----------------------------------------------------------------*/\n\t            scope.previewAll = false;\n\n\t            scope.transactionKeydown = function (evt, transaction) {\n\t                if (evt.which === 13 || evt.which === 32) {\n\t                    evt.preventDefault();\n\t                    evt.stopPropagation();\n\t                    scope.loadTransactionDetails(transaction);\n\t                    scope.openDetails(transaction);\n\t                }\n\t            };\n\n\t            scope.loadTransactionDetails = function (transaction) {\n\t                transaction.isLoading = true;\n\t                scope.transactions.loadTransactionDetails(transaction).then(function (details) {\n\t                    if (transaction.categoryId) {\n\t                        scope.transactionsCategories.getById(transaction.categoryId).then(function (category) {\n\t                            details.category = category;\n\t                        });\n\t                    }\n\t                })['finally'](function () {\n\t                    transaction.isLoading = false;\n\t                });\n\t            };\n\n\t            scope.loadMoreTransactions = function () {\n\t                scope.transactionsLoading = true;\n\t                if (scope.transactions.loading) {\n\t                    return;\n\t                }\n\t                scope.transactions.loadMoreTransactions().then(function () {\n\t                    scope.transactionsLoading = false;\n\t                });\n\t            };\n\n\t            scope.updateTransactionCategory = function (transaction, categoryId, similar) {\n\t                var promise;\n\t                if (!similar) {\n\t                    promise = scope.transactions.updateTransactionCategory(transaction, categoryId);\n\t                } else {\n\t                    promise = scope.transactions.updateSimilarTransactionCategory(transaction, categoryId);\n\t                }\n\n\t                promise.success(function () {});\n\t            };\n\n\t            scope.openDetails = function (transaction, selectedTab) {\n\t                var $transaction = elem.find('#transaction-details-' + transaction.id);\n\n\t                transaction.showDetails = !transaction.showDetails;\n\n\t                if (!$transaction.children().size()) {\n\t                    var $details = $(__webpack_require__(25));\n\t                    $transaction.append($details);\n\t                    $compile($details)($transaction.scope());\n\t                }\n\n\t                var setDetailTabValues = function setDetailTabValues(tabs, selectedDetailTab) {\n\t                    for (var tab in tabs) {\n\t                        if (tabs.hasOwnProperty(selectedDetailTab)) {\n\t                            tabs[tab] = false;\n\t                            if (tab === selectedDetailTab) {\n\t                                tabs[tab] = true;\n\t                            }\n\t                        }\n\t                    }\n\t                };\n\n\t                if (selectedTab === null || selectedTab === undefined) {\n\t                    selectedTab = 'details';\n\t                }\n\n\t                if (transaction.showDetails) {\n\t                    $timeout(function () {\n\t                        setDetailTabValues(transaction.detailTabs, selectedTab);\n\t                    }, 0);\n\t                }\n\t                if (selectedTab === 'details') {\n\t                    scope.loadTransactionDetails(transaction);\n\t                }\n\t                scope.closePreview(transaction);\n\n\t                if (scope.categorySmallLayout && transaction.showDetails) {\n\t                    $('body').animate({\n\t                        scrollTop: $('#transaction-' + transaction.id).offset().top - 5 - (scope.offsetTopCorrection || 0)\n\t                    }, 500);\n\t                }\n\n\t                // fix for chrome redraw issue\n\t                var transactionTabs = document.getElementById('transactions-tabs');\n\t                if (!scope.showDetails && transactionTabs) {\n\t                    transactionTabs.style.display = 'none';\n\t                    transactionTabs.style.display = 'block';\n\t                }\n\t            };\n\n\t            scope.selectDetailsTab = function (transaction) {\n\t                scope.loadTransactionDetails(transaction);\n\t            };\n\n\t            scope.openPreview = function (transaction) {\n\t                transaction.preview = true;\n\t                if (!transaction.showDetails) {\n\t                    if (isOldBrowser) {\n\t                        // support IE8\n\t                        $('#transaction-' + transaction.id + ' .categories').width(ie8CategoryFull);\n\t                    } else {\n\t                        $('#transaction-' + transaction.id).addClass('preview');\n\t                    }\n\t                }\n\t            };\n\n\t            scope.closePreview = function (transaction) {\n\t                transaction.preview = false;\n\n\t                if (isOldBrowser) {\n\t                    // support IE8\n\t                    $('#transaction-' + transaction.id + ' .categories').width(ie8CategoryCollapsed);\n\t                } else {\n\t                    $('#transaction-' + transaction.id).removeClass('preview');\n\t                }\n\n\t                findTransactionElem(transaction).removeClass('lp-transactions-list-item-head-noanim').css('padding-left', '');\n\n\t                findTransactionCategoryElem(transaction).css('width', '');\n\t            };\n\n\t            scope.categoryClick = function (event, transaction) {\n\t                if (event !== null && event !== undefined) {\n\t                    event.preventDefault();\n\t                    event.stopPropagation();\n\t                }\n\n\t                scope.openDetails(transaction, 'categories');\n\t            };\n\n\t            scope.categorySwipeStart = function swipeStart(event, transaction) {\n\t                findTransactionElem(transaction).addClass('lp-transactions-list-item-head-noanim');\n\t            };\n\n\t            scope.categorySwipe = function swipe(event, transaction) {\n\t                var $category = findTransactionCategoryElem(transaction);\n\t                var width = Math.max(event.deltaX, 0);\n\t                var calculatedWidth;\n\n\t                $category.width(width);\n\t                calculatedWidth = $category.width();\n\n\t                findTransactionElem(transaction).css('padding-left', calculatedWidth);\n\t            };\n\n\t            scope.categorySwipeEnd = function swipeEnd(event, transaction) {\n\t                scope.closePreview(transaction);\n\t            };\n\n\t            // Service is returning Array[0] when empty\n\t            // so we have to check for that\n\t            var parseTransactionAttribute = function parseTransactionAttribute(attribute) {\n\t                if (lpCoreUtils.isString(attribute)) {\n\t                    return lpCoreUtils.trim(attribute);\n\t                } else if (lpCoreUtils.isArray(attribute) && !attribute.length) {\n\t                    return '';\n\t                }\n\n\t                return attribute || '';\n\t            };\n\n\t            scope.getTransactionDescription = function (transaction) {\n\t                var counterpartyName = parseTransactionAttribute(transaction.counterpartyName);\n\t                var description = parseTransactionAttribute(transaction.transactionDescription);\n\t                var type = parseTransactionAttribute(transaction.transactionType);\n\n\t                return counterpartyName || description || type;\n\t            };\n\n\t            scope.getTransactionSubDescription = function (transaction) {\n\t                var accountName = parseTransactionAttribute(transaction.accountName);\n\t                var counterpartyName = parseTransactionAttribute(transaction.counterpartyName);\n\t                var description = parseTransactionAttribute(transaction.transactionDescription);\n\t                var transactionType = parseTransactionAttribute(transaction.transactionType);\n\n\t                if (accountName) {\n\t                    return accountName;\n\t                } else if (counterpartyName || description) {\n\t                    return transactionType;\n\t                } else {\n\t                    return '';\n\t                }\n\t            };\n\n\t            scope.toggleCategoryView = function () {\n\t                lpCoreUtils.safeApply(scope, function () {\n\t                    scope.previewAll = !scope.previewAll;\n\t                });\n\t            };\n\n\t            lpCoreBus.subscribe('launchpad-retail.module-transactions.toggleCategoryView', scope.toggleCategoryView);\n\t        }\n\n\t        /**\n\t         * Compile function\n\t         * @param  {object} el    angular dom el object\n\t         * @param  {object} attrs el attributes\n\t         * @return {function}       link controller function\n\t         */\n\t        function compileFn(elem, attrs) {\n\t            return linkFn;\n\t        }\n\n\t        // Directive configuration\n\t        return {\n\t            scope: {\n\t                accounts: '=lpAccounts',\n\t                transactions: '=lpTransactions',\n\t                transactionsCategories: '=lpTransactionsCategories',\n\t                categoryLayout: '=',\n\t                showCategories: '=',\n\t                showTransactionIcons: '=',\n\t                showDatesAllTransactions: '=',\n\t                hideDetailsPreference: '=',\n\t                offsetTopCorrection: '=?',\n\t                showScrollbar: '='\n\t            },\n\t            restrict: 'AE',\n\t            compile: compileFn,\n\t            templateUrl: !customTemplateCache && customTemplatePath,\n\t            template: customTemplateCache || !customTemplateSrc && __webpack_require__(26)\n\t        };\n\t    };\n\n\t    // @ngInject\n\t    exports.lpTransactionsListDetails = function ($templateCache, $timeout, lpCoreUtils) {\n\t        function linkFn(scope, elem, attrs) {}\n\n\t        function compileFn(elem, attrs) {\n\t            return linkFn;\n\t        }\n\n\t        return {\n\t            restrict: 'AE',\n\t            scope: {\n\t                transaction: '=',\n\t                categories: '=',\n\t                isLoading: '='\n\t            },\n\t            compile: compileFn,\n\t            template: __webpack_require__(27)\n\t        };\n\t    };\n\n\t    // @ngInject\n\t    exports.lpStickyTitle = function ($timeout, lpCoreBus) {\n\t        function linkFn(scope, element, attrs) {\n\t            var $sticky;\n\t            var onScrolling;\n\t            var outerHeight;\n\n\t            scope.isSpecialDate = function () {\n\t                return scope.isTodayOrYesterday({ bookingDateTime: scope.transaction.bookingDateTime });\n\t            };\n\n\t            onScrolling = function onScrolling() {\n\t                var stickies = document.querySelectorAll('.followMeBar');\n\t                for (var i = 0, len = stickies.length; i < len; i++) {\n\t                    var domSticky = stickies[i];\n\t                    var next = i + 1;\n\t                    var prev = i - 1;\n\t                    var $thisSticky = angular.element(domSticky);\n\t                    var scrollTop = window.scrollY;\n\t                    var stickyPosition = parseInt(domSticky.getAttribute('data-original-position'), 10);\n\t                    var originalHeight = parseInt(domSticky.getAttribute('data-original-height'), 10);\n\n\t                    var domNextSticky;\n\t                    var nextStickyPosition;\n\n\t                    domNextSticky = stickies[next];\n\n\t                    var domPrevSticky;\n\t                    var $prevSticky;\n\n\t                    domPrevSticky = stickies[prev];\n\t                    $prevSticky = angular.element(domPrevSticky);\n\n\t                    if (isNaN(stickyPosition)) {\n\t                        stickyPosition = $(domSticky).offset().top;\n\t                    }\n\t                    if (isNaN(originalHeight)) {\n\t                        originalHeight = $(domSticky).outerHeight();\n\t                    }\n\n\t                    if (stickyPosition <= scrollTop) {\n\t                        $thisSticky.addClass('fixed');\n\t                        if (domNextSticky) {\n\t                            nextStickyPosition = parseInt(domNextSticky.getAttribute('data-original-position'), 10) - originalHeight;\n\n\t                            if (stickyPosition >= nextStickyPosition) {\n\n\t                                $thisSticky.addClass('absolute').css('top', nextStickyPosition + 'px');\n\t                            }\n\t                        }\n\t                    } else {\n\t                        $thisSticky.removeClass('fixed');\n\t                        if (domPrevSticky) {\n\n\t                            if (scrollTop <= stickyPosition - originalHeight) {\n\n\t                                $prevSticky.removeClass('absolute').css('top', parseInt(domNextSticky.getAttribute('data-original-position'), 10) + 'px');\n\t                            }\n\t                        }\n\t                    }\n\t                }\n\t            };\n\n\t            $sticky = element.find('.followMeBar').wrap('<div class=\"followWrap\"/>');\n\t            var domSticky = $sticky[0];\n\n\t            $timeout(function () {\n\t                outerHeight = $(domSticky).outerHeight();\n\n\t                domSticky.setAttribute('data-original-position', $(domSticky).offset().top);\n\t                domSticky.setAttribute('data-original-height', outerHeight);\n\t                domSticky.parentNode.style.height = outerHeight + 'px';\n\t            }, 100);\n\n\t            angular.element(window).off('touchmove.stickies, touchend.stickies, scroll.stickies').on('touchmove.stickies, touchend.stickies, scroll.stickies', function () {\n\t                onScrolling();\n\t            });\n\t        }\n\n\t        function compileFn(elem, attrs) {\n\t            return linkFn;\n\t        }\n\n\t        return {\n\t            restrict: 'AE',\n\t            priority: 400,\n\t            scope: {\n\t                transaction: '=',\n\t                todayOrYesterday: '=',\n\t                isTodayOrYesterday: '&'\n\t            },\n\t            compile: compileFn,\n\t            template: function template() {\n\t                return '' + '<div class=\"header followMeBar\">' + '<span ng-if=\"isSpecialDate()\">{{todayOrYesterday}}, </span>' + '<span itemprop=\"dateTimeMonth\">{{transaction.bookingDateTime | date:\\'MMM\\'}}</span> ' + '<span itemprop=\"dateTimeDate\">{{transaction.bookingDateTime | date:\\'dd\\'}}</span>' + '</div>';\n\t            }\n\t        };\n\t    };\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ },\n/* 24 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_24__;\n\n/***/ },\n/* 25 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;'use strict';\n\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function () {\n\t  'use strict';\n\n\t  var template = '' + '<div class=\"col-xs-12 col-sm-12\">' + '<div alert=\"alert\" class=\"alert alert-info\" ng-show=\"transaction.errorCode\">' + '<span lp-i18n=\"{{transaction.errorCode}}\"></span>' + '</div>' + '<ul tabset=\"tabset\" class=\"transaction-details-navbar\" ng-if=\"showCategories && transaction.showDetails && !hideDetailsPreference\">' + '<li tab=\"tab\" select=\"selectDetailsTab(transaction)\" active=\"transaction.detailTabs.details\">' + '<span tab-heading=\"tab-heading\" lp-i18n=\"Details\"></span>' + '<div lp-transactions-list-details=\"lp-transactions-list-details\" transaction=\"transaction\" categories=\"transactionsCategories\" is-loading=\"transaction.isLoading\"></div>' + '</li>' + '<li tab=\"tab\" active=\"transaction.detailTabs.categories\">' + '  <span tab-heading=\"tab-heading\" lp-i18n=\"Categories\"></span>' + '  <div lp-category-select=\"lp-category-select\" ng-model=\"transactionsCategories\" transaction=\"transaction\" update=\"updateTransactionCategory\" small-layout=\"categoryLayout === \\'small\\'\" offset-top-correction=\"offsetTopCorrection\" class=\"panel-body no-padding\"></div>' + '</li>' + '</ul>' + '<div class=\"panel-body no-padding\" ng-if=\"showCategories && transaction.showDetails && hideDetailsPreference\">' + '<div lp-category-select=\"lp-category-select\" ng-model=\"transactionsCategories\" transaction=\"transaction\" update=\"updateTransactionCategory\" small-layout=\"categoryLayout === \\'small\\'\" offset-top-correction=\"offsetTopCorrection\" class=\"panel-body no-padding\"></div>' + '</div>' + '<div lp-transactions-list-details=\"lp-transactions-list-details\" transaction=\"transaction\" categories=\"transactionsCategories\" is-loading=\"transaction.isLoading\" ng-if=\"!showCategories && transaction.showDetails && !hideDetailsPreference\"></div>' + '</div>';\n\n\t  return template;\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ },\n/* 26 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;'use strict';\n\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function () {\n\t  'use strict';\n\t  //!!! showTransactionIcons\n\n\t  var template = '' + '<div class=\"lp-transactions-list lp-transactions-list-{{categoryLayout}} lp-widget-body\" ng-class=\"{logohidden: hideLogo, \\'preview-all\\': previewAll, \\'lp-transactions-list-no-icons\\': !showTransactionIcons }\" progress-indicator=\"transactions.loading\">' + '<div class=\"panel-message\" ng-if=\"transactions.noTransactionsFound()\" role=\"alert\">' + '<p>' + 'There are no transactions to display ' + '<span ng-show=\"!transactions.isSearching()\">for this account</span>' + '<span ng-show=\"transactions.isSearching()\">for this search</span>.' + '</p>' + '</div>' + '<div lp-freshness-message=\"lp-freshness-message\"></div>' + '<div class=\"transactions-list-wrapper\" lp-infinite-scroll=\"loadMoreTransactions()\" lp-infinite-scroll-disabled=\"!showScrollbar || transactions.loading || !accounts.selected\" lp-infinite-scroll-end=\"!transactions.moreAvailable\">' + '<div id=\"transactions-list\" role=\"presentation\" class=\"list-group list-view transactions-list lp-transactions-list-items\">' + '<div class=\"lp-transactions-list-item list-group-item list-view-row expandable clearfix\" ng-class=\"{ open: transaction.showDetails }\" ng-repeat=\"transaction in transactions.transactions track by $index\">' + '<div lp-sticky-title=\"lp-sticky-title\"' + '     ng-if=\"transaction.newDate && groupTransactionsByDate\"' + '     transaction=\"transaction\"' + '     group-transactions-by-date=\"groupTransactionsByDate\"' + '     today-or-yesterday=\"todayOrYesterday\"' + '     is-today-or-yesterday=\"isTodayOrYesterday(bookingDateTime)\"></div>' + '<div class=\"lp-transactions-list-item-head list-view-container cursor-pointer clearfix\" ng-click=\"openDetails(transaction)\" tabindex=\"0\" ng-keydown=\"transactionKeydown($event, transaction)\" ng-mouseleave=\"closePreview(transaction)\" role=\"button\" id=\"transaction-{{transaction.id}}\" aria-expanded=\"{{ !!transaction.showDetails }}\" aria-controls=\"transaction-details-{{transaction.id}}\">' +\n\t  // Transaction category\n\t  '<div class=\"lp-transactions-list-item-category categories\" ng-mouseover=\"categoryLayout == \\'small\\' || openPreview(transaction)\" ng-if=\"showCategories\">' + '<div class=\"lp-transactions-list-category\" data-role=\"transactions-list-item-category\" lp-category-display=\"lp-category-display\" lp-category-view=\"previewAll\" lp-category-list=\"transactionsCategories.categories\" ng-model=\"transaction\" category-click=\"categoryClick($event, transaction)\" category-start-swipe=\"categorySwipeStart($event, transaction)\" category-swipe=\"categorySwipe($event, transaction)\" category-end-swipe=\"categorySwipeEnd($event, transaction)\"></div>' + '</div>' +\n\n\t  // Content\n\t  '<div class=\"lp-transactions-list-item-content\" data-role=\"transactions-item-info\">' +\n\t  // Transaction date\n\t  '<div class=\"lp-transactions-list-item-date column\" ng-mouseover=\"categoryLayout == \\'small\\' || openPreview(transaction)\">' + '<div class=\"centered\">' + '<div class=\"lp-transactions-list-item-date-value\" aria-hidden=\"true\" ng-if=\"!groupTransactionsByDate && (transaction.newDate || showDatesAllTransactions)\">' + '<span itemprop=\"dateTimeMonth\">{{transaction.bookingDateTime | date:\\'MMM\\'}}</span>' + '<br />' + '<span itemprop=\"dateTimeDate\">{{transaction.bookingDateTime | date:\\'dd\\'}}</span>' + '</div>' + '</div>' + '</div>' +\n\n\t  // Transaction icon\n\t  '<div class=\"lp-transactions-list-item-icon column\" ng-if=\"showTransactionIcons\">' + '<div class=\"centered\">' + '<div class=\"lp-transaction-icon gray-image-hover\">' + '<img ng-if=\"transaction.counterPartyLogoPath\" ng-src=\"{{transaction.counterPartyLogoPath}}\" width=\"35\" height=\"35\" alt=\"\"/>' + '</div>' + '</div>' + '</div>' +\n\n\t  // Transaction summary\n\t  '<div class=\"lp-transactions-list-item-summary column\">' + '<div class=\"centered\">' + '<div class=\"lp-transactions-list-item-name counterparty-name\" itemProp=\"counterpartyName\">' + '<span class=\"sr-only\">Name</span>{{getTransactionDescription(transaction)}}' + '</div>' + '<div class=\"lp-transactions-list-item-type text-muted\" itemProp=\"transactionType\">' + '<span class=\"sr-only\">Transaction type</span>' + '{{getTransactionSubDescription(transaction)}}' + '</div>' + '<div class=\"lp-transactions-list-item-info text-muted\">' + '<span class=\"sr-only\" lp-i18n=\"Date\"></span>' + '{{transaction.bookingDateTime | date:\\'MMM\\'}} {{transaction.bookingDateTime | date:\\'dd\\'}} ' + '<span class=\"h6 text-muted transactions-list-item-amount\" itemProp=\"transactionAmount\" lp-amount=\"transaction.transactionAmount\" lp-amount-currency=\"transaction.transactionCurrency\"></span>' + '</div>' + '</div>' + '</div>' +\n\n\t  // Transaction amount\n\t  '<div class=\"lp-transactions-list-item-amount column\">' + '<div class=\"centered\">' + '<span class=\"sr-only\">Amount</span>' + '<span class=\"lp-transactions-list-item-amount-value\" itemProp=\"transactionAmount\" lp-amount=\"transaction.transactionAmount\" lp-amount-currency=\"transaction.transactionCurrency\"></span>' + '</div>' + '</div>' + '</div>' + '<div class=\"lp-transactions-list-item-toggle\"></div>' + '</div>' + '<div class=\"clearfix details lp-transactions-list-item-details transaction-details\" id=\"transaction-details-{{transaction.id}}\" aria-labelledby=\"transaction-details-data-{{transaction.id}}\"></div>' + '</div>' + '</div>' + '<div ng-if=\"showScrollbar && transactions.loading\" role=\"alert\">' + '<div class=\"text-center\" lp-i18n=\"Loading transactions...\"></div>' + '</div>' + '<div ng-if=\"!showScrollbar && transactions.transactions.length\">' + '<div ng-show=\"transactions.allowMoreResults()\">' + '<p class=\"lp-transactions-list-more text-center\">' + '<a href=\"\" class=\"lp-transactions-list-more-button cursor-pointer\" tabindex=\"0\" ng-click=\"loadMoreTransactions()\" lp-i18n=\"Show more\"></a>' + '</p>' + '</div>' + '</div>' + '</div>' + '</div>';\n\n\t  return template;\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ },\n/* 27 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;'use strict';\n\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, module) {\n\t    'use strict';\n\n\t    return ['<div class=\"lp-transaction-details container-fluid\">', '<div progress-indicator=\"progress-indicator\" is-loading=\"isLoading\">', '<div ng-if=\"transaction.details.bookingDateTime && transaction.details.address\" class=\"row\">', '<div ng-if=\"transaction.details.bookingDateTime\" class=\"col-xs-6 col-md-3\" lp-transaction-details-datetime=\"transaction.details.bookingDateTime\"></div>', '<div ng-if=\"transaction.details.address\" class=\"col-xs-6 col-md-3\" lp-transaction-details-address=\"transaction.details.address\"></div>', '<div ng-if=\"transaction.details.location\" class=\"col-xs-6 col-md-3\" lp-transaction-details-map=\"transaction.details.location\"></div>', '<div ng-if=\"transaction.details.merchantType || transaction.details.category\" class=\"col-xs-6 col-md-3\">', '<div ng-show=\"transaction.details.merchantType\" lp-transaction-details-vertical detail-label=\"\\'Merchant\\'\" detail-value=\"transaction.details.merchantType\"></div>', '<div ng-show=\"!transaction.details.merchantType\" lp-transaction-details-vertical detail-label=\"\\'Category\\'\" detail-value=\"transaction.details.category.name\"></div>', '</div>', '</div>', '<div ng-if=\"!(transaction.details.bookingDateTime && transaction.details.address)\" class=\"row\">', '<div class=\"alert alert-warning col-xs-12\">', '<p><i class=\"lp-icon lp-icon-alert-warning\"></i> <span lp-i18n=\"Specific details regarding this transaction are currently unavailable, please contact us for further information.\"></span></p>', '</div>', '</div>', '<div ng-if=\"transaction.details.transactionId\" class=\"row transaction-detail-reference\">', '<div class=\"col-xs-12 col-md-12\" lp-transaction-details-horizontal detail-label=\"\\'Transaction Reference\\'\" detail-value=\"transaction.details.transactionId\"></div>', '</div>', '</div>', '</div>'].join('');\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ },\n/* 28 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(module) {'use strict';\n\n\t/**\n\t * Widget Transactions List Component\n\t * @module widget-transactions\n\t */\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, module) {\n\n\t    'use strict';\n\n\t    module.name = 'component.transactions-list-authorizations';\n\n\t    var base = __webpack_require__(7);\n\n\t    var deps = [];\n\n\t    module.exports = base.createModule(module.name, deps).provider(__webpack_require__(29)).directive(__webpack_require__(30));\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6)(module)))\n\n/***/ },\n/* 29 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;'use strict';\n\n\t/**\n\t *  ----------------------------------------------------------------\n\t *  Copyright © Backbase B.V.\n\t *  ----------------------------------------------------------------\n\t *  Author : Backbase R&D - Amsterdam - New York\n\t *  Filename : providers.js\n\t *  Description: Retrieves a list of card transactions under authorization\n\t *  ----------------------------------------------------------------\n\t */\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, module) {\n\n\t    'use strict';\n\n\t    // @ngInject\n\n\t    exports.lpTransactionsAuth = function () {\n\n\t        // @ngInject\n\t        this.$get = function ($http, lpCoreUtils, lpCoreError, $q, lpTransactions) {\n\n\t            var config = {\n\t                pageSize: 20,\n\t                from: 1,\n\t                sort: '-bookingDateTime'\n\t            };\n\t            var utils = lpCoreUtils;\n\n\t            function API() {\n\n\t                var TransactionsAuthModel = function TransactionsAuthModel() {\n\t                    this.from = config.from;\n\t                    this.sort = config.sort;\n\t                    this.transactions = [];\n\t                    this.account = null;\n\t                    this.errorCode = null;\n\t                };\n\n\t                /**\n\t                 * Clears list of transactions and resets from counter\n\t                 */\n\t                TransactionsAuthModel.prototype.clearTransactionsAuthList = function () {\n\t                    this.transactions = [];\n\t                    this.moreAvailable = true;\n\t                    this.from = config.from;\n\t                    return this;\n\t                };\n\n\t                /**\n\t                 * Loads a new set of transactions for the given account\n\t                 * @param account\n\t                 */\n\t                TransactionsAuthModel.prototype.loadTransactionsAuth = function (account) {\n\t                    this.clearTransactionsAuthList();\n\t                    this.account = account;\n\t                    return this.loadMoreTransactionsAuth();\n\t                };\n\n\t                // TODO: add pre-processing (if needed)\n\t                TransactionsAuthModel.prototype.preprocessTransactions = function (list) {\n\t                    // validate collection\n\t                    if (utils.isArray(list)) {\n\t                        utils.forEach(list, function (item, index) {\n\t                            var t;\n\n\t                            // handle ID property\n\t                            if (!item.id) {\n\t                                list[index].id = utils.uniqueId();\n\t                            }\n\n\t                            // handle category ID property\n\t                            if (!item.categoryId) {\n\t                                list[index].categoryId = '1';\n\t                            }\n\n\t                            // handle Debit property\n\t                            if (!item.creditDebitIndicator || item.creditDebitIndicator === 'DBIT') {\n\t                                list[index].creditDebitIndicator = 'DBIT';\n\t                                item.amount *= -1;\n\t                            }\n\n\t                            // handle date property\n\t                            if (item.dateTime) {\n\t                                // To comply standard in a strict way --> FF can't parse yyyy-mm-dd,\n\t                                t = item.dateTime.replace(/-/g, '/');\n\t                                list[index].dateTime = Date.parse(t);\n\t                            }\n\t                        });\n\t                    }\n\n\t                    return list;\n\t                };\n\n\t                /**\n\t                 * Load transactions\n\t                 * @param account (pass account only for first load)\n\t                 */\n\t                TransactionsAuthModel.prototype.loadMoreTransactionsAuth = function () {\n\n\t                    var self = this;\n\n\t                    if (!this.account) {\n\t                        lpCoreError.throwException(new Error('Auth list: No account specified'));\n\t                    }\n\t                    var accountHoldsEndpoint = lpTransactions.getConfig('accountHoldsEndpoint');\n\t                    if (!accountHoldsEndpoint) {\n\t                        // accountHolds endpoint is not specified\n\t                        return $q.when([]);\n\t                    }\n\n\t                    var queryParams = {\n\t                        f: this.from,\n\t                        l: config.pageSize\n\t                    };\n\n\t                    this.loading = true;\n\n\t                    //the minus here means descending order\n\t                    queryParams.sort = this.sort;\n\n\t                    //update paging info\n\t                    this.from = this.from + config.pageSize;\n\n\t                    return $http.get(accountHoldsEndpoint, {\n\t                        data: {\n\t                            accountIds: this.account.ids || this.account.id || ''\n\t                        },\n\t                        params: queryParams\n\t                    }).success(function (data) {\n\t                        self.errorCode = null;\n\n\t                        //need to normalize null data to empty array\n\t                        if (data === null || data === 'null') {\n\t                            data = [];\n\t                        }\n\t                        self.transactions = self.preprocessTransactions(data);\n\n\t                        return self.transactions;\n\t                    }).error(function (data) {\n\t                        self.errorCode = data.errorCode || 500;\n\n\t                        return data;\n\t                    })['finally'](function () {\n\t                        self.loading = false;\n\t                    });\n\t                };\n\n\t                /**\n\t                 * Checks for errors during download and ensures that no transactions have been loaded\n\t                 * @returns {boolean}\n\t                 */\n\t                TransactionsAuthModel.prototype.noTransactionsAuthFound = function () {\n\t                    return !this.loading && this.transactions.length === 0 && !this.errorCode;\n\t                };\n\n\t                return new TransactionsAuthModel();\n\t            }\n\n\t            return {\n\t                api: API\n\t            };\n\t        };\n\t    };\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ },\n/* 30 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;'use strict';\n\n\t/**\n\t *  ----------------------------------------------------------------\n\t *  Copyright © Backbase B.V.\n\t *  ----------------------------------------------------------------\n\t *  Author : Backbase R&D - Amsterdam - New York\n\t *  Filename : directives.js\n\t *  Description:  On Hold Funds list directive\n\t *  ----------------------------------------------------------------\n\t */\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports) {\n\n\t    'use strict';\n\n\t    var $ = window.jQuery;\n\n\t    // @ngInject\n\t    exports.lpTransactionsAuthorizationsList = function ($templateCache, lpTransactionsAuth) {\n\n\t        $templateCache.put('$transactions-auth/list.html', __webpack_require__(31));\n\n\t        /**\n\t         * Main link function\n\t         *\n\t         * @param scope\n\t         * @param elem\n\t         * @param attrs\n\t         */\n\t        function linkFn(scope, elem, attrs) {\n\n\t            // init model API\n\t            scope.transactions = lpTransactionsAuth.api();\n\n\t            // hide/show variable\n\t            scope.listVisible = true;\n\n\t            // show toggler\n\t            scope.showToggle = true;\n\n\t            // watch selected account change\n\t            scope.$watch('accounts.selected', function (account) {\n\t                if (account) {\n\t                    scope.transactions.loadTransactionsAuth(account)['catch'](function (error) {\n\t                        // display error if needed\n\t                        scope.serverError = true;\n\t                    });\n\t                }\n\t            });\n\n\t            scope.openPreview = function (transaction) {\n\t                transaction.preview = true;\n\t                $('#transaction-' + transaction.id).addClass('preview');\n\t            };\n\n\t            scope.closePreview = function (transaction) {\n\t                transaction.preview = false;\n\t                $('#transaction-' + transaction.id).removeClass('preview');\n\t            };\n\t        }\n\n\t        /**\n\t         * Compile function\n\t         * @param  {object}   el angular dom el object\n\t         * @param  {object}   attrs el attributes\n\t         * @return {function} link controller function\n\t         */\n\t        function compileFn(elem, attrs) {\n\t            return linkFn;\n\t        }\n\n\t        // Directive configuration\n\t        return {\n\t            scope: {\n\t                accounts: '=lpAccounts',\n\t                transactionsCategories: '=lpTransactionsCategories',\n\t                categoryLayout: '=',\n\t                showCategories: '='\n\t            },\n\t            restrict: 'AE',\n\t            compile: compileFn,\n\t            template: $templateCache.get('$transactions-auth/list.html')\n\t        };\n\t    };\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ },\n/* 31 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;'use strict';\n\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, module) {\n\t    'use strict';\n\n\t    var template = '' + '<div ng-if=\"transactions.transactions.length > 0\" class=\"lp-transactions-list-authorizations\">' + '    <h5 ng-click=\"(listVisible = !listVisible)\" class=\"lp-auth-header text-muted\">{{ \"Authorizations and Funds on Hold\" | translate}}&nbsp;' + '        <i ng-show=\"listVisible\" class=\"lp-icon lp-icon-caret-up\"></i>' + '        <i ng-show=\"!listVisible\" class=\"lp-icon lp-icon-caret-down\"></i>' + '    </h5>' + '    <div ng-show=\"!listVisible\" class=\"text-warning text-center\">{{ \"List of on-hold transactions is collapsed. Click the header above to show it...\" }}</div><br ng-show=\"!listVisible\" />' + '    <ul ng-show=\"listVisible\" id=\"transactions-list-auth\" class=\"list-group list-view transactions-list\">' + '        <li class=\"list-group-item list-view-row clearfix\"' + '            ng-repeat=\"transaction in transactions.transactions track by $index\">' + '            <div id=\"transaction-{{transaction.id}}\" class=\"list-view-container clearfix\">' + '               <div class=\"categories\" ng-mouseover=\"openPreview(transaction)\" ng-mouseout=\"closePreview(transaction)\" ng-if=\"showCategories\">' + '                   <div lp-category-display=\"lp-category-display\" lp-category-view=\"previewAll\" lp-category-list=\"transactionsCategories.categories\" ng-model=\"transaction\"></div>' + '               </div>' + '               <div class=\"info\">' + '                   <div class=\"col-md-8 col-sm-8 col-xs-8 column\">' + '                       <div class=\"centered\">' + '                           <div class=\"h4\">{{ transaction.beneficiary }}</div>' + '                           <div class=\"h6 text-muted\">{{ transaction.dateTime | date }}</div>' + '                       </div>' + '                   </div>' + '                   <div class=\"col-md-4 col-sm-4 col-xs-4 column text-center\">' + '                       <div class=\"centered\">' + '                           <span class=\"sr-only\">Amount</span>' + '                           <span class=\"h4\" itemProp=\"transactionAmount\"' + '                               lp-amount=\"transaction.amount\"' + '                               lp-amount-currency=\"transaction.currencyCode\"></span>' + '                       </div>' + '                   </div>' + '               </div>' + '            </div>' + '        </li>' + '    </ul>' + '    <h3 class=\"lp-auth-footer\"></h3>' + '</div>';\n\n\t    return template;\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ },\n/* 32 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(module) {'use strict';\n\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, module) {\n\n\t    'use strict';\n\n\t    module.name = 'component.transactions-search';\n\n\t    var base = __webpack_require__(7);\n\t    var ui = __webpack_require__(21);\n\t    var tags = __webpack_require__(9);\n\t    var contacts = __webpack_require__(33);\n\n\t    var deps = [ui.name, tags.name, contacts.name];\n\n\t    module.exports = base.createModule(module.name, deps).controller(__webpack_require__(34)).directive(__webpack_require__(35)).factory(__webpack_require__(39));\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6)(module)))\n\n/***/ },\n/* 33 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_33__;\n\n/***/ },\n/* 34 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;'use strict';\n\n\t/**\n\t *  ----------------------------------------------------------------\n\t *  Copyright © Backbase B.V.\n\t *  ----------------------------------------------------------------\n\t *  Author : Backbase R&D - Amsterdam - New York\n\t *  Filename : controllers.js\n\t *  Description:  Transactions Search Component Controllers\n\t *  ----------------------------------------------------------------\n\t */\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports) {\n\t    'use strict';\n\n\t    // @ngInject\n\n\t    exports.lpExportTransactions = function ($scope, $modalInstance) {\n\t        $scope.download = function (option) {\n\t            $modalInstance.close(option);\n\t        };\n\n\t        $scope.cancel = function () {\n\t            $modalInstance.dismiss('cancel');\n\t        };\n\t    };\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ },\n/* 35 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;'use strict';\n\n\t/**\n\t *  ----------------------------------------------------------------\n\t *  Copyright © Backbase B.V.\n\t *  ----------------------------------------------------------------\n\t *  Author : Backbase R&D - Amsterdam - New York\n\t *  Filename : directives.js\n\t *  Description:  Transactions Search Component\n\t *  ----------------------------------------------------------------\n\t */\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports) {\n\n\t    'use strict';\n\n\t    var $ = window.jQuery;\n\n\t    // @ngInject\n\t    exports.lpTransactionsSearch = function ($templateCache, $modal, lpCoreBus, lpCoreUtils) {\n\t        $templateCache.put('$transactions/sortDropdownOption.html', __webpack_require__(36));\n\n\t        function linkFn(scope, elem, attrs) {\n\n\t            /*----------------------------------------------------------------*/\n\t            /* Private methods & variables\n\t            /*----------------------------------------------------------------*/\n\t            var currentSuggestion;\n\t            var suggestionType = {\n\t                date: function date(result) {\n\t                    var data = {\n\t                        fromDate: result.from.getTime(),\n\t                        toDate: result.to.getTime()\n\t                    };\n\t                    lpCoreBus.publish('launchpad-retail.transactionsDateSearch', data);\n\t                    return data;\n\t                },\n\n\t                amount: function amount(result) {\n\t                    return {\n\t                        fromAmount: result.from,\n\t                        toAmount: result.to\n\t                    };\n\t                },\n\n\t                contact: function contact(result) {\n\t                    return {\n\t                        contact: result.contact\n\t                    };\n\t                },\n\n\t                category: function category(result) {\n\t                    lpCoreBus.publish('launchpad-retail.transactionsCategorySearch', currentSuggestion.category);\n\t                    return {\n\t                        category: result.category\n\t                    };\n\t                },\n\n\t                query: function query(result) {\n\t                    return {\n\t                        query: result.query\n\t                    };\n\t                }\n\t            };\n\n\t            // Sorting options\n\t            var baseIconClass = 'lp-icon';\n\t            var newestOnTopClass = baseIconClass + ' lp-icon-new_top';\n\t            var oldestOnTopClass = baseIconClass + ' lp-icon-old_top';\n\t            var largestAmountOnTopClass = baseIconClass + ' lp-icon-big_to_small';\n\t            var smallestAmountOnTopClass = baseIconClass + ' lp-icon-small_to_big';\n\n\t            scope.sort = {\n\t                options: [{ label: 'Newest on Top', icon: newestOnTopClass, sort: '-bookingDateTime', aria: 'Decreasing' }, { label: 'Oldest on Top', icon: oldestOnTopClass, sort: 'bookingDateTime', aria: 'Increasing' }, { label: 'Largest Amount on Top', icon: largestAmountOnTopClass, sort: '-transactionAmount', aria: 'Decreasing' }, { label: 'Smallest Amount on Top', icon: smallestAmountOnTopClass, sort: 'transactionAmount', aria: 'Increasing' }]\n\t            };\n\t            scope.sort.selected = scope.sort.options[0];\n\n\t            /*----------------------------------------------------------------*/\n\t            /* Watchers\n\t            /*----------------------------------------------------------------*/\n\t            scope.$on('$destroy', function () {\n\t                // clean up\n\t            });\n\n\t            /*----------------------------------------------------------------*/\n\t            /* Events\n\t            /*----------------------------------------------------------------*/\n\n\t            /*----------------------------------------------------------------*/\n\t            /* Public methods & properties\n\t            /*----------------------------------------------------------------*/\n\t            scope.doSearch = function () {\n\t                var filters;\n\n\t                if (currentSuggestion) {\n\t                    var type = currentSuggestion.search.query ? 'query' : currentSuggestion.type;\n\t                    filters = suggestionType[type](currentSuggestion.search);\n\t                } else {\n\t                    filters = {};\n\t                }\n\n\t                scope.onPerformSearch({ filters: filters });\n\t            };\n\n\t            scope.selectSuggestion = function (suggestion) {\n\t                currentSuggestion = suggestion;\n\t                scope.doSearch();\n\t            };\n\n\t            scope.clearSuggestion = function () {\n\t                scope.onClearSearch();\n\t            };\n\n\t            scope.updateSuggestion = function () {\n\t                scope.onUpdateSearch();\n\t            };\n\n\t            scope.changeSort = function () {\n\t                var value = scope.sort.selected;\n\t                scope.onChangeSort({ value: value });\n\t            };\n\n\t            var tmpl = __webpack_require__(37);\n\t            scope.showExportOptions = function () {\n\t                var modalInstance = $modal.open({\n\t                    template: tmpl,\n\t                    controller: 'lpExportTransactions'\n\t                });\n\n\t                modalInstance.result.then(function (format) {\n\t                    scope.onExportTransactions({ format: format });\n\t                }, function (err) {\n\t                    //TODO: Add Error handling\n\t                    console.log(err);\n\t                });\n\t            };\n\n\t            scope.toggleCategoryView = function () {\n\t                lpCoreBus.publish('launchpad-retail.module-transactions.toggleCategoryView');\n\t            };\n\n\t            scope.showExportButton = !!scope.showExportButton;\n\t            scope.showCategoriesToggle = !lpCoreUtils.isUndefined(scope.showCategoriesToggle) ? scope.showCategoriesToggle : true;\n\t        }\n\n\t        /**\n\t         * Compile function\n\t         * @param  {object} el    angular dom el object\n\t         * @param  {object} attrs el attributes\n\t         * @return {function}       link controller function\n\t         */\n\t        function compileFn(elem, attrs) {\n\t            return linkFn;\n\t        }\n\n\t        // Directive configuration\n\t        return {\n\t            scope: {\n\t                accounts: '=',\n\t                contacts: '=',\n\t                transactionsCategories: '=',\n\t                showCategoriesToggle: '=?',\n\t                showExportButton: '=?',\n\t                onPerformSearch: '&',\n\t                onClearSearch: '&',\n\t                onUpdateSearch: '&',\n\t                onChangeSort: '&',\n\t                onExportTransactions: '&'\n\t            },\n\t            restrict: 'AE',\n\t            require: '?^ngModel',\n\t            compile: compileFn,\n\t            template: __webpack_require__(38)\n\t        };\n\t    };\n\n\t    // @ngInject\n\t    exports.lpSmartsuggest = function (lpCoreBus, lpCoreUtils, SmartSuggestEngine, SmartSuggestFormatter) {\n\n\t        return {\n\t            restrict: 'A',\n\t            scope: {\n\t                'smartsuggestSelect': '=',\n\t                'smartsuggestClear': '=',\n\t                'smartsuggestUpdate': '=',\n\t                'currency': '=',\n\t                'contacts': '=',\n\t                'categories': '='\n\t            },\n\t            link: function link(scope, element, attrs) {\n\n\t                // TAGS: here we check if to use tags\n\t                scope.tagsInput = !$(element).closest('form').find('.lp-tags').length ? false : true;\n\t                if (scope.tagsInput === true) {\n\t                    // let know the input field we use\n\t                    lpCoreBus.publish('lpTagsInputField', element[0]);\n\t                }\n\n\t                //setup the smart suggest engine\n\t                var smartSuggest = new SmartSuggestEngine();\n\t                smartSuggest.addSuggester({\n\t                    data: [],\n\t                    suggest: SmartSuggestEngine.builtIn.getContactSuggestions\n\t                });\n\t                smartSuggest.addSuggester({\n\t                    type: SmartSuggestEngine.types.AMOUNT,\n\t                    suggest: SmartSuggestEngine.builtIn.getAmountSuggestions\n\t                });\n\t                smartSuggest.addSuggester({\n\t                    type: SmartSuggestEngine.types.DATE,\n\t                    suggest: SmartSuggestEngine.builtIn.getDateSuggestions\n\t                });\n\t                smartSuggest.addSuggester({\n\t                    type: SmartSuggestEngine.types.GENERAL,\n\t                    suggest: SmartSuggestEngine.builtIn.getGeneralSuggestions\n\t                });\n\n\t                var formatter = new SmartSuggestFormatter({\n\t                    locale: 'en-US',\n\t                    currency: scope.currency\n\t                });\n\n\t                scope.$watch('currency', function (currency) {\n\t                    formatter.currency = currency;\n\t                });\n\n\t                scope.$watch('contacts', function (contacts) {\n\t                    //TODO: why is this not an empty array when empty?\n\t                    if (lpCoreUtils.isArray(contacts)) {\n\t                        smartSuggest.addSuggester({\n\t                            data: contacts,\n\t                            suggest: SmartSuggestEngine.builtIn.getContactSuggestions\n\t                        });\n\t                    }\n\t                });\n\n\t                scope.$watch('categories', function (categories) {\n\t                    formatter.categories = categories;\n\t                    smartSuggest.addSuggester({\n\t                        data: scope.categories,\n\t                        type: SmartSuggestEngine.types.CATEGORY,\n\t                        suggest: SmartSuggestEngine.builtIn.getCategorySuggestions\n\t                    });\n\t                });\n\n\t                $(element).autosuggest({\n\t                    lookup: function lookup(q) {\n\t                        var suggs = smartSuggest.getSuggestions(q);\n\t                        suggs = suggs.map(function (suggestion) {\n\t                            var values = formatter.format(suggestion);\n\n\t                            var displayValue;\n\t                            if (suggestion.contact) {\n\t                                displayValue = suggestion.contact.name;\n\t                            } else if (values.length === 2) {\n\t                                displayValue = values[0] + ' to ' + values[1];\n\t                            } else {\n\t                                displayValue = values[0];\n\t                            }\n\n\t                            return {\n\t                                data: suggestion,\n\t                                value: displayValue\n\t                            };\n\t                        });\n\t                        return suggs;\n\t                    },\n\t                    onSelect: function onSelect(suggestion) {\n\t                        if (scope.smartsuggestSelect) {\n\t                            lpCoreBus.publish('lpSearchSelectValue', { type: suggestion.data.type, text: suggestion.value, icon: formatter.getSuggestionIcon(suggestion.data, true) });\n\t                            scope.$apply(function () {\n\t                                scope.smartsuggestSelect.call({}, suggestion.data);\n\t                            });\n\t                        }\n\t                    },\n\t                    onClear: function onClear() {\n\t                        if (scope.smartsuggestClear && !scope.tagsInput) {\n\t                            scope.$apply(function () {\n\t                                scope.smartsuggestClear.call({});\n\t                            });\n\t                        }\n\t                    },\n\t                    onChangeModel: function onChangeModel() {\n\t                        if (scope.smartsuggestUpdate && scope.tagsInput) {\n\t                            scope.$apply(function () {\n\t                                scope.smartsuggestUpdate.call({}, true);\n\t                            });\n\t                        }\n\t                    },\n\t                    formatResult: function formatResult(suggestion) {\n\t                        return formatter.getSuggestionHtml(suggestion.data);\n\t                    },\n\t                    autoSelectFirst: true\n\t                });\n\t            }\n\t        };\n\t    };\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ },\n/* 36 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;'use strict';\n\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, module) {\n\t    'use strict';\n\n\t    var template = '' + '<span>' + '    <i class=\"{{option.icon}} option-icon\"></i>' + '    <span class=\"sr-only\">Sort by</span>' + '    <span class=\"option-label\">{{option.label}}</span>' + '    <span class=\"sr-only\">{{option.aria}}</span>' + '    <i class=\"lp-icon lp-icon-checkmark_fat\"></i>' + '</span>';\n\n\t    return template;\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ },\n/* 37 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;'use strict';\n\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, module) {\n\t    'use strict';\n\n\t    module.exports = ['<div class=\"export-transactions-modal\">', '<div class=\"panel-body\">', '<div class=\"modal-header\" lp-i18n=\"Export Results\"></div>', '<div class=\"modal-body\">', '<p lp-i18n=\"Select your chosen format bellow to export all transaction results currently displayed.\"></p>', '<form>', '<ul>', '<li>', '<lp-custom-radio ng-model=\"exportOption\" value=\"csv\">', '<span lp-i18n=\"CSV - integrates with Excel, Numbers, etc.\"></span>', '</lp-custom-radio>', '<li>', '<lp-custom-radio ng-model=\"exportOption\" value=\"ofx\">', '<span lp-i18n=\"OFX - integrates with Quicken.\"></span>', '</lp-custom-radio>', '</li>', '</ul>', '</form>', '</div>', '<div class=\"modal-footer\">', '<button type=\"button\" ng-click=\"cancel()\" class=\"btn btn-link\" lp-i18n=\"Cancel\"></button>', '<button type=\"button\" ng-click=\"download(exportOption)\" ng-disabled=\"!exportOption\" class=\"btn btn-primary\" lp-i18n=\"Export Format\"></button>', '<p class=\"small\">', '<i class=\"lp-icon lp-icon-info-sign\"></i><span lp-i18n=\"For best results narrow your search criteria to keep from downloading unnecesary transactions.\"></span>', '</p>', '</div>', '</div>', '</div>'].join('');\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ },\n/* 38 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;'use strict';\n\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, module) {\n\t    'use strict';\n\n\t    module.exports = ['<form ng-submit=\"doSearch\" ng-class=\"{ \\'has-category-toggle\\': showCategories }\">', '    <div class=\"lp-search-wrapper\">', '        <div class=\"lp-search-left\" ng-if=\"showCategoriesToggle\">', '           <button class=\"btn lp-incorporate-btn\" tabindex=\"0\" aria-pressed=\"{{ previewAll }}\" ng-click=\"toggleCategoryView()\" ng-class=\"{ \\'active\\': previewAll }\">', '               <i title=\"Category view\" class=\"lp-icon lp-icon-tag\"></i>', '               <span class=\"sr-only\">Show Categories</span>', '           </button>', '        </div>', '        <div class=\"lp-search-left\">', '            <div lp-tags-filters=\"lp-tags-filters\"></div>', '        </div>', '        <div class=\"lp-search-tags\">', '            <div lp-tags=\"lp-tags\" empty=\"lp-tags-left\" class=\"lp-tags\"></div>', '            <input lp-smartsuggest=\"lp-smartsuggest\"', '                   smartsuggest-select=\"selectSuggestion\"', '                   smartsuggest-clear=\"clearSuggestion\"', '                   smartsuggest-update=\"updateSuggestion\"', '                   currency=\"accounts.selected.currency\"', '                   contacts=\"contacts.contacts\"', '                   categories=\"transactionsCategories.categories\"', '                   ng-model=\"searchTerm\"', '                   class=\"form-control\" placeholder=\"Search for dates, amounts, contacts...\" />', '        </div>', '        <div class=\"lp-search-right\">', '            <div dropdown-select=\"dropdown-select\" options=\"option as option for option in sort.options\" ng-model=\"sort.selected\" ng-change=\"changeSort()\" class=\"input-group-btn sort-select pull-right lp-incorporate-btn\" option-template-url=\"$transactions/sortDropdownOption.html\"', '                 aria-controls=\"transactions-list\">', '            </div>', '        </div>', '        <div ng-if=\"showExportButton\" class=\"lp-transactions-export-btn\">', '            <button type=\"button\" class=\"btn btn-default lp-search-col lp-incorporate-btn\" ng-click=\"showExportOptions()\">', '               <i class=\"fa fa-download\"></i><span lp-i18n=\" Export List\"></span>', '            </button>', '        </div>', '    </div>', '</form>'].join('');\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ },\n/* 39 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;'use strict';\n\n\t/**\n\t *  ----------------------------------------------------------------\n\t *  Copyright © Backbase B.V.\n\t *  ----------------------------------------------------------------\n\t *  Author : Backbase R&D - Amsterdam - New York\n\t *  Filename : directives.js\n\t *  Description:  Transactions Search Component\n\t *  ----------------------------------------------------------------\n\t */\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports) {\n\n\t    'use strict';\n\n\t    // @ngInject\n\n\t    exports.lpDownloadTransactionsFile = function ($window) {\n\t        return function (link) {\n\t            if (!$window.open(link, '_blank')) {\n\t                console.log('lpDownloadTransactionsFile:error');\n\t            }\n\t        };\n\t    };\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ },\n/* 40 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(module) {'use strict';\n\n\t/**\n\t * Widget Transactions Spendings Component\n\t * @module widget-transactions\n\t */\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, module) {\n\n\t    'use strict';\n\n\t    module.name = 'component.transactions-spendings';\n\n\t    var base = __webpack_require__(7);\n\t    var deps = [];\n\n\t    module.exports = base.createModule(module.name, deps).factory(__webpack_require__(41)).directive(__webpack_require__(42));\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6)(module)))\n\n/***/ },\n/* 41 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;'use strict';\n\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, module) {\n\t    'use strict';\n\n\t    function factory(endpointSrc, cfg) {\n\n\t        // @ngInject\n\t        var fn = function fn($resource, lpTransactions) {\n\t            var endpoint = lpTransactions.getEndpoint(endpointSrc);\n\t            return $resource(endpoint, null, cfg);\n\t        };\n\t        return fn;\n\t    }\n\n\t    exports.CategorySpendingsResource = factory('categorySpendingEndpoint', {\n\t        'get': { method: 'GET' }\n\t    });\n\n\t    exports.CategoriesResource = factory('categoriesEndpoint', {\n\t        'get': { method: 'GET', isArray: true }\n\t    });\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ },\n/* 42 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;'use strict';\n\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, module) {\n\t    'use strict';\n\n\t    var d3 = __webpack_require__(43);\n\t    var utils = __webpack_require__(7).utils;\n\n\t    // @ngInject\n\t    exports.lpCategoriesSpendings = function ($q, $timeout, $templateCache, lpCoreBus, CategorySpendingsResource, CategoriesResource) {\n\t        function parse(data) {\n\t            var categoriesSpendings = data.spendings.categoriesSpendings;\n\t            var categories = data.categories;\n\n\t            categoriesSpendings.sort(function (a, b) {\n\t                return a.amount - b.amount;\n\t            }).forEach(function (categorySpending) {\n\t                var category = utils.find(categories, function (currentCategory) {\n\t                    return currentCategory.id === categorySpending.categoryId;\n\t                });\n\n\t                categorySpending.name = category.name;\n\t                categorySpending.color = category.color;\n\t                categorySpending.currency = data.spendings.currency;\n\t            });\n\t            return categoriesSpendings;\n\t        }\n\n\t        function linkFn(scope, elem, attrs) {\n\t            scope.options = utils.assign({}, scope.options, scope.lpCategoriesSpendings);\n\t            scope.accountId = null;\n\t            scope.fromDate = null;\n\t            scope.toDate = null;\n\n\t            scope.viewLoading = true;\n\t            scope.missingData = false;\n\t            scope.showChart = false;\n\n\t            scope.$watchCollection('[viewLoading,missingData]', function (newVals, oldVals) {\n\t                var viewLoading = newVals[0];\n\t                var missingData = newVals[1];\n\t                scope.showChart = !viewLoading && !missingData;\n\t            });\n\n\t            scope.selectItem = function (item) {\n\t                $timeout(function () {\n\t                    scope.selectedItem = item;\n\t                    lpCoreBus.publish('launchpad-retail.donutCategoryChartSelection', item);\n\t                });\n\t            };\n\n\t            scope.resize = function (width, height) {\n\t                $timeout(function () {\n\t                    scope.width = width;\n\t                });\n\t            };\n\n\t            /**\n\t             * Updates both categories and spending data, based on changed\n\t             * query values for CategorySpendingsResource\n\t             */\n\t            scope.updateData = function () {\n\t                var params = {\n\t                    accountIds: scope.accountId || null,\n\t                    start: scope.fromDate,\n\t                    end: scope.toDate\n\t                };\n\n\t                $q.all({\n\t                    spendings: CategorySpendingsResource.get(params).$promise,\n\t                    categories: CategoriesResource.get().$promise\n\t                }).then(function (result) {\n\t                    scope.viewLoading = false;\n\t                    if (result.spendings.categoriesSpendings.length === 0) {\n\t                        scope.missingData = true;\n\t                        return;\n\t                    }\n\t                    scope.missingData = false;\n\t                    scope.options = utils.assign({}, scope.options, {\n\t                        data: parse(result)\n\t                    });\n\t                }, function (error) {\n\t                    scope.viewLoading = false;\n\t                    scope.missingData = true;\n\t                });\n\t            };\n\n\t            //Listen for user accounts data load\n\t            var accountIds;\n\t            var onAccountsLoaded = function onAccountsLoaded(accounts) {\n\t                utils.forEach(accounts, function (account) {\n\t                    if (account.ids) {\n\t                        accountIds = account.ids;\n\t                    }\n\t                });\n\n\t                scope.accountId = accountIds;\n\t            };\n\t            lpCoreBus.subscribe('launchpad-retail.accountsLoaded', onAccountsLoaded);\n\t            lpCoreBus.subscribe('lpAccounts.loaded', onAccountsLoaded);\n\n\t            var removeWatch = scope.$watch('lpAccounts.selected', function (account) {\n\t                if (!account) {\n\t                    scope.viewLoading = false;\n\t                    scope.missingData = true;\n\t                    return;\n\t                }\n\n\t                //Listen for user account selection\n\t                lpCoreBus.subscribe('launchpad-retail.accountSelected', function (params) {\n\t                    scope.accountId = params.allAccounts ? accountIds : params.accountId;\n\t                    scope.updateData();\n\t                });\n\n\t                scope.accountId = account.id;\n\t                scope.updateData();\n\n\t                removeWatch();\n\t            });\n\n\t            //Listen for transaction filtering by date\n\t            lpCoreBus.subscribe('launchpad-retail.transactionsDateSearch', function (params) {\n\t                scope.fromDate = params.fromDate;\n\t                scope.toDate = params.toDate;\n\t                scope.updateData();\n\t            });\n\n\t            lpCoreBus.subscribe('launchpad-retail.transactionsCategorySearch', function (categories) {\n\t                if (categories.length === 1) {\n\t                    var spending = utils.find(scope.options.data, function (s) {\n\t                        return s.categoryId === categories[0].id;\n\t                    });\n\n\t                    scope.selectItem(spending);\n\t                }\n\t            });\n\n\t            scope.$on('tabSelected', function (event, tab) {\n\t                if (tab === 'donut') {\n\t                    scope.options = utils.assign({}, scope.options); // force update\n\t                }\n\t            });\n\t        }\n\n\t        function compileFn(elem, attrs) {\n\t            return linkFn;\n\t        }\n\n\t        // retrieve template\n\t        function templateFn() {\n\t            return '<div class=\"ng-cloak\" ng-class=\"responsiveClass\">' + '   <div class=\"lp-widget-content widget widget-default\" role=\"application\">' + '       <div class=\"lp-widget-body\" progress-indicator=\"viewLoading\">' + '           <div ng-if=\"missingData\" class=\"panel-message\" >' + '               <div class=\"panel-body text-center\" lp-i18n=\"Chart data is not available.\"></div>' + '           </div>' + '           <div lp-donut-chart options=\"options\" class=\"category-spendings-chart\" on-select=\"selectItem\" item=\"selectedItem\" on-resize=\"resize\" ng-show=\"showChart\">' + '              <div category-details ng-model=\"selectedItem\" width=\"width\"></div>' + '           </div>' + '       </div>' + '   </div>' + '</div>';\n\t        }\n\n\t        // Directive configuration\n\t        return {\n\t            scope: {\n\t                lpCategoriesSpendings: '=?',\n\t                lpAccounts: '=',\n\t                options: '=?'\n\t            },\n\t            restrict: 'AE',\n\t            compile: compileFn,\n\t            template: templateFn,\n\t            replace: true\n\t        };\n\t    };\n\n\t    function wrapText(textNode, text) {\n\t        textNode.selectAll('tspan').remove();\n\n\t        var textNodeWidth = textNode.attr('width');\n\t        var tspanCount = 1;\n\t        var tspan = textNode.append('tspan');\n\t        var words = text.split(/\\s+/);\n\t        var lineHeight = 20;\n\n\t        if (words.length === 1 && text.length > 15) {\n\t            tspan.text(text.slice(0, 12) + '...');\n\t            return textNode;\n\t        }\n\n\t        for (var i = 0; i < words.length; i++) {\n\t            var node = tspan.node();\n\t            if (node && node.getComputedTextLength && node.getComputedTextLength() > textNodeWidth) {\n\t                tspanCount++;\n\n\t                // allow only two lines of text, otherwise end title with ellipsis\n\t                if (tspanCount >= 3) {\n\t                    tspan.text(tspan.text() + '...');\n\t                    break;\n\t                }\n\n\t                tspan = textNode.append('tspan').attr({ x: 0, dy: lineHeight });\n\t            }\n\n\t            tspan.text(tspan.text() + ' ' + words[i]);\n\t        }\n\n\t        return textNode;\n\t    }\n\n\t    function formatPercentage(val) {\n\t        return (val * 100).toFixed(2) + '%';\n\t    }\n\n\t    // @ngInject\n\t    exports.categoryDetails = function (lpCoreI18n) {\n\t        function link(scope, element) {\n\n\t            var canvases = element.find('svg');\n\t            var canvas = canvases.length ? d3.select(canvases[0]) : d3.select(element[0]).append('svg:svg');\n\t            var node = canvas.append('svg:g');\n\n\t            node.append('svg:text').attr('class', 'name');\n\t            node.append('svg:text').attr('class', 'amount');\n\t            node.append('svg:text').attr('class', 'share');\n\t            node.append('svg:text').attr('class', 'delta');\n\n\t            function resize(width, height) {\n\t                if (!width) {\n\t                    return;\n\t                }\n\n\t                var radius = width / 2;\n\t                var innerRadius = radius * 0.55;\n\n\t                node.attr('transform', 'translate(' + radius + ',' + radius + ')');\n\t                var unitSize = width / 20;\n\t                node.select('.name').attr({ y: -0.34 * innerRadius, width: innerRadius }).style('font-size', unitSize + 'px');\n\t                node.select('.amount').attr({ y: 0.15 * innerRadius }).style('font-size', 1.4 * unitSize + 'px');\n\t                node.select('.share').attr({ y: 0.5 * innerRadius }).style('font-size', unitSize + 'px');\n\t                node.select('.delta').attr({ y: 0.5 * innerRadius }).style('font-size', unitSize + 'px');\n\t            }\n\n\t            function update(data) {\n\t                if (!data) {\n\t                    return;\n\t                }\n\n\t                wrapText(node.select('.name'), data.name);\n\n\t                var delta = data.historicalChangeFactor || 1;\n\t                var symbol = delta < 0 ? '↓' : delta > 0 ? '↑' : '';\n\n\t                node.select('.amount').text(lpCoreI18n.formatCurrency(data.amount, data.currency));\n\t                node.select('.share').text(formatPercentage(data.totalFraction) + ' ');\n\t                node.select('.delta').text(' ' + symbol + formatPercentage(Math.abs(delta)));\n\t            }\n\n\t            scope.$watch('width', resize);\n\t            scope.$watch('data', update);\n\t        }\n\n\t        return {\n\t            restrict: 'EA',\n\t            link: link,\n\t            scope: {\n\t                data: '=ngModel',\n\t                width: '='\n\t            }\n\t        };\n\t    };\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ },\n/* 43 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_43__;\n\n/***/ },\n/* 44 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(module) {'use strict';\n\n\t/**\n\t * Widget Transactions Charts Component\n\t * @module widget-transactions\n\t */\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, module) {\n\n\t    'use strict';\n\n\t    module.name = 'component.transactions-charts';\n\n\t    var base = __webpack_require__(7);\n\t    var ui = __webpack_require__(21);\n\t    var chart = __webpack_require__(10);\n\n\t    var deps = [ui.name, chart.name];\n\n\t    module.exports = base.createModule(module.name, deps).factory(__webpack_require__(45)).directive(__webpack_require__(46));\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6)(module)))\n\n/***/ },\n/* 45 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;'use strict';\n\n\t/**\n\t *  ----------------------------------------------------------------\n\t *  Copyright © Backbase B.V.\n\t *  ----------------------------------------------------------------\n\t *  Author : Backbase R&D - Amsterdam - New York\n\t *  Filename : providers.js\n\t *  Description:\n\t *  Transactions Charts Component Provider\n\t *  ----------------------------------------------------------------\n\t */\n\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, module) {\n\n\t    'use strict';\n\n\t    var _ = __webpack_require__(7).utils;\n\n\t    var normalizeData = function normalizeData(data, type) {\n\t        if (data && data.length) {\n\t            if (data[0].hasOwnProperty(type)) {\n\t                return _.chain(data).map(function (current) {\n\t                    return current[type];\n\t                }).reduce(function (acc, current) {\n\t                    return acc.concat(current);\n\t                }, []).value();\n\t            } else {\n\t                return data;\n\t            }\n\t        } else {\n\t            return [];\n\t        }\n\t    };\n\n\t    // @ngInject\n\t    exports.lpAccountsChartData = function (lpCoreUtils, $http, lpTransactions) {\n\t        var defaults = {\n\t            accountsChartEndpoint: lpTransactions.getEndpoint('accountsChartEndpoint'),\n\t            accountId: null\n\t        };\n\n\t        /**\n\t         * Accounts Chart service constructor\n\t         * @param config\n\t         * @constructor\n\t         */\n\t        var AccountsChartModel = function AccountsChartModel(config) {\n\t            this.config = lpCoreUtils.extend({}, defaults, config);\n\t            this.chartData = null;\n\t            this.error = false;\n\t        };\n\n\t        AccountsChartModel.prototype.setId = function (id, allAccounts) {\n\t            this.config.allAccounts = !!allAccounts;\n\t            this.config.accountId = id;\n\t        };\n\n\t        /**\n\t         * Load data from server\n\t         * @param queryParams {}\n\t         */\n\t        AccountsChartModel.prototype.load = function (queryParams) {\n\t            var self = this;\n\t            var url;\n\t            var options = {};\n\n\t            if (!queryParams) {\n\t                queryParams = {};\n\t            }\n\n\t            if (this.config.allAccounts) {\n\t                url = this.config.allAccountsChartEndpoint || lpTransactions.getEndpoint('allAccountsChartEndpoint');\n\t                queryParams.accountIds = this.config.accountId;\n\t            } else {\n\t                url = this.config.accountsChartEndpoint;\n\t                options.data = {\n\t                    accountId: this.config.accountId\n\t                };\n\t            }\n\t            options.params = queryParams;\n\t            return $http.get(url, options).then(function (response) {\n\t                self.chartData = normalizeData(response.data, 'balances');\n\t                return self.chartData;\n\t            }, function (response) {\n\t                if (response.errors) {\n\t                    self.error = response.errors[0].code;\n\t                }\n\t            });\n\t        };\n\n\t        return {\n\t            getInstance: function getInstance(config) {\n\t                return new AccountsChartModel(config);\n\t            }\n\t        };\n\t    };\n\n\t    // @ngInject\n\t    exports.lpTransactionsChartData = function (lpCoreUtils, $http, lpTransactions) {\n\t        var defaults = {\n\t            transactionsChartEndpoint: lpTransactions.getEndpoint('transactionsChartEndpoint'),\n\t            accountId: null\n\t        };\n\n\t        /**\n\t         * Transactions Chart service constructor\n\t         * @param config\n\t         * @constructor\n\t         */\n\t        var TransactionsChartModel = function TransactionsChartModel(config) {\n\t            this.config = lpCoreUtils.extend({}, defaults, config);\n\t            this.chartData = null;\n\t            this.error = false;\n\t        };\n\n\t        TransactionsChartModel.prototype.setId = function (id, allAccounts) {\n\t            this.config.allAccounts = !!allAccounts;\n\t            this.config.accountId = id;\n\t        };\n\n\t        /**\n\t         * Load data from server\n\t         * @param queryParams {}\n\t         */\n\t        TransactionsChartModel.prototype.load = function (queryParams) {\n\t            var self = this;\n\t            var url;\n\t            var options = {};\n\n\t            if (!queryParams) {\n\t                queryParams = {};\n\t            }\n\n\t            if (this.config.allAccounts) {\n\t                url = this.config.allTransactionsChartEndpoint || lpTransactions.getEndpoint('allTransactionsChartEndpoint');\n\n\t                queryParams.accountIds = this.config.accountId;\n\t            } else {\n\t                url = this.config.transactionsChartEndpoint;\n\t                options.data = {\n\t                    accountId: this.config.accountId\n\t                };\n\t            }\n\t            options.params = queryParams;\n\n\t            return $http.get(url, options).then(function (response) {\n\t                self.chartData = normalizeData(response.data, 'turnovers');\n\t                return self.chartData;\n\t            }, function (response) {\n\t                if (response.errors) {\n\t                    self.error = response.errors[0].code;\n\t                }\n\t            });\n\t        };\n\n\t        return {\n\t            getInstance: function getInstance(config) {\n\t                return new TransactionsChartModel(config);\n\t            }\n\t        };\n\t    };\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ },\n/* 46 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;'use strict';\n\n\t/**\n\t *  ----------------------------------------------------------------\n\t *  Copyright © Backbase B.V.\n\t *  ----------------------------------------------------------------\n\t *  Author : Backbase R&D - Amsterdam - New York\n\t *  Filename : directives.js\n\t *  Description:  Transaction charts directive\n\t *  ----------------------------------------------------------------\n\t */\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports) {\n\n\t    'use strict';\n\n\t    var d3 = __webpack_require__(43);\n\t    var types = {\n\t        vertical: '',\n\t        horizontal: '-horizontal'\n\t    };\n\n\t    function buildCharts(type) {\n\n\t        // @ngInject\n\t        var controller = function controller($templateCache, lpCoreUtils, lpCoreI18n, $q, lpAccountsChartData, lpTransactionsChartData, lpCoreBus) {\n\t            function linkFn(scope, elem, attrs) {\n\t                var getNiceTimePeriod = function getNiceTimePeriod(startTime, endTime) {\n\t                    var monthNames = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec'];\n\n\t                    var start = new Date(startTime);\n\t                    var end = new Date(endTime);\n\n\t                    //Same dates are fed into the chart but days are cut off at the start of the chart\n\t                    //This fix brings the display in line together\n\t                    start.setDate(start.getDate() + 1);\n\n\t                    //return nicely formatted time period\n\t                    return start.getDate() + ' ' + monthNames[start.getMonth()] + ' - ' + end.getDate() + ' ' + monthNames[end.getMonth()];\n\t                };\n\n\t                var getStartDate = function getStartDate() {\n\t                    var result = new Date(scope.endDate);\n\t                    switch (scope.scale) {\n\t                        case 'WEEK':\n\t                            result.setDate(result.getDate() - 7);\n\t                            break;\n\t                        case 'MONTH':\n\t                            result.setMonth(result.getMonth() - 1);\n\t                            break;\n\n\t                    }\n\t                    return result;\n\t                };\n\n\t                var setDateRange = function setDateRange(endDate) {\n\t                    scope.endDate = new Date(endDate);\n\t                    scope.timePeriod = getNiceTimePeriod(getStartDate().getTime(), scope.endDate.getTime());\n\t                };\n\n\t                var onTransactionsReady = function onTransactionsReady(transactions) {\n\t                    // get the date of the newest transaction\n\t                    if (transactions && transactions.length) {\n\t                        setDateRange(transactions[0].bookingDateTime);\n\t                    }\n\t                    lpCoreBus.unsubscribe('widget-transactions:transactions:ready', onTransactionsReady);\n\t                };\n\t                lpCoreBus.subscribe('widget-transactions:transactions:ready', onTransactionsReady);\n\n\t                var updateCharts = function updateCharts(direction, onlyTransactions) {\n\t                    var params = {\n\t                        start: getStartDate().getTime(),\n\t                        end: scope.endDate.getTime()\n\t                    };\n\n\t                    //Refresh the nice time period\n\t                    scope.timePeriod = getNiceTimePeriod(params.start, params.end);\n\n\t                    var getDate = function getDate(date) {\n\t                        var result = new Date(date);\n\t                        result.setHours(0);\n\t                        result.setMinutes(0);\n\t                        result.setSeconds(0);\n\t                        return result;\n\t                    };\n\n\t                    var getTransactionsValue = function getTransactionsValue(data) {\n\t                        if (scope.series === 'DEPOSIT') {\n\t                            return data.deposit;\n\t                        } else {\n\t                            if (data.hasOwnProperty('withdrawal')) {\n\t                                return data.withdrawal;\n\t                            } else if (data.hasOwnProperty('withdraw')) {\n\t                                return data.withdraw;\n\t                            } else {\n\t                                return 0;\n\t                            }\n\t                        }\n\t                    };\n\n\t                    var formatAmount = function formatAmount(amount) {\n\t                        return lpCoreI18n.formatCurrency(amount, scope.lpAccounts.selected.currency);\n\t                    };\n\n\t                    scope.loading = true;\n\t                    scope.emptyTurnovers = false;\n\t                    scope.emptyBalances = false;\n\n\t                    $q.all([scope.transactionsChartModel.load(params), scope.accountsChartModel.load(params)]).then(function (results) {\n\t                        // Decorate data here\n\t                        return {\n\t                            turnovers: results[0],\n\t                            balances: results[1]\n\t                        };\n\t                    }).then(function (results) {\n\t                        scope.loading = false;\n\t                        if (results.turnovers && results.turnovers.length) {\n\t                            scope.transactionsChartOptions = {\n\t                                data: results.turnovers,\n\t                                height: 200,\n\t                                padding: [30, 30, 30, 90],\n\t                                parsers: {\n\t                                    x: function x(data) {\n\t                                        return getDate(data.date);\n\t                                    },\n\t                                    y: function y(data) {\n\t                                        return getTransactionsValue(data);\n\t                                    }\n\t                                },\n\t                                formatters: {\n\t                                    y: function y(amount) {\n\t                                        return formatAmount(amount);\n\t                                    },\n\t                                    x: function x(date) {\n\t                                        return d3.time.format('%e')(date);\n\t                                    },\n\t                                    tooltip: function tooltip(data) {\n\t                                        return d3.time.format('%B %e')(getDate(data.date)) + '<br>' + formatAmount(getTransactionsValue(data));\n\t                                    }\n\t                                }\n\t                            };\n\t                        } else {\n\t                            scope.emptyTurnovers = true;\n\t                        }\n\n\t                        if (!onlyTransactions) {\n\t                            if (results.balances && results.balances.length) {\n\t                                scope.accountBalanceChartOptions = {\n\t                                    data: results.balances,\n\t                                    height: 200,\n\t                                    padding: [30, 30, 30, 90],\n\t                                    parsers: {\n\t                                        x: function x(data) {\n\t                                            return getDate(data.date);\n\t                                        },\n\t                                        y: function y(data) {\n\t                                            return data.amount;\n\t                                        }\n\t                                    },\n\t                                    formatters: {\n\t                                        y: function y(amount) {\n\t                                            return formatAmount(amount);\n\t                                        },\n\t                                        x: function x(date) {\n\t                                            return d3.time.format('%e')(date);\n\t                                        },\n\t                                        tooltip: function tooltip(data) {\n\t                                            return d3.time.format('%B %e')(getDate(data.date)) + '<br>' + formatAmount(data.amount);\n\t                                        }\n\t                                    },\n\t                                    animation: {\n\t                                        direction: direction === 'prev' ? 'left' : 'right'\n\t                                    }\n\t                                };\n\t                            } else {\n\t                                scope.emptyBalances = true;\n\t                            }\n\t                        }\n\t                    });\n\t                };\n\n\t                var updateChartsOnAccountSelected = function updateChartsOnAccountSelected(accountId, allAccounts) {\n\t                    scope.accountsChartModel.setId(accountId, allAccounts);\n\t                    scope.transactionsChartModel.setId(accountId, allAccounts);\n\t                    // If the account selected is a credit card the charts\n\t                    // are not loaded, but if you loaded an account previously\n\t                    // this listener is enabled and it will be called when a card account\n\t                    // is selected.\n\t                    // TODO: Fix sharing same provider for bank accounts and\n\t                    //       card accounts\n\t                    if (scope.lpAccounts.selected && !scope.lpAccounts.selected.cardId) {\n\t                        updateCharts('prev');\n\t                    }\n\t                };\n\n\t                var initialize = function initialize() {\n\t                    scope.now = new Date();\n\t                    scope.scale = 'WEEK';\n\t                    scope.series = 'WITHDRAWAL';\n\t                    setDateRange(scope.now);\n\n\t                    scope.accountsChartModel = lpAccountsChartData.getInstance();\n\n\t                    scope.transactionsChartModel = lpTransactionsChartData.getInstance();\n\n\t                    var accountIds;\n\t                    // Listen when accounts dropdown is ready and read the all accounts ids\n\t                    lpCoreBus.subscribe('lpAccounts.loaded', function (accounts) {\n\t                        accountIds = lpCoreUtils.result(lpCoreUtils.find(accounts, function (account) {\n\t                            return !!account.ids;\n\t                        }), 'ids');\n\t                    });\n\n\t                    var removeWatch = scope.$watch('lpAccounts.selected', function (account) {\n\t                        if (!account) {\n\t                            return;\n\t                        }\n\n\t                        // Listen for user account selection\n\t                        lpCoreBus.subscribe('launchpad-retail.accountSelected', function (params) {\n\t                            var accountId = params.allAccounts ? accountIds : params.accountId;\n\t                            updateChartsOnAccountSelected(accountId, params.allAccounts);\n\t                        });\n\n\t                        updateChartsOnAccountSelected(account.id);\n\t                        removeWatch();\n\t                    });\n\t                };\n\n\t                scope.nextPeriod = function () {\n\t                    switch (scope.scale) {\n\t                        case 'WEEK':\n\t                            scope.endDate.setDate(scope.endDate.getDate() + 7);\n\t                            break;\n\t                        case 'MONTH':\n\t                            scope.endDate.setMonth(scope.endDate.getMonth() + 1);\n\t                            break;\n\t                    }\n\n\t                    updateCharts('next');\n\t                };\n\n\t                scope.prevPeriod = function () {\n\t                    switch (scope.scale) {\n\t                        case 'WEEK':\n\t                            scope.endDate.setDate(scope.endDate.getDate() - 7);\n\t                            break;\n\t                        case 'MONTH':\n\t                            scope.endDate.setMonth(scope.endDate.getMonth() - 1);\n\t                            break;\n\t                    }\n\t                    updateCharts('prev');\n\t                };\n\n\t                scope.setScale = function (scale) {\n\t                    scope.scale = scale;\n\t                    updateCharts('prev');\n\t                };\n\n\t                scope.setSeries = function (series) {\n\t                    scope.series = series;\n\t                    updateCharts('prev', true);\n\t                };\n\n\t                scope.showNextPeriod = function () {\n\t                    return scope.now.getTime() > scope.endDate.getTime();\n\t                };\n\n\t                scope.$on('tabSelected', function (event, tab) {\n\t                    if (tab === 'chart' || tab === 'combined') {\n\t                        updateCharts('prev');\n\t                    }\n\t                });\n\n\t                initialize();\n\t            }\n\n\t            function compileFn(elem, attrs) {\n\t                return linkFn;\n\t            }\n\n\t            // require template\n\t            if (type === types.vertical) {\n\t                $templateCache.put('$transactions/chartTemplate', __webpack_require__(47));\n\t            } else {\n\t                $templateCache.put('$transactions/chartTemplate-horizontal', __webpack_require__(48));\n\t            }\n\n\t            // Directive configuration\n\t            return {\n\t                scope: {\n\t                    lpAccounts: '='\n\t                },\n\t                restrict: 'AE',\n\t                compile: compileFn,\n\t                template: $templateCache.get('$transactions/chartTemplate' + type)\n\t            };\n\t        };\n\n\t        return controller;\n\t    }\n\n\t    exports.lpTransactionsCharts = buildCharts(types.vertical);\n\t    exports.lpTransactionsChartsHorizontal = buildCharts(types.horizontal);\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ },\n/* 47 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;'use strict';\n\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, module) {\n\t    'use strict';\n\n\t    var template = '' + '<div class=\"lp-widget-body\">' + '    <div>' + '        <div class=\"panel-body lp-chart-balances\">' + '            <div class=\"h4\">Balance - <span ng-bind=\"timePeriod\"></span></div>' + '            <div progress-indicator=\"loading\" class=\"chart-progress-indicator\"></div>' + '            <div ng-show=\"!loading && !emptyBalances\" lp-line-chart=\"lp-line-chart\" lp-chart-options=\"accountBalanceChartOptions\" class=\"accountsChart lp-chart\"></div>' + '            <div ng-show=\"emptyBalances\" class=\"chart-empty-data\" lp-i18n=\"There is no data available for this period of time\"></div>' + '        </div>' + '        <div class=\"panel-body\">' + '            <div class=\"controls clearfix\">' + '                <div class=\"col-xs-2\">' + '                    <button class=\"btn btn-primary btn-block arrow\" ng-click=\"prevPeriod()\">&lt;</button>' + '                </div>' + '                <div class=\"col-xs-8 text-center\">' + '                    <button class=\"btn btn-default\" ng-class=\"{\\'btn-primary\\':scale==\\'WEEK\\'}\" ng-click=\"setScale(\\'WEEK\\')\">7D</button>' + '                    <button class=\"btn btn-default\" ng-class=\"{\\'btn-primary\\':scale==\\'MONTH\\'}\" ng-click=\"setScale(\\'MONTH\\')\">1M</button>' + '                </div>' + '                <div class=\"col-xs-2\">' + '                    <button class=\"btn btn-primary btn-block arrow\" ng-click=\"nextPeriod()\" ng-show=\"showNextPeriod()\">&gt;</button>' + '                </div>' + '            </div>' + '        </div>' + '        <div class=\"panel-body lp-chart-turnovers\">' + '            <div class=\"h4\">Transactions - <span ng-bind=\"timePeriod\"></span></div>' + '            <div progress-indicator=\"loading\" class=\"chart-progress-indicator\"></div>' + '            <div ng-show=\"!loading && !emptyTurnovers\" lp-bar-chart=\"lp-bar-chart\" lp-chart-options=\"transactionsChartOptions\" class=\"transactionsChart lp-chart\"></div>' + '            <div ng-show=\"emptyTurnovers\" class=\"chart-empty-data\" lp-i18n=\"There is no data available for this period of time\"></div>' + '        </div>' + '        <div class=\"panel-body\">' + '            <div class=\"controls clearfix text-center\">' + '                <button class=\"btn btn-default\" ng-class=\"{\\'btn-primary\\':series==\\'WITHDRAWAL\\'}\" ng-click=\"setSeries(\\'WITHDRAWAL\\')\">Spending</button>' + '                <button class=\"btn btn-default\" ng-class=\"{\\'btn-primary\\':series==\\'DEPOSIT\\'}\" ng-click=\"setSeries(\\'DEPOSIT\\')\">Income</button>' + '            </div>' + '        </div>' + '    </div>' + '</div>';\n\n\t    return template;\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ },\n/* 48 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;'use strict';\n\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, module) {\n\t    'use strict';\n\n\t    var template = '' + '<div class=\"lp-widget-body clearfix\">' + '    <div>' + '        <div class=\"col-xs-12 col-sm-6 chart-horizontal\">' + '            <div class=\"panel-body lp-chart-balances\">' + '                <div class=\"h4\">Balance<br /><span ng-bind=\"timePeriod\"></span></div>' + '                <div progress-indicator=\"loading\" class=\"chart-progress-indicator\"></div>' + '                <div ng-show=\"!loading && !emptyBalances\" lp-line-chart=\"lp-line-chart\" lp-chart-options=\"accountBalanceChartOptions\" class=\"accountsChart lp-chart\"></div>' + '                <div ng-show=\"emptyBalances\" class=\"chart-empty-data\" lp-i18n=\"There is no data available for this period of time\"></div>' + '            </div>' + '            <div class=\"panel-body\">' + '                <div class=\"controls clearfix\">' + '                    <div class=\"col-xs-2\">' + '                        <button class=\"btn btn-primary btn-block arrow\" ng-click=\"prevPeriod()\">&lt;</button>' + '                    </div>' + '                    <div class=\"col-xs-8 text-center\">' + '                        <button class=\"btn btn-default\" ng-class=\"{\\'btn-primary\\':scale==\\'WEEK\\'}\" ng-click=\"setScale(\\'WEEK\\')\">7D</button>' + '                        <button class=\"btn btn-default\" ng-class=\"{\\'btn-primary\\':scale==\\'MONTH\\'}\" ng-click=\"setScale(\\'MONTH\\')\">1M</button>' + '                    </div>' + '                    <div class=\"col-xs-2\">' + '                        <button class=\"btn btn-primary btn-block arrow\" ng-click=\"nextPeriod()\" ng-show=\"showNextPeriod()\">&gt;</button>' + '                    </div>' + '                </div>' + '            </div>' + '        </div>' + '        <div class=\"col-xs-12 col-sm-6 chart-horizontal\">' + '            <div class=\"panel-body lp-chart-turnovers\">' + '                <div class=\"h4\">Transactions<br /><span ng-bind=\"timePeriod\"></span></div>' + '                <div progress-indicator=\"loading\" class=\"chart-progress-indicator\"></div>' + '                <div ng-show=\"!loading && !emptyTurnovers\" lp-bar-chart=\"lp-bar-chart\" lp-chart-options=\"transactionsChartOptions\" class=\"transactionsChart lp-chart\"></div>' + '                <div ng-show=\"emptyTurnovers\" class=\"chart-empty-data\" lp-i18n=\"There is no data available for this period of time\"></div>' + '            </div>' + '            <div class=\"panel-body\">' + '                <div class=\"controls clearfix text-center\">' + '                    <button class=\"btn btn-default\" ng-class=\"{\\'btn-primary\\':series==\\'WITHDRAWAL\\'}\" ng-click=\"setSeries(\\'WITHDRAWAL\\')\">Spending</button>' + '                    <button class=\"btn btn-default\" ng-class=\"{\\'btn-primary\\':series==\\'DEPOSIT\\'}\" ng-click=\"setSeries(\\'DEPOSIT\\')\">Income</button>' + '                </div>' + '            </div>' + '        </div>' + '    </div>' + '</div>';\n\n\t    return template;\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ },\n/* 49 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;'use strict';\n\n\t/**\n\t*  ----------------------------------------------------------------\n\t*  Copyright © Backbase B.V.\n\t*  ----------------------------------------------------------------\n\t*  Author : Backbase R&D - Amsterdam - New York\n\t*  Filename : providers.js\n\t*  Description: Retrieves a list of transactions from the server and maintains their state\n\t*  ----------------------------------------------------------------\n\t*/\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, module) {\n\n\t    'use strict';\n\n\t    // @ngInject\n\n\t    exports.lpTransactions = function () {\n\n\t        // @ngInject\n\t        this.$get = function ($http, $q, lpCoreUtils, lpCoreError, lpTagsUtils) {\n\n\t            var decorateTransactionsWithAccountsName = function decorateTransactionsWithAccountsName(account, list) {\n\t                var names = account.accountsNames;\n\n\t                if (names && lpCoreUtils.isObject(names)) {\n\t                    lpCoreUtils.forEach(list, function (transaction) {\n\t                        transaction.accountName = names[transaction.accountId] || '';\n\t                    });\n\t                }\n\n\t                return list;\n\t            };\n\n\t            var config = {\n\t                pageSize: 20,\n\t                from: 0,\n\t                sort: '-bookingDateTime'\n\t            };\n\n\t            function API() {\n\n\t                var TransactionsModel = function TransactionsModel() {\n\t                    this.from = config.from;\n\t                    this.sort = config.sort;\n\t                    this.transactions = [];\n\t                    this.moreAvailable = true;\n\t                    this.account = null;\n\t                    this.errorCode = null;\n\t                };\n\n\t                TransactionsModel.prototype.availableFilters = {\n\t                    QUERY: 'query',\n\t                    FROM_DATE: 'fromDate',\n\t                    TO_DATE: 'toDate',\n\t                    FROM_AMOUNT: 'fromAmount',\n\t                    TO_AMOUNT: 'toAmount',\n\t                    CONTACT: 'contact',\n\t                    CATEGORY: 'category',\n\t                    DEBITCREDIT: 'bk'\n\t                };\n\n\t                /**\n\t                 * Clears list of transactions and resets from counter\n\t                 */\n\t                TransactionsModel.prototype.clearTransactionsList = function () {\n\t                    this.transactions = [];\n\t                    this.moreAvailable = true;\n\t                    this.from = config.from;\n\t                    this.errorCode = null;\n\t                    return this;\n\t                };\n\n\t                /**\n\t                 * Sets the search filters to be used when next loading transactions from the server\n\t                 * @param filters\n\t                 */\n\t                TransactionsModel.prototype.setFilters = function (filters) {\n\t                    if (lpTagsUtils) {\n\t                        lpTagsUtils.setFilter(filters);\n\t                        this.filters = lpTagsUtils.getFilters();\n\t                    } else {\n\t                        this.filters = filters;\n\t                    }\n\t                    return this;\n\t                };\n\n\t                /**\n\t                 * Clears any current search filters\n\t                 */\n\t                TransactionsModel.prototype.clearFilters = function () {\n\t                    if (lpTagsUtils) {\n\t                        this.filters = lpTagsUtils.clearFilters();\n\t                    } else {\n\t                        this.filters = {};\n\t                    }\n\t                    return this;\n\t                };\n\n\t                /**\n\t                 * Updates current search filters\n\t                 */\n\t                TransactionsModel.prototype.updateFilters = function () {\n\t                    if (lpTagsUtils) {\n\t                        this.filters = lpTagsUtils.getFilters();\n\t                    } else {\n\t                        this.filters = {};\n\t                    }\n\t                    return this;\n\t                };\n\n\t                /**\n\t                 * Enriches data with presentation logic\n\t                 * @param transactions\n\t                 * @returns {*}\n\t                 */\n\t                TransactionsModel.prototype.preprocessTransactions = function (transactions) {\n\t                    var lastTransaction = this.transactions[this.transactions.length - 1] || null;\n\t                    var moment = lpCoreUtils.date;\n\n\t                    if (transactions) {\n\t                        transactions = lpCoreUtils.map(transactions, function (transaction, i) {\n\t                            //figure out if the date should be displayed as a new date\n\t                            var prevTransaction = transactions[i - 1] || lastTransaction || null;\n\t                            var prevDate = prevTransaction ? moment(prevTransaction.bookingDateTime) : moment().add(1, 'days');\n\t                            var currDate = moment(transaction.bookingDateTime);\n\n\t                            transaction.newDate = prevDate.date() !== currDate.date() || prevDate.month() !== currDate.month() || prevDate.year() !== currDate.year();\n\n\t                            //normalize empty details to be null\n\t                            if (!transaction.details) {\n\t                                transaction.details = null;\n\t                            }\n\n\t                            //create details tab boolean values\n\t                            transaction.detailTabs = {\n\t                                details: true,\n\t                                categories: false\n\t                            };\n\n\t                            //move this to view?\n\t                            if (transaction.creditDebitIndicator === 'DBIT') {\n\t                                transaction.transactionAmount *= -1;\n\t                            }\n\n\t                            return transaction;\n\t                        });\n\t                    }\n\t                    return transactions;\n\t                };\n\n\t                TransactionsModel.prototype.getQueryParamaters = function () {\n\t                    var queryParams = {};\n\t                    var availableFilters = this.availableFilters;\n\t                    var debitCredit;\n\n\t                    // Key:\n\t                    // a: action\n\t                    // q: query\n\t                    // df: Date from\n\t                    // dt: Date to\n\t                    // af: Amount from,\n\t                    // at: Amount to\n\t                    // ca: counter party account\n\t                    // categoryIds: category ids\n\t                    // crdb (bk): debit: (1) DBIT, credit: (2) CRDT\n\t                    if (this.filters) {\n\n\t                        debitCredit = parseInt(this.filters[availableFilters.DEBITCREDIT], 10);\n\n\t                        if (this.filters.query) {\n\t                            queryParams.a = 'search';\n\t                            queryParams.q = this.filters[availableFilters.QUERY];\n\t                        }\n\t                        if (this.filters[availableFilters.FROM_DATE] && this.filters[availableFilters.TO_DATE]) {\n\t                            queryParams.df = this.filters[availableFilters.FROM_DATE];\n\t                            queryParams.dt = this.filters[availableFilters.TO_DATE];\n\t                        }\n\t                        if (!lpCoreUtils.isUndefined(this.filters[availableFilters.FROM_AMOUNT]) && !lpCoreUtils.isUndefined(this.filters[availableFilters.TO_AMOUNT])) {\n\t                            queryParams.af = this.filters[availableFilters.FROM_AMOUNT];\n\t                            queryParams.at = this.filters[availableFilters.TO_AMOUNT];\n\t                        }\n\t                        if (this.filters[availableFilters.CONTACT]) {\n\t                            queryParams.ca = this.filters[availableFilters.CONTACT];\n\t                        }\n\t                        if (this.filters[availableFilters.CATEGORY]) {\n\t                            queryParams.categoryIds = this.filters[availableFilters.CATEGORY];\n\t                        }\n\t                        if (this.filters[availableFilters.DEBITCREDIT]) {\n\t                            queryParams.crdb = debitCredit === 1 ? 'DBIT' : 'CRDT';\n\t                        }\n\t                    }\n\n\t                    //the minus here means descending order\n\t                    queryParams.sort = this.sort;\n\n\t                    return queryParams;\n\t                };\n\n\t                TransactionsModel.prototype.getExportTransactionsLink = function (format) {\n\t                    var accountId = this.account.id || this.account.ids || '';\n\t                    var queryParams = this.getQueryParamaters();\n\t                    var parts = config.transactionsEndpoint.replace('$(accountId)', accountId).split('?');\n\t                    var url = [];\n\n\t                    //add format param\n\t                    queryParams['format'] = format;\n\n\t                    queryParams = lpCoreUtils.buildQueryString(queryParams);\n\n\t                    if (!parts.length) {\n\t                        lpCoreError.throwException(new Error('Missing transactions service url'));\n\t                    }\n\n\t                    url.push(parts[0]);\n\t                    if (parts.length > 1) {\n\t                        queryParams = queryParams + '&' + parts[1];\n\t                    }\n\t                    url.push(queryParams);\n\n\t                    return url.join('?');\n\t                };\n\n\t                /**\n\t                 * Load transactions\n\t                 * @param account (pass account only for first load)\n\t                 */\n\t                TransactionsModel.prototype.loadMoreTransactions = function () {\n\t                    var self = this;\n\t                    var deferred = $q.defer();\n\n\t                    if (!this.account) {\n\t                        lpCoreError.throwException(new Error('No account specified'));\n\t                    }\n\n\t                    if (this.account.allAccounts) {\n\t                        this.account.id = '';\n\t                    }\n\n\t                    var queryParams = lpCoreUtils.assign({\n\t                        f: this.from,\n\t                        l: config.pageSize + 1\n\t                    }, this.getQueryParamaters());\n\n\t                    this.loading = true;\n\n\t                    //update paging info\n\t                    this.from = this.from + config.pageSize;\n\n\t                    $http.get(config.transactionsEndpoint, {\n\t                        data: {\n\t                            accountId: this.account.id || this.account.ids || ''\n\t                        },\n\t                        params: queryParams\n\t                    }).success(function (data) {\n\t                        self.errorCode = null;\n\t                        //need to normalize null data to empty array\n\t                        if (data === null || data === 'null') {\n\t                            data = [];\n\t                        }\n\n\t                        var newTransactions = self.preprocessTransactions(lpCoreUtils.compact(data));\n\t                        if (newTransactions && newTransactions.length <= config.pageSize) {\n\t                            self.moreAvailable = false;\n\t                        } else if (newTransactions) {\n\t                            newTransactions.pop();\n\t                        }\n\n\t                        self.transactions = self.transactions.concat(newTransactions);\n\t                        self.transactions = decorateTransactionsWithAccountsName(self.account, self.transactions);\n\t                        deferred.resolve(self.transactions);\n\t                    }).error(function (data) {\n\t                        self.errorCode = data.errorCode || 500;\n\t                    })['finally'](function () {\n\t                        self.loading = false;\n\t                    });\n\n\t                    return deferred.promise;\n\t                };\n\n\t                /**\n\t                 * Loads a new set of transactions for the given account\n\t                 * @param account\n\t                 */\n\t                TransactionsModel.prototype.loadTransactions = function (account) {\n\n\t                    this.clearTransactionsList();\n\n\t                    this.account = account;\n\t                    return this.loadMoreTransactions();\n\t                };\n\n\t                /**\n\t                 * Enriches/updates data ready for view rendering\n\t                 * @param transactions\n\t                 * @returns {*}\n\t                 */\n\t                TransactionsModel.prototype.preprocessTransactionDetails = function (details, transaction) {\n\n\t                    var specialDetails = [];\n\t                    var customDetails = [];\n\n\t                    var detailsToOmit = ['location'];\n\t                    var specialDetailsKeys = ['address', 'merchantType', 'bookingDateTime'];\n\n\t                    var longValueKeys = ['transactionId'];\n\n\t                    if (details) {\n\t                        if (lpCoreUtils.isObject(details.location)) {\n\t                            //special case for map data\n\t                            var latLong = details.location.latitude + ',' + details.location.longitude;\n\t                            var mapParams = ['size=' + '160x90', 'center=' + latLong, 'zoom=' + 12, 'format=' + 'jpg', 'sensor=' + false, 'markers=' + encodeURIComponent('size:med|color:red|') + latLong];\n\t                            details.location.mapUrl = 'http://maps.googleapis.com/maps/api/staticmap?' + mapParams.join('&');\n\t                        }\n\t                        //add date to details for convenience\n\t                        details.bookingDateTime = transaction.bookingDateTime;\n\n\t                        //NOTE: angular 1.1.5 breaks when iterating over a map with duplicate values!\n\t                        //need to convert to an array of objects for happy view rendering. This will be fixed in 1.2\n\t                        for (var key in details) {\n\t                            if (details.hasOwnProperty(key) && detailsToOmit.indexOf(key) < 0) {\n\t                                var detailData = {\n\t                                    name: key,\n\t                                    value: details[key],\n\t                                    longValue: longValueKeys.indexOf(key) > -1\n\t                                };\n\t                                if (specialDetailsKeys.indexOf(key) > -1) {\n\t                                    specialDetails.push(detailData);\n\t                                } else {\n\t                                    customDetails.push(detailData);\n\t                                }\n\t                            }\n\t                        }\n\n\t                        details.special = specialDetails;\n\t                        details.custom = customDetails;\n\t                    }\n\t                    return details;\n\t                };\n\n\t                /**\n\t                 * Enriches data with presentation logic\n\t                 * @param transactions\n\t                 * @returns {*}\n\t                 */\n\t                TransactionsModel.prototype.loadTransactionDetails = function (transaction) {\n\t                    var self = this;\n\n\t                    if (!transaction.details || lpCoreUtils.isEmpty(transaction.details)) {\n\t                        transaction.loading = true;\n\n\t                        return $http.get(config.transactionDetailsEndpoint, {\n\t                            params: {\n\t                                transactionId: transaction.id\n\t                            }\n\t                        }).then(function (response) {\n\t                            transaction.loading = false;\n\t                            transaction.details = {};\n\t                            return lpCoreUtils.assign(transaction.details, self.preprocessTransactionDetails(response.data, transaction));\n\t                        }, function (response) {\n\t                            transaction.loading = false;\n\t                            transaction.errorCode = response.data.errorCode || 500;\n\t                        });\n\t                    } else {\n\t                        return $q.when(transaction.details);\n\t                    }\n\t                };\n\n\t                TransactionsModel.prototype.updateTransactionCategory = function (transaction, categoryId) {\n\t                    return $http.put(config.transactionsEndpoint + '/' + transaction.id, {\n\t                        accountId: this.account.id,\n\t                        categoryId: categoryId\n\t                    }).success(function (data) {\n\t                        transaction.categoryId = categoryId;\n\t                    }).error(function (data) {\n\t                        transaction.errorCode = data.errorCode || 500;\n\t                    });\n\t                };\n\n\t                TransactionsModel.prototype.updateSimilarTransactionCategory = function (transaction, categoryId) {\n\t                    return $http.put(config.transactionsEndpoint + '/' + transaction.id, {\n\t                        accountId: this.account.id,\n\t                        categoryId: categoryId,\n\t                        condition: 'SIMILAR'\n\t                    }).success(function (data) {\n\t                        transaction.categoryId = categoryId;\n\t                    }).error(function (data) {\n\t                        transaction.errorCode = data.errorCode || 500;\n\t                    });\n\t                };\n\n\t                /**\n\t                 * Checks for errors while loading transactions\n\t                 * @returns {boolean}\n\t                 */\n\t                TransactionsModel.prototype.allowMoreResults = function () {\n\t                    var allowMoreResults = !this.loading && this.moreAvailable && !this.errorCode;\n\t                    return allowMoreResults;\n\t                };\n\n\t                /**\n\t                 * Checks for errors during download and ensures that no transactions have been loaded\n\t                 * @returns {boolean}\n\t                 */\n\t                TransactionsModel.prototype.noTransactionsFound = function () {\n\n\t                    var noTransactionsFound = !this.loading && this.transactions.length === 0 && !this.errorCode;\n\t                    return noTransactionsFound;\n\t                };\n\n\t                /**\n\t                 * Checks whether or not there are search filters set\n\t                 * @returns {boolean}\n\t                 */\n\t                TransactionsModel.prototype.isSearching = function () {\n\n\t                    //searching if filters in not empty\n\t                    if (this.filters) {\n\t                        for (var key in this.filters) {\n\t                            if (this.filters.hasOwnProperty(key)) {\n\t                                return true;\n\t                            }\n\t                        }\n\t                    }\n\t                    return false;\n\t                };\n\n\t                return new TransactionsModel();\n\t            }\n\n\t            return {\n\t                setConfig: function setConfig(options) {\n\t                    config = lpCoreUtils(options).chain().mapValues(lpCoreUtils.resolvePortalPlaceholders).defaults(config).value();\n\t                    return this;\n\t                },\n\n\t                getConfig: function getConfig(prop) {\n\t                    if (prop && lpCoreUtils.isString(prop)) {\n\t                        return config[prop];\n\t                    } else {\n\t                        return config;\n\t                    }\n\t                },\n\n\t                /**\n\t                 * Get preconfigured endpoint\n\t                 * @param  {String} endpointSrc key which need to be configured from the widget\n\t                 * @return {String} resolved endpoint or undefined if optional and not defined\n\t                 */\n\t                getEndpoint: function getEndpoint(endpointSrc) {\n\t                    var endpoint = this.getConfig(endpointSrc);\n\n\t                    if (!endpoint) {\n\t                        lpCoreError.throwException(new Error(endpointSrc + ' is not configured.\\n' + 'for more information read here:\\n' + 'https://components.backbase.com/items/module-transactions#provider\\n'));\n\t                    }\n\n\t                    return endpoint;\n\t                },\n\n\t                api: API\n\t            };\n\t        };\n\t    };\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ },\n/* 50 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;'use strict';\n\n\t/**\n\t*  ----------------------------------------------------------------\n\t*  Copyright © Backbase B.V.\n\t*  ----------------------------------------------------------------\n\t*  Author : Backbase R&D - Amsterdam - New York\n\t*  Filename : directives.js\n\t*  Description: Directives for transactions\n\t*  ----------------------------------------------------------------\n\t*/\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, module) {\n\n\t    'use strict';\n\n\t    // @ngInject\n\n\t    exports.lpBalanceUpdate = function () {\n\t        return {\n\t            restrict: 'A',\n\t            require: 'ngModel',\n\t            link: function link(scope, element, attrs, ngModelCtrl) {\n\t                element.addClass('lp-amount');\n\n\t                scope.$watch(function () {\n\t                    return ngModelCtrl.$modelValue;\n\t                }, function (newValue, oldValue) {\n\n\t                    if (newValue.id !== oldValue.id) {\n\t                        return;\n\t                    }\n\n\t                    //class names\n\t                    var cssClass = {\n\t                        increase: 'lp-increase-amount',\n\t                        decrease: 'lp-decrease-amount'\n\t                    };\n\n\t                    //time before removing class in milliseconds\n\t                    var removeClassTimeout = 2000;\n\n\t                    if (newValue.delta === 1) {\n\n\t                        //flash green\n\t                        element.addClass(cssClass.increase);\n\t                        setTimeout(function () {\n\t                            element.removeClass(cssClass.increase);\n\t                        }, removeClassTimeout);\n\t                    } else if (newValue.delta === -1) {\n\n\t                        //flash red\n\t                        element.addClass(cssClass.decrease);\n\t                        setTimeout(function () {\n\t                            element.removeClass(cssClass.decrease);\n\t                        }, removeClassTimeout);\n\t                    }\n\n\t                    //set delta to equal so subsequent re-renders do not trigger the animation if the accounts model has not been reloaded\n\t                    newValue.delta = 0;\n\t                });\n\t            }\n\t        };\n\t    };\n\n\t    /**\n\t     * Common directive used by multiple transactions widgets\n\t     * to apply responsive classes to the element\n\t     * and execute callback\n\t     *\n\t     *  Usage: <div lp-responsive-callback=\"mainCtrl.responsiveCallback(size)\">...</div>\n\t     */\n\n\t    // @ngInject\n\t    exports.lpResponsiveCallback = function ($parse, lpUIResponsive, $timeout) {\n\t        function linkFn(scope, element, attrs) {\n\t            var lpResponsiveCallback = $parse(attrs.lpResponsiveCallback);\n\n\t            var applyRule = function applyRule(size) {\n\t                return function () {\n\t                    element.removeClass('lp-tile-size lp-small-size lp-medium-size lp-large-size');\n\t                    element.addClass('lp-' + size + '-size');\n\n\t                    $timeout(function () {\n\t                        lpResponsiveCallback(scope, { size: size });\n\t                    });\n\t                };\n\t            };\n\n\t            lpUIResponsive.enable(element).rule({\n\t                'max-width': 200,\n\t                then: applyRule('tile')\n\t            }).rule({\n\t                'min-width': 201,\n\t                'max-width': 375,\n\t                then: applyRule('small')\n\t            }).rule({\n\t                'min-width': 376,\n\t                'max-width': 600,\n\t                then: applyRule('medium')\n\t            }).rule({\n\t                'min-width': 601,\n\t                then: applyRule('large')\n\t            });\n\t        }\n\n\t        return {\n\t            restrict: 'A',\n\t            link: linkFn\n\t        };\n\t    };\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** scripts/main.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/_karma_webpack_//\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 311c6a0d5ebb75b7e807\n **/","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!./../../../../../node_modules/cli/node_modules/css-loader/index.js!./../../../../../node_modules/cli/node_modules/less-loader/index.js!./../../../../../node_modules/cli/node_modules/postcss-loader/index.js!./base.less\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!./../../../../../node_modules/cli/node_modules/style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!./../../../../../node_modules/cli/node_modules/css-loader/index.js!./../../../../../node_modules/cli/node_modules/less-loader/index.js!./../../../../../node_modules/cli/node_modules/postcss-loader/index.js!./base.less\", function() {\n\t\t\tvar newContent = require(\"!!./../../../../../node_modules/cli/node_modules/css-loader/index.js!./../../../../../node_modules/cli/node_modules/less-loader/index.js!./../../../../../node_modules/cli/node_modules/postcss-loader/index.js!./base.less\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./styles/base.less\n ** module id = 1\n ** module chunks = 0\n **/","exports = module.exports = require(\"./../../../../../node_modules/cli/node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".lp-transactions-list-authorizations .lp-auth-header{padding-left:15px;cursor:pointer;font-size:1.3em}.lp-transactions-list-authorizations .centered div{line-height:1.5}.lp-chart-balances,.lp-chart-turnovers{height:260px}.chart-progress-indicator .panel{border:0}.chart-empty-data{text-align:center;padding:80px 0}.lp-search-right .input-group-btn{width:170px}.lp-search-right .input-group-btn>button>span{font-size:.857em;width:100%;min-width:25px;display:inline-block;overflow:hidden;text-overflow:ellipsis;line-height:1em}.lp-search-right .input-group-btn>button>span:before{font-family:Backbase-Neue;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;content:\\\"\\\\E603\\\";position:absolute;right:5px;top:50%;margin-top:-.5em}.lp-search-right .input-group-btn.open>button>span:before{content:\\\"\\\\E604\\\"}.lp-search-right .input-group-btn .dropdown-toggle i{display:none}.lp-search-right .input-group-btn .dropdown-toggle .option-icon{display:inline-block}.lp-search-right .dropdown .dropdown-menu{margin-top:4px;right:0;border:1px solid #ddd}.lp-search-right .dropdown .dropdown-menu>li:first-child{border-top:none}.lp-search-right .dropdown .dropdown-menu>li>a{padding:20px}.lp-search-right .dropdown .dropdown-menu>li>a i{font-size:1.2em}.lp-search-right .dropdown .dropdown-menu>li>a .option-label{font-size:1em;padding:0 36px 0 18px}.lp-search-right .dropdown .dropdown-menu>li>a>span>i.lp-icon-checkmark_fat{visibility:hidden;position:absolute;top:22px;right:20px}.lp-search-right .dropdown .dropdown-menu>li.active>a>span>i.lp-icon-checkmark_fat{visibility:visible}.lp-search-right .dropdown .dropdown-menu>li.active>a>span>i.option-icon{color:currentColor}.lp-medium-size .lp-search-tags>input,.lp-small-size .lp-search-tags>input{height:47px}.lp-medium-size .lp-search-right .input-group-btn,.lp-small-size .lp-search-right .input-group-btn{width:60px}.lp-medium-size .lp-search-right .input-group-btn button .option-label,.lp-small-size .lp-search-right .input-group-btn button .option-label{display:none}.lp-medium-size .lp-search-right .input-group-btn button .option-icon,.lp-small-size .lp-search-right .input-group-btn button .option-icon{font-size:1.8em}.lp-transactions-export-btn{text-align:center}.lp-transactions-export-btn button>span{padding-left:5px}.lp-medium-size .lp-transactions-export-btn button>span,.lp-small-size .lp-transactions-export-btn button>span{display:none}.export-transactions-modal p{margin:0;padding:0}.export-transactions-modal .panel-body{padding:0}.export-transactions-modal .modal-header{color:#fff;background-color:#d67500;margin:0;padding:15px 20px;text-transform:uppercase}.export-transactions-modal .modal-body{padding:0 20px;margin:20px 0;text-align:center}.export-transactions-modal .modal-body ul{list-style-type:none;text-align:left;margin:40px 15%;padding:0}.export-transactions-modal .modal-footer{margin:40px 0 20px;padding:0 20px;text-align:center}.export-transactions-modal .modal-footer button.btn-primary{border:0 none;color:#fff;background-color:#d67500;padding-left:30px;padding-right:30px}.export-transactions-modal .modal-footer button.btn-primary[disabled]{background-color:#878787}.export-transactions-modal .modal-footer i{color:#d67500}.export-transactions-modal .modal-footer p{margin-top:20px}.lp-transactions-list{min-height:248px}.transaction-details .transaction-details-navbar .tab-content{background-color:transparent;padding:0 19px 14px}.transaction-details .transaction-details-navbar .tab-content .lp-category-select{margin-top:14px}.transaction-details .transaction-details-navbar .tab-content .lp-transaction-details .progress-indicator{border:0 none}.transaction-details .transaction-details-navbar .tab-content .lp-transaction-details .row>div{margin-top:14px;text-align:left;padding-right:10px}.transaction-details .transaction-details-navbar .tab-content .lp-transaction-details .row>div .transaction-detail-label{line-height:1em;margin-bottom:10px;font-weight:700}.transaction-details .transaction-details-navbar .tab-content .lp-transaction-details .row>div .transaction-detail-map{width:100%;height:90px;max-width:160px}.transaction-details .transaction-details-navbar .tab-content .lp-transaction-details .row.transaction-detail-reference{margin-top:23px}.transaction-details .transaction-details-navbar .tab-content .lp-transaction-details .row.transaction-detail-reference .transaction-detail-value{white-space:nowrap}.lp-transactions-list-category{max-width:150px}.lp-transactions-list-category.lp-transactions-list-category-noanim{transition:none}.lp-transactions-list-item .lp-transactions-list-item-head{display:block;padding-left:9px;white-space:nowrap;transition:padding-left .4s ease}.lp-transactions-list-item-head-noanim{transition:none}.preview-all .lp-transactions-list-item-head,.preview.lp-transactions-list-item-head{padding-left:160px}.lp-transactions-list .column{display:inline-block;vertical-align:top;transition:padding .4s ease,width .4s ease}.lp-transactions-list-large .column{padding-left:15px;padding-right:15px}.lp-transactions-list .lp-transactions-list-item-head .lp-transactions-list-item-category{display:block}.lp-transactions-list-item-content{height:55px;position:relative;width:100%}.lp-transactions-list-item-date{width:16.66666667%}.lp-transactions-list-large .lp-transactions-list-item-date{width:8.33333333%}.lp-transactions-list-no-icons .lp-transactions-list-item-date{width:16.66666667%}.lp-transactions-list-item-date-value{font-size:16px;font-weight:500;line-height:1.1;text-align:center}.lp-transactions-list-item-icon{width:8.33333333%}.lp-transactions-list-medium .lp-transactions-list-item-icon,.lp-transactions-list-no-icons .lp-transactions-list-item-icon,.lp-transactions-list-small .lp-transactions-list-item-icon{display:none}.lp-transactions-list-item-summary{text-align:left;width:58.33333333%}.lp-transactions-list-item-name{font-size:16px;font-weight:500;line-height:1.1;margin-bottom:3px}.lp-transactions-list-item-info,.lp-transactions-list-item-type{font-size:12px;font-weight:500;line-height:1.1;margin-top:0;margin-bottom:0;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.lp-transactions-list-large .lp-transactions-list-item-info,.lp-transactions-list-medium .lp-transactions-list-item-type,.lp-transactions-list-small .lp-transactions-list-item-type{display:none}.lp-transactions-list-item-amount{font-weight:500;line-height:1.1;text-align:right;white-space:nowrap;width:24.99999999%}.lp-transactions-list-item-amount-value{float:right;font-size:16px}.lp-transactions-list-item-details{height:0;overflow:hidden}.lp-transactions-list-item.open .lp-transactions-list-item-details{height:auto}.preview-all .lp-transactions-list-category{width:160px}.lp-transactions-list-item-head-noanim .lp-transaction-category{transition:none}.lp-search-wrapper{margin-left:0}.lp-search-wrapper .sort-select button.dropdown-toggle .caret{display:none}\", \"\"]);\n\n// exports\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** /Users/igorn/~/cli/~/css-loader!/Users/igorn/~/cli/~/less-loader!/Users/igorn/~/cli/~/postcss-loader!./styles/base.less\n ** module id = 2\n ** module chunks = 0\n **/","/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n// css base code, injected by the css-loader\r\nmodule.exports = function() {\r\n\tvar list = [];\r\n\r\n\t// return the list of modules as css string\r\n\tlist.toString = function toString() {\r\n\t\tvar result = [];\r\n\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\tvar item = this[i];\r\n\t\t\tif(item[2]) {\r\n\t\t\t\tresult.push(\"@media \" + item[2] + \"{\" + item[1] + \"}\");\r\n\t\t\t} else {\r\n\t\t\t\tresult.push(item[1]);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result.join(\"\");\r\n\t};\r\n\r\n\t// import a list of modules into the list\r\n\tlist.i = function(modules, mediaQuery) {\r\n\t\tif(typeof modules === \"string\")\r\n\t\t\tmodules = [[null, modules, \"\"]];\r\n\t\tvar alreadyImportedModules = {};\r\n\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\tvar id = this[i][0];\r\n\t\t\tif(typeof id === \"number\")\r\n\t\t\t\talreadyImportedModules[id] = true;\r\n\t\t}\r\n\t\tfor(i = 0; i < modules.length; i++) {\r\n\t\t\tvar item = modules[i];\r\n\t\t\t// skip already imported module\r\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\r\n\t\t\t//  when a module is imported multiple times with different media queries.\r\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\r\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\r\n\t\t\t\tif(mediaQuery && !item[2]) {\r\n\t\t\t\t\titem[2] = mediaQuery;\r\n\t\t\t\t} else if(mediaQuery) {\r\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\r\n\t\t\t\t}\r\n\t\t\t\tlist.push(item);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\treturn list;\r\n};\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** /Users/igorn/~/cli/~/css-loader/lib/css-base.js\n ** module id = 3\n ** module chunks = 0\n **/","/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\nvar stylesInDom = {},\r\n\tmemoize = function(fn) {\r\n\t\tvar memo;\r\n\t\treturn function () {\r\n\t\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\r\n\t\t\treturn memo;\r\n\t\t};\r\n\t},\r\n\tisOldIE = memoize(function() {\r\n\t\treturn /msie [6-9]\\b/.test(window.navigator.userAgent.toLowerCase());\r\n\t}),\r\n\tgetHeadElement = memoize(function () {\r\n\t\treturn document.head || document.getElementsByTagName(\"head\")[0];\r\n\t}),\r\n\tsingletonElement = null,\r\n\tsingletonCounter = 0;\r\n\r\nmodule.exports = function(list, options) {\r\n\tif(typeof DEBUG !== \"undefined\" && DEBUG) {\r\n\t\tif(typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\r\n\t}\r\n\r\n\toptions = options || {};\r\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\r\n\t// tags it will allow on a page\r\n\tif (typeof options.singleton === \"undefined\") options.singleton = isOldIE();\r\n\r\n\tvar styles = listToStyles(list);\r\n\taddStylesToDom(styles, options);\r\n\r\n\treturn function update(newList) {\r\n\t\tvar mayRemove = [];\r\n\t\tfor(var i = 0; i < styles.length; i++) {\r\n\t\t\tvar item = styles[i];\r\n\t\t\tvar domStyle = stylesInDom[item.id];\r\n\t\t\tdomStyle.refs--;\r\n\t\t\tmayRemove.push(domStyle);\r\n\t\t}\r\n\t\tif(newList) {\r\n\t\t\tvar newStyles = listToStyles(newList);\r\n\t\t\taddStylesToDom(newStyles, options);\r\n\t\t}\r\n\t\tfor(var i = 0; i < mayRemove.length; i++) {\r\n\t\t\tvar domStyle = mayRemove[i];\r\n\t\t\tif(domStyle.refs === 0) {\r\n\t\t\t\tfor(var j = 0; j < domStyle.parts.length; j++)\r\n\t\t\t\t\tdomStyle.parts[j]();\r\n\t\t\t\tdelete stylesInDom[domStyle.id];\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n}\r\n\r\nfunction addStylesToDom(styles, options) {\r\n\tfor(var i = 0; i < styles.length; i++) {\r\n\t\tvar item = styles[i];\r\n\t\tvar domStyle = stylesInDom[item.id];\r\n\t\tif(domStyle) {\r\n\t\t\tdomStyle.refs++;\r\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\r\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\r\n\t\t\t}\r\n\t\t\tfor(; j < item.parts.length; j++) {\r\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tvar parts = [];\r\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\r\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\r\n\t\t\t}\r\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction listToStyles(list) {\r\n\tvar styles = [];\r\n\tvar newStyles = {};\r\n\tfor(var i = 0; i < list.length; i++) {\r\n\t\tvar item = list[i];\r\n\t\tvar id = item[0];\r\n\t\tvar css = item[1];\r\n\t\tvar media = item[2];\r\n\t\tvar sourceMap = item[3];\r\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\r\n\t\tif(!newStyles[id])\r\n\t\t\tstyles.push(newStyles[id] = {id: id, parts: [part]});\r\n\t\telse\r\n\t\t\tnewStyles[id].parts.push(part);\r\n\t}\r\n\treturn styles;\r\n}\r\n\r\nfunction createStyleElement() {\r\n\tvar styleElement = document.createElement(\"style\");\r\n\tvar head = getHeadElement();\r\n\tstyleElement.type = \"text/css\";\r\n\thead.appendChild(styleElement);\r\n\treturn styleElement;\r\n}\r\n\r\nfunction createLinkElement() {\r\n\tvar linkElement = document.createElement(\"link\");\r\n\tvar head = getHeadElement();\r\n\tlinkElement.rel = \"stylesheet\";\r\n\thead.appendChild(linkElement);\r\n\treturn linkElement;\r\n}\r\n\r\nfunction addStyle(obj, options) {\r\n\tvar styleElement, update, remove;\r\n\r\n\tif (options.singleton) {\r\n\t\tvar styleIndex = singletonCounter++;\r\n\t\tstyleElement = singletonElement || (singletonElement = createStyleElement());\r\n\t\tupdate = applyToSingletonTag.bind(null, styleElement, styleIndex, false);\r\n\t\tremove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);\r\n\t} else if(obj.sourceMap &&\r\n\t\ttypeof URL === \"function\" &&\r\n\t\ttypeof URL.createObjectURL === \"function\" &&\r\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\r\n\t\ttypeof Blob === \"function\" &&\r\n\t\ttypeof btoa === \"function\") {\r\n\t\tstyleElement = createLinkElement();\r\n\t\tupdate = updateLink.bind(null, styleElement);\r\n\t\tremove = function() {\r\n\t\t\tstyleElement.parentNode.removeChild(styleElement);\r\n\t\t\tif(styleElement.href)\r\n\t\t\t\tURL.revokeObjectURL(styleElement.href);\r\n\t\t};\r\n\t} else {\r\n\t\tstyleElement = createStyleElement();\r\n\t\tupdate = applyToTag.bind(null, styleElement);\r\n\t\tremove = function() {\r\n\t\t\tstyleElement.parentNode.removeChild(styleElement);\r\n\t\t};\r\n\t}\r\n\r\n\tupdate(obj);\r\n\r\n\treturn function updateStyle(newObj) {\r\n\t\tif(newObj) {\r\n\t\t\tif(newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap)\r\n\t\t\t\treturn;\r\n\t\t\tupdate(obj = newObj);\r\n\t\t} else {\r\n\t\t\tremove();\r\n\t\t}\r\n\t};\r\n}\r\n\r\nvar replaceText = (function () {\r\n\tvar textStore = [];\r\n\r\n\treturn function (index, replacement) {\r\n\t\ttextStore[index] = replacement;\r\n\t\treturn textStore.filter(Boolean).join('\\n');\r\n\t};\r\n})();\r\n\r\nfunction applyToSingletonTag(styleElement, index, remove, obj) {\r\n\tvar css = remove ? \"\" : obj.css;\r\n\r\n\tif (styleElement.styleSheet) {\r\n\t\tstyleElement.styleSheet.cssText = replaceText(index, css);\r\n\t} else {\r\n\t\tvar cssNode = document.createTextNode(css);\r\n\t\tvar childNodes = styleElement.childNodes;\r\n\t\tif (childNodes[index]) styleElement.removeChild(childNodes[index]);\r\n\t\tif (childNodes.length) {\r\n\t\t\tstyleElement.insertBefore(cssNode, childNodes[index]);\r\n\t\t} else {\r\n\t\t\tstyleElement.appendChild(cssNode);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction applyToTag(styleElement, obj) {\r\n\tvar css = obj.css;\r\n\tvar media = obj.media;\r\n\tvar sourceMap = obj.sourceMap;\r\n\r\n\tif(media) {\r\n\t\tstyleElement.setAttribute(\"media\", media)\r\n\t}\r\n\r\n\tif(styleElement.styleSheet) {\r\n\t\tstyleElement.styleSheet.cssText = css;\r\n\t} else {\r\n\t\twhile(styleElement.firstChild) {\r\n\t\t\tstyleElement.removeChild(styleElement.firstChild);\r\n\t\t}\r\n\t\tstyleElement.appendChild(document.createTextNode(css));\r\n\t}\r\n}\r\n\r\nfunction updateLink(linkElement, obj) {\r\n\tvar css = obj.css;\r\n\tvar media = obj.media;\r\n\tvar sourceMap = obj.sourceMap;\r\n\r\n\tif(sourceMap) {\r\n\t\t// http://stackoverflow.com/a/26603875\r\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\r\n\t}\r\n\r\n\tvar blob = new Blob([css], { type: \"text/css\" });\r\n\r\n\tvar oldSrc = linkElement.href;\r\n\r\n\tlinkElement.href = URL.createObjectURL(blob);\r\n\r\n\tif(oldSrc)\r\n\t\tURL.revokeObjectURL(oldSrc);\r\n}\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** /Users/igorn/~/cli/~/style-loader/addStyles.js\n ** module id = 4\n ** module chunks = 0\n **/","/**\n *  ----------------------------------------------------------------\n *  Copyright © Backbase B.V.\n *  ----------------------------------------------------------------\n *  Author : Backbase R&D - Amsterdam - New York\n *  Filename : main.js\n *  Description:\n *  Main File Module Transactions\n *  ----------------------------------------------------------------\n */\n\ndefine(function (require, exports, module) {\n\n    'use strict';\n\n    module.name = 'module-transactions-3';\n\n    var base = require('base');\n    var core = require('core');\n    var tags = require('module-tags');\n    var charts = require('module-charts');\n\n    // Custom components\n    var categories = require('./components/transactions-categories/scripts/main');\n    var p2p = require('./components/transactions-p2p/scripts/main');\n    var currency = require('./components/transactions-currency/scripts/main');\n    var transactionsList = require('./components/transactions-list/scripts/main');\n    var transactionsListAuth = require('./components/transactions-list-authorizations/scripts/main');\n    var transactionsSearch = require('./components/transactions-search/scripts/main');\n    var spendingsChart = require('./components/transactions-spendings/scripts/main');\n    var transactionsCharts = require('./components/transactions-charts/scripts/main');\n    var transactionsCurrency = require('./components/transactions-currency/scripts/main');\n\n    var deps = [\n        core.name,\n        tags.name,\n        charts.name,\n        categories.name,\n        p2p.name,\n        currency.name,\n        transactionsList.name,\n        transactionsListAuth.name,\n        transactionsSearch.name,\n        spendingsChart.name,\n        transactionsCharts.name,\n        transactionsCurrency.name\n    ];\n\n    module.exports = base.createModule(module.name, deps)\n        .provider( require('./providers') )\n        .directive( require('./directives') );\n});\n\n\n\n/** WEBPACK FOOTER **\n ** ./scripts/main.js\n **/","module.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tmodule.children = [];\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n}\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)/buildin/module.js\n ** module id = 6\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_7__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"base\"\n ** module id = 7\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_8__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"core\"\n ** module id = 8\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_9__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"module-tags\"\n ** module id = 9\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_10__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"module-charts\"\n ** module id = 10\n ** module chunks = 0\n **/","/**\n *  ----------------------------------------------------------------\n *  Copyright © Backbase B.V.\n *  ----------------------------------------------------------------\n *  Author : Backbase R&D - Amsterdam - New York\n *  Filename : main.js\n *  Description:\n *  Transactions Categories Component main file\n *  ----------------------------------------------------------------\n */\n\ndefine(function (require, exports, module) {\n\n    'use strict';\n\n    module.name = 'component.transactions-categories';\n\n    var base = require('base');\n    var core = require('core');\n\n    var deps = [\n        core.name\n    ];\n\n    module.exports = base.createModule(module.name, deps)\n        .provider( require('./providers') )\n        .directive( require('./directives') )\n        .filter( require('./filters') );\n});\n\n\n\n/** WEBPACK FOOTER **\n ** ./scripts/components/transactions-categories/scripts/main.js\n **/","/**\n * Providers\n * @module transactions\n */\ndefine(function(require, exports, module) {\n    'use strict';\n\n    // @ngInject\n    exports.lpTransactionsCategory = function(lpCoreUtils) {\n        var messages = {\n            generic: 'Generic error',\n            badId: 'The id must be a string'\n        };\n\n        // @ngInject\n        this.$get = function($http, $q, lpCoreError) {\n            var config = {\n                endpoint: ''\n            };\n\n            function API() {\n                function TransactionsCategoryModel() {\n                    this.categories = [];\n                }\n\n                /**\n                 * Returns all the categories\n                 * @return {Object} A promise\n                 */\n                TransactionsCategoryModel.prototype.getAll = function() {\n                    return $http.get(config.endpoint)\n                        // success\n                        .then(function(response) {\n                            this.categories = lpCoreUtils.isArray(response.data) ?\n                                response.data : [];\n                            return this.categories;\n                        }.bind(this),\n                        // error\n                        function(data, status, headers, options) {\n                            lpCoreError.throwException(new Error(messages.generic));\n                        });\n                };\n\n                /**\n                 * Returns the category that corresponds to `id`\n                 * @param  {String} id the `id` of the category\n                 * @return {Object}    A promise\n                 */\n                TransactionsCategoryModel.prototype.getById = function(id) {\n                    var category = lpCoreUtils(this.categories).find({id: id});\n                    return $q.when(category);\n                };\n\n                /**\n                 * Creates a new category\n                 * @param  {Object} category The `category` to be created\n                 * @param  {String} category.name\n                 * @param  {String} category.color\n                 * @return {Object}          A promise\n                 */\n                TransactionsCategoryModel.prototype.create = function(category) {\n                    if (!lpCoreUtils.isObject(category) || !category.name || !category.color) {\n                        lpCoreError.throwException(new Error('Bad category data: ' + category));\n                    }\n\n                    return $http.post(config.endpoint, category)\n                        // success\n                        .then(function(response) {\n                            var newCategory = response.data;\n                            this.categories.push(newCategory);\n                            return newCategory;\n                        }.bind(this),\n                        // error\n                        function(response) {\n                            lpCoreError.throwException(new Error(messages.generic));\n                        });\n                };\n\n                /**\n                 * Deletes the category with a certain`id`\n                 * @param  {String} id The `id` of the category\n                 * @return {Object}    A promise\n                 */\n                TransactionsCategoryModel.prototype.removeById = function(id) {\n                    if (!lpCoreUtils.isString(id)) {\n                        lpCoreError.throwException(new TypeError(messages.badId));\n                    }\n\n                    return $http['delete'](config.endpoint + '/' + id)\n                    // success\n                    .then(function(response) {\n                        var category = lpCoreUtils(this.categories).find({ id: id });\n                        this.categories.splice(lpCoreUtils(this.categories).indexOf(category), 1);\n                        return category;\n                    }.bind(this),\n                    // error\n                    function(response) {\n                        lpCoreError.throwException(new Error(messages.generic));\n                    });\n                };\n\n                return new TransactionsCategoryModel();\n            }\n\n            return {\n                setConfig: function(options) {\n                    config = lpCoreUtils(options).chain()\n                        .mapValues(lpCoreUtils.resolvePortalPlaceholders)\n                        .defaults(config)\n                        .value();\n                    return this;\n                },\n\n                api: API\n            };\n        };\n    };\n});\n\n\n\n/** WEBPACK FOOTER **\n ** ./scripts/components/transactions-categories/scripts/providers.js\n **/","define(function (require, exports, module) {\n\n    'use strict';\n\n    var Hammer = require('hammerjs');\n    var $ = window.jQuery;\n    // TODO: put in core.utils\n    function rgb2hsl() {\n        var r = arguments[0] / 255,\n            g = arguments[1] / 255,\n            b = arguments[2] / 255;\n        var max = Math.max(r, g, b),\n            min = Math.min(r, g, b);\n        var h, s, l = (max + min) / 2;\n\n        if(max === min){\n            h = s = 0; // achromatic\n        } else {\n            var d = max - min;\n            s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n            switch(max) {\n                case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n                case g: h = (b - r) / d + 2; break;\n                case b: h = (r - g) / d + 4; break;\n            }\n            h = h / 6;\n        }\n\n        return {\n            h: Math.round(h * 360),\n            s: Math.round(s * 100),\n            l: Math.round(l * 100)\n        };\n    }\n\n    // @ngInject\n    exports.lpCategoryDisplay = function($templateCache, lpCoreBus) {\n        $templateCache.put('$categoryDisplay.html',\n            '<div class=\"lp-transaction-category\" ng-click=\"onClick($event, transaction)\">' +\n                '<span class=\"category-marker\" ng-style=\"markerStyle\"></span>' +\n                '<div class=\"category-name\"><span class=\"h4\">{{category.name}}</span></div>' +\n            '</div>'\n        );\n\n        return {\n            restrict: 'A',\n            replace: true,\n            require: 'ngModel',\n            scope: {\n                isCategoryView: '=lpCategoryView',\n                categoryList: '=lpCategoryList',\n                transaction: '=ngModel',\n                categoryClick: '&',\n                categorySwipe: '&',\n                categoryStartSwipe: '&',\n                categoryEndSwipe: '&'\n            },\n            template: $templateCache.get('$categoryDisplay.html'),\n            link: function (scope, element, attrs) {\n\n                var transactionRow = element.parent().parent(),\n                    dragStartWidth = 0;\n\n                scope.markerStyle = {};\n                scope.category = null;\n\n                scope.onClick = function (event, transaction) {\n                    scope.categoryClick({\n                        $event: event,\n                        transaction: scope.transaction\n                    });\n                };\n\n                var gestures = {}, swipeHammer = transactionRow.data('touch');\n\n                var panright = function (event) {\n                    event.srcEvent.stopPropagation();\n                    event.preventDefault();\n                    element.parent().addClass('no-animation');\n                    var newWidth = dragStartWidth + Math.floor(event.deltaX);\n                    if (newWidth > 160) {\n                        newWidth = 160;\n                    }\n                    if (newWidth > dragStartWidth) {\n                        element.parent().css('width', newWidth + 'px');\n                    }\n                    scope.categorySwipe({\n                        $event: event,\n                        transaction: scope.transaction\n                    });\n                };\n\n                var panstart = function (event) {\n                    event.srcEvent.stopPropagation();\n                    event.preventDefault();\n                    dragStartWidth = parseInt(element.css('width'), 10);\n                    scope.categoryStartSwipe({\n                        $event: event,\n                        transaction: scope.transaction\n                    });\n                };\n\n                var panend = function (event) {\n                    event.srcEvent.stopPropagation();\n                    event.preventDefault();\n                    element.parent().removeClass('no-animation');\n                    var newWidth = dragStartWidth + Math.floor(event.deltaX);\n                    if (newWidth > 160) {\n                        newWidth = 160;\n                    }\n                    if (newWidth > 150) {\n                        scope.categoryClick({\n                            $event: null,\n                            transaction: scope.transaction\n                        });\n                    }\n                    element.parent().css('width', '');\n                    scope.categoryEndSwipe({\n                        event: event,\n                        transaction: scope.transaction\n                    });\n                };\n\n                if (!scope.isCategoryView && typeof Hammer !== 'undefined') {\n                    if (!swipeHammer) {\n                        swipeHammer = new Hammer( transactionRow[0]);\n                        transactionRow.data('touch', swipeHammer);\n                    }\n\n\n                    gestures.panright = swipeHammer.on('panright', panright);\n\n                    gestures.panstart = swipeHammer.on('panstart', panstart);\n\n                    gestures.panend = swipeHammer.on('panend', panend);\n                }\n\n                scope.$on('$destroy', function() {\n                    Object.keys(gestures).forEach(function(eventType) {\n                        var ev = gestures[eventType];\n                        ev.off(eventType, ev.handlers[eventType][0]);\n                    });\n                });\n\n                scope.$watch('transaction.categoryId', function(value) {\n                    scope.setCategory(value);\n                });\n\n                scope.setCategory = function (id) {\n                    if (scope.categoryList) {\n                        for (var i = 0; i < scope.categoryList.length; i++) {\n                            if (scope.categoryList[i].id === id) {\n                                scope.category = scope.categoryList[i];\n                            }\n                        }\n                    }\n\n                    if (scope.category && id) {\n                        scope.markerStyle.backgroundColor = scope.category.color;\n                    } else {\n                        // temporary fix to set 'Uncategorised' if transaction category id isn't valid\n                        scope.transaction.categoryId = '00cc9919-ba0c-4702-917b-1fba4c256b4d';\n                    }\n                };\n\n                lpCoreBus.subscribe('launchpad-retail.categoryDelete', function(data) {\n                    if (data.id === scope.transaction.categoryId) {\n                        scope.setCategory();\n                    }\n                });\n            }\n        };\n    };\n\n    // @ngInject\n    exports.lpCategoryItem = function() {\n        return {\n            restrict: 'A',\n            replace: true,\n            template:\n                '<div class=\"category-item btn btn-block btn-default\" tabIndex=\"{{category.id !== transaction.categoryId ? 0 : -1}}\" ng-style=\"{\\'background-color\\': category.id === newCategoryId ? category.color : \\'#ffffff\\'}\" ng-click=\"markNewCategory(category.id)\" ng-keydown=\"categoryKeyDown($event, category)\">' +\n                    '<div class=\"marker\" ng-style=\"{\\'background-color\\':category.color}\"></div>' +\n                    '<span class=\"name\" ng-class=\"{ light: (category.id === newCategoryId && getTextColor(category.color)) }\">{{category.name}}</span>' +\n                    '<button type=\"button\" class=\"close\" aria-hidden=\"true\" ng-click=\"deleteCategory($event, category)\" ng-if=\"category.type ===\\'NORMAL\\'\">&times;</button>' +\n                '</div>'\n        };\n    };\n\n    // @ngInject\n    exports.lpCategorySelect = function($templateCache, $timeout, lpCoreBus, lpCoreUtils) {\n        $templateCache.put('$categorySelect.html',\n            '<div class=\"lp-category-select clearfix\">' +\n                '<div class=\"clearfix\">' +\n                    '<label class=\"control-label pull-left\" lp-i18n=\"Current Category:\"></label>' +\n                    '<div ng-repeat=\"category in transactionCategories | orderBy:\\'-priority\\' | selectedCategory:this\" class=\"col-xs-6 col-sm-4 col-md-4\">' +\n                        '<div lp-category-item=\"lp-category-item\"></div>' +\n                    '</div>' +\n                '</div>' +\n                '<label class=\"control-label pull-left\" lp-i18n=\"Change category to:\"></label>' +\n                '<form class=\"form category-search clearfix\" role=\"form\" ng-submit=\"createCategory()\">' +\n                    '<input type=\"text\" ng-model=\"categoryFilter\" class=\"form-control\" placeholder=\"{{\\'Search categories / Create category\\'|translate}}\" maxlength=\"40\" ng-disabled=\"showColorPicker\" />' +\n                '</form>' +\n                '<div class=\"category-list col-xs-12 col-sm-12 col-md-9\">' +\n                    '<div class=\"new-category col-xs-12 col-sm-12 col-md-12\" ng-if=\"!categoryExists() && !showColorPicker && categoryFilter.length > 0\">' +\n                        '<label class=\"control-label pull-left\" lp-i18n=\"Create new category:\"></label>' +\n                        '<div ng-repeat=\"category in newCategory\" class=\"col-xs-6 col-sm-6 col-md-6\">' +\n                            '<div lp-category-item=\"lp-category-item\"></div>' +\n                        '</div>' +\n                    '</div>' +\n                    '<ul class=\"category-list col-xs-12 col-sm-12 col-md-12\">' +\n                        '<li ng-repeat=\"category in transactionCategories | orderBy:\\'-priority\\' | categoryList:this\" class=\"col-xs-6 col-sm-4 col-md-4\" ng-show=\"!showColorPicker\">' +\n                            '<div lp-category-item=\"lp-category-item\"></div>' +\n                        '</li>' +\n                        '<div id=\"{{\\'transaction-\\' + transaction.id + \\'-category-step-2\\'}}\" class=\"clearfix\" ng-if=\"showColorPicker\">' +\n                            '<label class=\"clearfix\" lp-i18n=\"Choose a color for the new category:\"></label>' +\n                            '<div lp-color-picker=\"lp-color-picker\" select-color=\"selectColor\"></div>' +\n                        '</div>' +\n                    '</ul>' +\n                '</div>' +\n                '<div id=\"{{\\'transaction-\\' + transaction.id + \\'-category-step-3\\'}}\" class=\"col-xs-12 col-sm-12 col-md-3 category-apply\" ng-if=\"(smallLayout && newCategoryId.length) || !smallLayout\">' +\n                    '<div class=\"row\" ng-if=\"smallLayout\">' +\n                        '<div class=\"col-xs-12 col-sm-12 clearfix\">' +\n                            '<label class=\"control-label pull-left\" lp-i18n=\"You\\'ve selected:\"></label>' +\n                            '<div ng-repeat=\"category in transactionCategories | orderBy:\\'-priority\\' | markedCategory:this\" class=\"col-xs-7 col-sm-6 col-md-4\">' +\n                                '<div lp-category-item=\"lp-category-item\"></div>' +\n                            '</div>' +\n                        '</div>' +\n                        '<div class=\"col-xs-12 col-sm-12 clearfix\">' +\n                            '<p lp-i18n=\"Would you like to change the category for only this transaction or all similar transactions?\"></p>' +\n                        '</div>' +\n                    '</div>' +\n                    '<div class=\"row\">' +\n                        '<div class=\"col-sm-12 col-md-12\" ng-if=\"!smallLayout\">' +\n                            '<p lp-i18n=\"Apply category change to?\"></p>' +\n                        '</div>' +\n                        '<div class=\"col-xs-6 col-sm-6 col-md-12\">' +\n                            '<button type=\"button\" class=\"btn btn-default btn-block\" ng-click=\"changeCategory(newCategoryId)\" ng-disabled=\"!newCategoryId.length\" lp-i18n=\"Only This\"></button>' +\n                        '</div>' +\n                        '<div class=\"col-xs-6 col-sm-6 col-md-12\">' +\n                            '<button type=\"button\" class=\"btn btn-default btn-block\" ng-click=\"changeCategory(newCategoryId, true)\" ng-disabled=\"!newCategoryId.length\" lp-i18n=\"All Similar\"></button>' +\n                        '</div>' +\n                    '</div>' +\n                '</div>' +\n            '</div>'\n        );\n\n        return {\n            restrict: 'A',\n            replace: false,\n            require: 'ngModel',\n            scope: {\n                model: '=ngModel',\n                transaction: '=',\n                update: '=',\n                smallLayout: '=',\n                offsetTopCorrection: '='\n            },\n            template: $templateCache.get('$categorySelect.html'),\n            link: function (scope, element, attrs) {\n\n                scope.showColorPicker = false;\n                scope.searchResultNumber = scope.model.categories.length;\n\n                var cloneCategoryList = function() {\n                    scope.transactionCategories = [];\n                    for (var i = 0; i < scope.model.categories.length; i++) {\n                        scope.transactionCategories.push(lpCoreUtils.cloneDeep(scope.model.categories[i]));\n                    }\n                };\n                cloneCategoryList();\n\n                var goToCategoryStep = function(stepNumber) {\n                    if (scope.smallLayout) {\n                        $timeout(function() {\n                            $('body').animate({\n                                scrollTop: $('#transaction-' + scope.transaction.id + (stepNumber > 1 ? '-category-step-' + stepNumber : '')).offset().top - 5 - (scope.offsetTopCorrection || 0)\n                            }, 500);\n                        }, 0);\n                    }\n                };\n\n                var focusChangeButton = function() {\n                    $timeout(function() {\n                        $(element).find('button[ng-click^=\"changeCategory\"]')[0].focus();\n                    }, 0);\n                };\n\n                scope.$watch('categoryFilter', function(value) {\n                    scope.newCategory = [{\n                        id: null,\n                        name: value,\n                        color: '#cccccc'\n                    }];\n                });\n\n                scope.categoryExists = function() {\n                    var result = false;\n\n                    if (scope.categoryFilter && scope.categoryFilter.length > 0) {\n                        for (var i = 0; i < scope.model.categories.length; i++) {\n                            if (scope.categoryFilter.toLowerCase() === scope.model.categories[i].name.toLowerCase()) {\n                                result = true;\n                            }\n                        }\n                    }\n\n                    return result;\n                };\n\n                scope.getTextColor = function(hexColor) {\n                    var result = true,\n                        r = hexColor.substr(1, 2),\n                        g = hexColor.substr(3, 2),\n                        b = hexColor.substr(5, 2);\n\n                    if (hexColor.length === 4) {\n                        r = hexColor.substr(1, 1) + hexColor.substr(1, 1);\n                        g = hexColor.substr(2, 1) + hexColor.substr(2, 1);\n                        b = hexColor.substr(3, 1) + hexColor.substr(3, 1);\n                    }\n\n                    r = parseInt(r, 16);\n                    g = parseInt(g, 16);\n                    b = parseInt(b, 16);\n\n                    if (rgb2hsl(r, g, b).l > 45) {\n                        result = false;\n                    }\n\n                    return result;\n                };\n\n                scope.newCategoryId = '';\n                scope.markNewCategory = function(categoryId) {\n                    if (categoryId === null) {\n                        scope.createCategory();\n                        return;\n                    }\n                    if (scope.transaction.categoryId === categoryId) {\n                        return;\n                    }\n                    if (scope.newCategoryId === categoryId) {\n                        scope.newCategoryId = '';\n                        return;\n                    }\n                    scope.newCategoryId = categoryId;\n\n                    goToCategoryStep(3);\n                    focusChangeButton();\n                };\n\n                scope.categoryKeyDown = function(event, category) {\n                    if (event.which === 13 || event.which === 32) {\n                        event.preventDefault();\n                        event.stopPropagation();\n\n                        if (event.target.tagName.toLowerCase() === 'button') {\n                            scope.deleteCategory(event, category);\n                            return;\n                        }\n                        scope.markNewCategory(category.id);\n                    }\n                };\n\n                scope.createCategory = function() {\n                    var notInList = !scope.categoryExists() && scope.categoryFilter.length > 0;\n\n                    if (notInList) {\n                        scope.showColorPicker = true;\n\n                        goToCategoryStep(2);\n                    } else {\n                        if (scope.searchResultNumber) {\n                            $timeout(function() {\n                                $('.category-list .category-item')[0].focus();\n                            }, 0);\n                        }\n                    }\n                };\n\n                scope.selectColor = function(color) {\n                    scope.model.create({\n                        name: scope.categoryFilter,\n                        color: color\n                    }).then(function(response) {\n                        scope.categoryFilter = '';\n                        scope.showColorPicker = false;\n                        cloneCategoryList();\n                        scope.markNewCategory(response.id);\n                        lpCoreBus.publish('launchpad-retail.categoryListUpdate', null, true);\n\n                        goToCategoryStep(3);\n                        focusChangeButton();\n                    }, function(response) {\n                        lpCoreBus.publish('launchpad.add-notification', {\n                            notification: {\n                                id: 'category-create-duplicate',\n                                level: 'SEVERE',\n                                message: response.data.error,\n                                closable: true\n                            }\n                        }, true);\n\n                        scope.categoryFilter = '';\n                        scope.showColorPicker = false;\n                    });\n                };\n\n                scope.deleteCategory = function(event, category) {\n                    event.stopPropagation();\n\n                    if (category.type === 'NORMAL') {\n                        scope.model.removeById(category.id)\n                        .then(function() {\n                            if (scope.newCategoryId === category.id) {\n                                scope.newCategoryId = '';\n                            }\n                            cloneCategoryList();\n                            lpCoreBus.publish('launchpad-retail.categoryDelete', {id: category.id}, true);\n                            lpCoreBus.publish('launchpad-retail.categoryListUpdate', null, true);\n                        });\n                    }\n                };\n\n                scope.changeCategory = function(id, similar) {\n                    scope.newCategoryId = '';\n                    scope.categoryFilter = '';\n                    scope.update(scope.transaction, id, similar);\n\n                    $timeout(function() {\n                        scope.transaction.showDetails = false;\n                    }, 100);\n\n                    goToCategoryStep(1);\n                    $('#transaction-' + scope.transaction.id)[0].focus();\n                };\n\n                lpCoreBus.subscribe('launchpad-retail.categoryListUpdate', function() {\n                    cloneCategoryList();\n                });\n            }\n        };\n    };\n});\n\n\n\n/** WEBPACK FOOTER **\n ** ./scripts/components/transactions-categories/scripts/directives.js\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_14__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"hammerjs\"\n ** module id = 14\n ** module chunks = 0\n **/","define(function (require, exports, module) {\n    'use strict';\n\n    // @ngInject\n    exports.categoryList = function() {\n        return function(input, scope) {\n            var result = input;\n\n            if (!scope.initialSelected) {\n                scope.initialSelected = scope.transaction.categoryId;\n            }\n\n            // Remove \"Pending\" from the selectable list of categories\n            for (var i = 0; i < result.length; i++) {\n                if (result[i].type === 'TEMPORARY') {\n                    result.splice(i, 1);\n                    i--;\n                    continue;\n                }\n                // add/reset priority property\n                result[i].priority = 1;\n                if (result[i].type === 'CONTROL') {\n                    result[i].priority = 0;\n                }\n                if (result[i].id === scope.initialSelected) {\n                    result[i].priority = 2;\n                }\n            }\n\n            for (i = 0; i < result.length; i++) {\n                // Filter out the categories that don't contain the string in the input\n                if (scope.categoryFilter && scope.categoryFilter.length && result[i].name.toLowerCase().indexOf(scope.categoryFilter.toLowerCase()) === -1) {\n                    result.splice(i, 1);\n                    i--;\n                    continue;\n                }\n                // Move the selected category to the first position\n                if (result[i].id === scope.transaction.categoryId) {\n                    result.splice(i, 1);\n                    i--;\n                }\n            }\n\n            scope.searchResultNumber = result.length;\n            return result;\n        };\n    };\n\n    // @ngInject\n    exports.selectedCategory = function() {\n        return function(input, scope) {\n            var result = input;\n\n            for (var i = 0; i < result.length; i++) {\n                if (result[i].id !== scope.transaction.categoryId) {\n                    result.splice(i, 1);\n                    i--;\n                }\n            }\n\n            return result;\n        };\n    };\n\n    // @ngInject\n    exports.markedCategory = function() {\n        return function(input, scope) {\n            var result = input;\n\n            for (var i = 0; i < result.length; i++) {\n                if (result[i].id !== scope.newCategoryId) {\n                    result.splice(i, 1);\n                    i--;\n                }\n            }\n\n            return result;\n        };\n    };\n});\n\n\n\n/** WEBPACK FOOTER **\n ** ./scripts/components/transactions-categories/scripts/filters.js\n **/","/**\n *  ----------------------------------------------------------------\n *  Copyright © Backbase B.V.\n *  ----------------------------------------------------------------\n *  Author : Backbase R&D - Amsterdam - New York\n *  Filename : main.js\n *  Description:\n *  Transactions P2P Transactions Component main file\n *  ----------------------------------------------------------------\n */\n\ndefine(function (require, exports, module) {\n\n    'use strict';\n\n    module.name = 'component.transactions-p2p';\n\n    var base = require('base');\n    var core = require('core');\n\n    var deps = [\n        core.name\n    ];\n\n    module.exports = base.createModule(module.name, deps)\n        .provider( require('./providers') );\n});\n\n\n\n/** WEBPACK FOOTER **\n ** ./scripts/components/transactions-p2p/scripts/main.js\n **/"," /**\n *  ----------------------------------------------------------------\n *  Copyright © Backbase B.V.\n *  ----------------------------------------------------------------\n *  Author : Backbase R&D - Amsterdam - New York\n *  Filename : providers.js\n *  Description: Retrieves a list of p2p transactions from the server and maintains their state\n *  ----------------------------------------------------------------\n */\ndefine(function (require, exports, module) {\n    'use strict';\n\n    // @ngInject\n    exports.lpP2PTransactions = function(lpCoreUtils) {\n\n        // @ngInject\n        this.$get = function($http, $q) {\n            var config = {\n                transactionsEndpoint: '/mock/v1/p2p-payments',\n                pageSize: 20,\n                from: 1\n            };\n\n            function API() {\n                /**\n                 * P2P Transactions service constructor\n                 * @param config\n                 * @constructor\n                 */\n                var TransactionsP2PModel = function() {\n                    this.transactions = [];\n                    this.from = config.from;\n                    this.moreAvailable = true;\n                    this.accountsArray = [];\n                    this.errorCode = null;\n                };\n\n                /**\n                 * Clears list of transactions and resets pageOffset counter\n                 */\n                TransactionsP2PModel.prototype.clearTransactionsList = function() {\n                    this.transactions = [];\n                    this.moreAvailable = true;\n                    this.from = config.from;\n                };\n\n                /**\n                 * Loads a new set of transactions for the given list of accounts\n                 * @param accounts\n                 */\n                TransactionsP2PModel.prototype.loadTransactions = function(accounts) {\n                    this.clearTransactionsList();\n                    this.accountsArray = accounts;\n\n                    return this.loadMoreTransactions();\n                };\n\n                /**\n                 * Loads a new set of transactions for the given list of accounts\n                 * @param accounts\n                 */\n                TransactionsP2PModel.prototype.loadTransactions = function(accounts) {\n                    this.clearTransactionsList();\n                    this.accountsArray = accounts;\n\n                    return this.loadMoreTransactions();\n                };\n\n                /**\n                 * Load transactions\n                 * @param account (pass account only for first load)\n                 */\n                TransactionsP2PModel.prototype.loadMoreTransactions = function() {\n                    var self = this;\n                    var deferred = $q.defer();\n\n                    this.loading = true;\n\n                    var queryParams = {\n                        accountIds: this.accountsArray.join(','),\n                        offset: this.from,\n                        limit: config.pageSize\n                    };\n\n                    $http.get(config.transactionsEndpoint, {\n                        params: queryParams\n                    })\n                    .success(function(data) {\n                        // success callback\n                        self.from += config.pageSize;\n\n                        var newTransactions = self.preprocessTransactions(data);\n                        if (newTransactions && newTransactions.length < config.pageSize) {\n                            self.moreAvailable = false;\n                        }\n\n                        self.transactions = self.transactions.concat(newTransactions);\n                        deferred.resolve(self.transactions);\n                    })\n                    .error(function(data) {\n                        // error callback\n                        self.errorCode = data.errorCode || 500;\n                    })\n                    ['finally'](function() {\n                        self.loading = false;\n                    });\n\n                    return deferred.promise;\n                };\n\n                /**\n                 * Enriches data with presentation logic\n                 * @param transactions\n                 * @returns {*}\n                 */\n                TransactionsP2PModel.prototype.preprocessTransactions = function(transactions) {\n                    var result = [];\n\n                    if (transactions && transactions.length > 0) {\n                        result = lpCoreUtils.map(transactions, function(currentValue, index) {\n                            var currDate = new Date(currentValue.initiationDateTime);\n\n                            // handle date show/hide\n                            currentValue.showDate = true;\n                            if (index > 0) {\n                                var prevDate = new Date(transactions[index - 1].initiationDateTime);\n                                currentValue.showDate = prevDate.getDate() !== currDate.getDate() ||\n                                    prevDate.getMonth() !== currDate.getMonth() ||\n                                    prevDate.getFullYear() !== currDate.getFullYear();\n                            }\n\n                            // add accept and reject buttons on transactions\n                            currentValue.requiresUserAction = false;\n                            if (currentValue.creditDebitIndicator === 'CREDIT' && currentValue.status === 'PENDING') {\n                                currentValue.requiresUserAction = true;\n                            }\n\n                            return currentValue;\n                        });\n                    }\n\n                    return result;\n                };\n\n                /**\n                 * Checks for errors while loading transactions\n                 * @returns {boolean}\n                 */\n                TransactionsP2PModel.prototype.allowMoreResults = function() {\n                    return (!this.loading && this.moreAvailable) && !this.errorCode;\n                };\n\n                /**\n                 * Checks for errors during download and ensures that no transactions have been loaded\n                 * @returns {boolean}\n                 */\n                TransactionsP2PModel.prototype.noTransactionsFound = function() {\n                    return (!this.loading && this.transactions.length === 0) && !this.errorCode;\n                };\n\n                return new TransactionsP2PModel();\n            }\n\n            return {\n                setConfig: function(options) {\n                    config = lpCoreUtils(options).chain()\n                        .mapValues(lpCoreUtils.resolvePortalPlaceholders)\n                        .defaults(config)\n                        .value();\n                    return this;\n                },\n\n                getConfig: function(prop) {\n                    if (prop && lpCoreUtils.isString(prop)) {\n                        return config[prop];\n                    } else {\n                        return config;\n                    }\n                },\n\n                api: API\n            };\n        };\n    };\n});\n\n\n\n/** WEBPACK FOOTER **\n ** ./scripts/components/transactions-p2p/scripts/providers.js\n **/","/**\n *  ----------------------------------------------------------------\n *  Copyright © Backbase B.V.\n *  ----------------------------------------------------------------\n *  Author : Backbase R&D - Amsterdam - New York\n *  Filename : main.js\n *  Description:\n *  Transactions Currency Component main file\n *  ----------------------------------------------------------------\n */\n\ndefine(function (require, exports, module) {\n\n    'use strict';\n\n    module.name = 'component.transactions-currency';\n\n    var base = require('base');\n    var core = require('core');\n\n    var deps = [\n        core.name\n    ];\n\n    module.exports = base.createModule(module.name, deps)\n        .provider( require('./providers') );\n});\n\n\n\n/** WEBPACK FOOTER **\n ** ./scripts/components/transactions-currency/scripts/main.js\n **/","define(function (require, exports, module) {\n    'use strict';\n\n    // @ngInject\n    exports.lpTransactionsCurrency = function(lpCoreUtils) {\n\n        // @ngInject\n        this.$get = function($http, $q) {\n            var config = {\n                defaultCurrencyEndpoint: '/mock/v1/currency-rates/default',\n                currencyListEndpoint: '/mock/v1/currency-rates',\n                disableExtraCurrencies: false\n            };\n\n            function API() {\n                /**\n                 * Constructor for the API\n                 * @constructor\n                 */\n                var TransactionsCurrencyModel = function() {\n                    this.groups = {\n                        defaultCurrency: 'aDefault',\n                        preferredCurrencies: 'bPreferred',\n                        rest: 'cOther'\n                    };\n\n                    this.orderedCurrencies = [];\n                };\n\n                /**\n                 * Loads the default currency from the service\n                 */\n                TransactionsCurrencyModel.prototype.loadDefaultCurrency = function() {\n                    var self = this;\n                    var deferred = $q.defer();\n\n                    $http.get(config.defaultCurrencyEndpoint)\n                    .success(function(data) {\n                        deferred.resolve(data);\n                    })\n                    .error(function() {\n                        self.error = 'currencyServiceError';\n                    });\n\n                    return deferred.promise;\n                };\n\n                /**\n                 * Configures the currency models default currency based on data from the service\n                 * @param defaultCurrencyData data object\n                 */\n                TransactionsCurrencyModel.prototype.configureDefaultCurrency = function(defaultCurrencyData) {\n                    var dc = {\n                        currency_code: defaultCurrencyData.currency_code, //eslint-disable-line camelcase\n                        exchange_rate: 1.0, //eslint-disable-line camelcase\n                        group: this.groups.defaultCurrency\n                    };\n\n                    this.defaultCurrency = dc;\n                    this.selected = this.defaultCurrency;\n\n                    //add the default currency to the top of the list\n                    this.orderedCurrencies.push(this.defaultCurrency);\n                };\n\n                /**\n                 * Loads the rest of the list of currencies\n                 */\n                TransactionsCurrencyModel.prototype.loadOtherCurrencies = function() {\n                    var self = this;\n                    var deferred = $q.defer();\n\n                    $http.get(config.currencyListEndpoint, {\n                        params: {\n                            currency: this.defaultCurrency.currency_code\n                        }\n                    })\n                    .success(function(data) {\n                        if(data) {\n                            self.sortCurrencies(data);\n                        }\n                        deferred.resolve(data);\n                    })\n                    .error(function() {\n                        self.error = 'currencyServiceError';\n                    });\n\n                    return deferred.promise;\n                };\n\n                /**\n                 * Formats and sorts the list of currencies from the service\n                 * @param currencyData\n                 */\n                TransactionsCurrencyModel.prototype.sortCurrencies = function(currencyData) {\n                    //add the preferred currencies to the top of the list under default\n                    for (var i = 0; i < currencyData.preferred.length; i++) {\n                        currencyData.preferred[i].group = this.groups.preferredCurrencies;\n                    }\n\n                    this.orderedCurrencies.push.apply(this.orderedCurrencies, currencyData.preferred);\n\n                    if (!config.disableExtraCurrencies) {\n                        for (var j = 0; j < currencyData.rest.length; j++) {\n                            currencyData.rest[j].group = this.groups.rest;\n                        }\n\n                        currencyData.rest.sort(function(a, b) {\n                            //sort rest of currencies alphabetically\n                            var currencyA = a.currency_code.toLowerCase(), currencyB = b.currency_code.toLowerCase();\n\n                            if(currencyA < currencyB) {\n                                return -1;\n                            } else if(currencyA > currencyB) {\n                                return 1;\n                            } else {\n                                return 0;\n                            }\n\n                        });\n\n                        //once the list has been sorted, and if it should be added, add the rest of the currencies to the list\n                        this.orderedCurrencies.push.apply(this.orderedCurrencies, currencyData.rest);\n                    }\n                };\n\n                /**\n                 * Finds a currency by Currency name\n                 * @param currencyCode\n                 */\n                TransactionsCurrencyModel.prototype.findCurrency = function(currencyCode) {\n                    return lpCoreUtils.find(this.orderedCurrencies, function(currency) {\n                        return currency.currency_code === currencyCode;\n                    });\n                };\n\n                /**\n                 * Selected a currency by Currency Name\n                 * @param currencyCode the ISO code for the currency to select\n                 */\n                TransactionsCurrencyModel.prototype.selectCurrency = function(currencyCode) {\n                    this.selected = this.findCurrency(currencyCode);\n                };\n\n                return new TransactionsCurrencyModel();\n            }\n\n            return {\n                setConfig: function(options) {\n                    config = lpCoreUtils(options).chain()\n                        .mapValues(lpCoreUtils.resolvePortalPlaceholders)\n                        .defaults(config)\n                        .value();\n                    return this;\n                },\n\n                getConfig: function(prop) {\n                    if (prop && lpCoreUtils.isString(prop)) {\n                        return config[prop];\n                    } else {\n                        return config;\n                    }\n                },\n\n                api: API\n            };\n        };\n    };\n\n});\n\n\n\n/** WEBPACK FOOTER **\n ** ./scripts/components/transactions-currency/scripts/providers.js\n **/","/**\n * Widget Transactions List Component\n * @module widget-transactions\n */\ndefine(function (require, exports, module) {\n\n    'use strict';\n\n    module.name = 'component.transactions-list';\n\n    var base = require('base');\n    var ui = require('ui');\n    var tags = require('module-tags');\n\n    var deps = [\n        ui.name,\n        tags.name\n    ];\n\n    module.exports = base.createModule(module.name, deps)\n        .directive(require('./details'))\n        .directive(require('./directives'));\n});\n\n\n\n/** WEBPACK FOOTER **\n ** ./scripts/components/transactions-list/scripts/main.js\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_21__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"ui\"\n ** module id = 21\n ** module chunks = 0\n **/","/**\n *  ----------------------------------------------------------------\n *  Copyright © Backbase B.V.\n *  ----------------------------------------------------------------\n *  Author : Backbase R&D - Amsterdam - New York\n *  Filename : details.js\n *  Description:  Directives for each type of detail\n *  ----------------------------------------------------------------\n */\ndefine(function(require, exports) {\n\n    'use strict';\n\n    exports.lpTransactionDetailsAddress = function() {\n        var template = [\n            '<div class=\"transaction-detail-label\" lp-i18n=\"Address:\"></div>',\n            '<div>',\n                '<span ng-show=\"address.street\">{{address.street}}</span><br/>',\n                '<span ng-show=\"address.city\">{{address.city}}</span>',\n                '<span ng-show=\"address.state\">, {{address.state}}</span><br/>',\n                '<span ng-show=\"address.country\">{{address.country}}</span><br/>',\n                '<span ng-show=\"address.zip\">{{address.zip}}</span>',\n            '</div>'\n        ].join('');\n\n        return {\n            restrict: 'AE',\n            scope: {\n                address: '=lpTransactionDetailsAddress'\n            },\n            template: template,\n            link: function(scope, element, attrs) {}\n        };\n    };\n\n    exports.lpTransactionDetailsDatetime = function() {\n        var template = [\n            '<div class=\"transaction-detail-label\" lp-i18n=\"{{detailLabel || \\'Time\\'}}:\"></div>',\n            '<div>{{datetime|date:\\'shortTime\\'}}<br/>{{datetime|date:\\'longDate\\'}}</div>'\n        ].join('');\n\n        return {\n            restrict: 'AE',\n            scope: {\n                detailLabel: '=',\n                datetime: '=lpTransactionDetailsDatetime'\n            },\n            template: template,\n            link: function(scope, element, attrs) {}\n        };\n    };\n\n    exports.lpTransactionDetailsMap = function() {\n        var template = [\n            '<img ng-src=\"{{location.mapUrl}}\" class=\"transaction-detail-map\" alt=\"{{\\'Location map\\' | translate}}\" />'\n        ].join('');\n\n        return {\n            restrict: 'AE',\n            scope: {\n                location: '=lpTransactionDetailsMap'\n            },\n            template: template,\n            link: function(scope, element, attrs) {}\n        };\n    };\n\n    exports.lpTransactionDetailsVertical = function() {\n        var template = [\n            '<div class=\"transaction-detail-vertical\">',\n                '<div class=\"transaction-detail-label\" lp-i18n=\"{{detailLabel}}:\"></div>',\n                '<span class=\"transaction-detail-value\">{{detailValue}}</span>',\n            '</div>'\n        ].join('');\n\n        return {\n            restrict: 'AE',\n            scope: {\n                detailLabel: '=',\n                detailValue: '='\n            },\n            template: template,\n            link: function(scope, element, attrs) {}\n        };\n    };\n\n    exports.lpTransactionDetailsHorizontal = function() {\n        var template = [\n            '<div class=\"transaction-detail-vertical\">',\n                '<span class=\"transaction-detail-label\" lp-i18n=\"{{detailLabel}}:\"></span> ',\n                '<span class=\"transaction-detail-value\">{{detailValue}}</span>',\n            '</div>'\n        ].join('');\n\n        return {\n            restrict: 'AE',\n            scope: {\n                detailLabel: '=',\n                detailValue: '='\n            },\n            template: template,\n            link: function(scope, element, attrs) {}\n        };\n    };\n});\n\n\n\n/** WEBPACK FOOTER **\n ** ./scripts/components/transactions-list/scripts/details.js\n **/","/**\n *  ----------------------------------------------------------------\n *  Copyright © Backbase B.V.\n *  ----------------------------------------------------------------\n *  Author : Backbase R&D - Amsterdam - New York\n *  Filename : directives.js\n *  Description:  Transaction list directive\n *  ----------------------------------------------------------------\n */\ndefine(function (require, exports) {\n\n    'use strict';\n\n    var $ = window.jQuery;\n    var angular = require('base').ng;\n    var moment = require('moment');\n\n    /**\n     * Check if the current browser is ES3 compliant only\n     *\n     * @returns {boolean}\n     */\n    function isES3Browser() {\n        var es3Browser = false;\n        try {\n            Object.defineProperty({}, 'x', {});\n        } catch (e) { /* this is ES3 Browser */\n            es3Browser = true;\n        }\n        return es3Browser;\n    }\n\n    // @ngInject\n    exports.lpTransactionsList = function ($timeout, $compile, $templateCache, lpCoreBus, lpCoreUtils, lpCoreTemplate, lpTransactions) {\n        var customTemplateSrc = lpTransactions.getConfig('customTemplateSrc'),\n            groupTransactionsByDate = lpTransactions.getConfig('groupTransactionsByDate'),\n            customTemplateCache = customTemplateSrc && $templateCache.get(customTemplateSrc),\n            customTemplatePath = customTemplateSrc && lpCoreTemplate.resolvePath(customTemplateSrc),\n            enableVerticalScrollbar = function (element) {\n                $timeout(function () {\n                    // Handle fixed height with scrollbar\n                    var rawElement = element.length ? element[0] : element;\n                    var currentHeight = rawElement.offsetHeight;\n\n                    if (currentHeight) {\n                        rawElement.style.height = currentHeight + 'px';\n                        rawElement.style.overflowY = 'auto';\n                    }\n                });\n            };\n\n        function findTransactionElem(transaction) {\n            return $('#transaction-' + transaction.id);\n        }\n\n        function findTransactionCategoryElem(transaction) {\n            return findTransactionElem(transaction).find('[data-role=\"transactions-list-item-category\"]');\n        }\n\n        function linkFn(scope, elem, attrs) {\n            /*----------------------------------------------------------------*/\n            /* Private methods & variables\n             /*----------------------------------------------------------------*/\n            var isOldBrowser = isES3Browser(),\n                ie8CategoryFull = 160,\n                ie8CategoryCollapsed = 9;\n\n            scope.groupTransactionsByDate = groupTransactionsByDate;\n            /*----------------------------------------------------------------*/\n            /* Watchers\n             /*----------------------------------------------------------------*/\n            scope.$watch('accounts.selected', function (account) {\n                if (account) {\n                    scope.transactions\n                        .loadTransactions(account)\n                        .then(function () {\n                            lpCoreBus.publish('widget-transactions:transactions:ready', scope.transactions.transactions);\n                            if (scope.showScrollbar) {\n                                enableVerticalScrollbar(elem.find('.transactions-list-wrapper'));\n                            }\n                        });\n                }\n            });\n\n            scope.isTodayOrYesterday = function (timestamp) {\n                var today = moment(new Date().getTime()).startOf('day'),\n                    yesterday = moment(today).subtract(1, 'days'),\n                    date = moment(parseInt(timestamp, 10)).startOf('day'),\n                    result = false;\n                if (today.isSame(date)) {\n                    scope.todayOrYesterday = 'Today';\n                    result = true;\n                } else if (yesterday.isSame(date)) {\n                    scope.todayOrYesterday = 'Yesterday';\n                    result = true;\n                }\n                return result;\n            };\n\n            scope.$on('$destroy', function () {\n                // clean up\n            });\n\n\n\n            /*----------------------------------------------------------------\n             /* Public methods & properties\n             /*----------------------------------------------------------------*/\n            scope.previewAll = false;\n\n            scope.transactionKeydown = function (evt, transaction) {\n                if (evt.which === 13 || evt.which === 32) {\n                    evt.preventDefault();\n                    evt.stopPropagation();\n                    scope.loadTransactionDetails(transaction);\n                    scope.openDetails(transaction);\n                }\n            };\n\n            scope.loadTransactionDetails = function (transaction) {\n                transaction.isLoading = true;\n                scope.transactions.loadTransactionDetails(transaction)\n                    .then(function (details) {\n                        if (transaction.categoryId) {\n                            scope.transactionsCategories.getById(transaction.categoryId).then(function (category) {\n                                details.category = category;\n                            });\n                        }\n                    })\n                    ['finally'](function () {\n                    transaction.isLoading = false;\n                });\n            };\n\n            scope.loadMoreTransactions = function () {\n                scope.transactionsLoading = true;\n                if (scope.transactions.loading) {\n                    return;\n                }\n                scope.transactions.loadMoreTransactions().then(function () {\n                    scope.transactionsLoading = false;\n                });\n            };\n\n            scope.updateTransactionCategory = function (transaction, categoryId, similar) {\n                var promise;\n                if (!similar) {\n                    promise = scope.transactions.updateTransactionCategory(transaction, categoryId);\n                } else {\n                    promise = scope.transactions.updateSimilarTransactionCategory(transaction, categoryId);\n                }\n\n                promise.success(function () {\n                });\n            };\n\n            scope.openDetails = function (transaction, selectedTab) {\n                var $transaction = elem.find('#transaction-details-' + transaction.id);\n\n                transaction.showDetails = !transaction.showDetails;\n\n                if (!$transaction.children().size()) {\n                    var $details = $(require('../templates/info'));\n                    $transaction.append($details);\n                    $compile($details)($transaction.scope());\n                }\n\n                var setDetailTabValues = function (tabs, selectedDetailTab) {\n                    for (var tab in tabs) {\n                        if (tabs.hasOwnProperty(selectedDetailTab)) {\n                            tabs[tab] = false;\n                            if (tab === selectedDetailTab) {\n                                tabs[tab] = true;\n                            }\n                        }\n                    }\n                };\n\n                if (selectedTab === null || selectedTab === undefined) {\n                    selectedTab = 'details';\n                }\n\n                if (transaction.showDetails) {\n                    $timeout(function () {\n                        setDetailTabValues(transaction.detailTabs, selectedTab);\n                    }, 0);\n                }\n                if (selectedTab === 'details') {\n                    scope.loadTransactionDetails(transaction);\n                }\n                scope.closePreview(transaction);\n\n                if (scope.categorySmallLayout && transaction.showDetails) {\n                    $('body').animate({\n                        scrollTop: $('#transaction-' + transaction.id).offset().top - 5 - (scope.offsetTopCorrection || 0)\n                    }, 500);\n                }\n\n                // fix for chrome redraw issue\n                var transactionTabs = document.getElementById('transactions-tabs');\n                if (!scope.showDetails && transactionTabs) {\n                    transactionTabs.style.display = 'none';\n                    transactionTabs.style.display = 'block';\n                }\n            };\n\n            scope.selectDetailsTab = function (transaction) {\n                scope.loadTransactionDetails(transaction);\n            };\n\n            scope.openPreview = function (transaction) {\n                transaction.preview = true;\n                if (!transaction.showDetails) {\n                    if (isOldBrowser) {\n                        // support IE8\n                        $('#transaction-' + transaction.id + ' .categories').width(ie8CategoryFull);\n                    } else {\n                        $('#transaction-' + transaction.id).addClass('preview');\n                    }\n                }\n            };\n\n            scope.closePreview = function (transaction) {\n                transaction.preview = false;\n\n                if (isOldBrowser) {\n                    // support IE8\n                    $('#transaction-' + transaction.id + ' .categories').width(ie8CategoryCollapsed);\n                } else {\n                    $('#transaction-' + transaction.id).removeClass('preview');\n                }\n\n                findTransactionElem(transaction)\n                    .removeClass('lp-transactions-list-item-head-noanim')\n                    .css('padding-left', '');\n\n                findTransactionCategoryElem(transaction).css('width', '');\n            };\n\n            scope.categoryClick = function (event, transaction) {\n                if (event !== null && event !== undefined) {\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n\n                scope.openDetails(transaction, 'categories');\n            };\n\n            scope.categorySwipeStart = function swipeStart(event, transaction) {\n                findTransactionElem(transaction).addClass('lp-transactions-list-item-head-noanim');\n            };\n\n            scope.categorySwipe = function swipe(event, transaction) {\n                var $category = findTransactionCategoryElem(transaction);\n                var width = Math.max(event.deltaX, 0);\n                var calculatedWidth;\n\n                $category.width(width);\n                calculatedWidth = $category.width();\n\n                findTransactionElem(transaction).css('padding-left', calculatedWidth);\n            };\n\n            scope.categorySwipeEnd = function swipeEnd(event, transaction) {\n                scope.closePreview(transaction);\n            };\n\n            // Service is returning Array[0] when empty\n            // so we have to check for that\n            var parseTransactionAttribute = function (attribute) {\n                if (lpCoreUtils.isString(attribute)) {\n                    return lpCoreUtils.trim(attribute);\n                } else if (lpCoreUtils.isArray(attribute) && !attribute.length) {\n                    return '';\n                }\n\n                return attribute || '';\n            };\n\n            scope.getTransactionDescription = function (transaction) {\n                var counterpartyName = parseTransactionAttribute(transaction.counterpartyName);\n                var description = parseTransactionAttribute(transaction.transactionDescription);\n                var type = parseTransactionAttribute(transaction.transactionType);\n\n                return counterpartyName || description || type;\n            };\n\n            scope.getTransactionSubDescription = function (transaction) {\n                var accountName = parseTransactionAttribute(transaction.accountName);\n                var counterpartyName = parseTransactionAttribute(transaction.counterpartyName);\n                var description = parseTransactionAttribute(transaction.transactionDescription);\n                var transactionType = parseTransactionAttribute(transaction.transactionType);\n\n                if (accountName) {\n                    return accountName;\n                } else if (counterpartyName || description) {\n                    return transactionType;\n                } else {\n                    return '';\n                }\n            };\n\n            scope.toggleCategoryView = function () {\n                lpCoreUtils.safeApply(scope, function() {\n                    scope.previewAll = !scope.previewAll;\n                });\n            };\n\n            lpCoreBus.subscribe('launchpad-retail.module-transactions.toggleCategoryView', scope.toggleCategoryView);\n\n        }\n\n        /**\n         * Compile function\n         * @param  {object} el    angular dom el object\n         * @param  {object} attrs el attributes\n         * @return {function}       link controller function\n         */\n        function compileFn(elem, attrs) {\n            return linkFn;\n        }\n\n        // Directive configuration\n        return {\n            scope: {\n                accounts: '=lpAccounts',\n                transactions: '=lpTransactions',\n                transactionsCategories: '=lpTransactionsCategories',\n                categoryLayout: '=',\n                showCategories: '=',\n                showTransactionIcons: '=',\n                showDatesAllTransactions: '=',\n                hideDetailsPreference: '=',\n                offsetTopCorrection: '=?',\n                showScrollbar: '='\n            },\n            restrict: 'AE',\n            compile: compileFn,\n            templateUrl: !customTemplateCache && customTemplatePath,\n            template: customTemplateCache || (!customTemplateSrc && require('../templates/list'))\n        };\n    };\n\n    // @ngInject\n    exports.lpTransactionsListDetails = function ($templateCache, $timeout, lpCoreUtils) {\n        function linkFn(scope, elem, attrs) {\n        }\n\n        function compileFn(elem, attrs) {\n            return linkFn;\n        }\n\n        return {\n            restrict: 'AE',\n            scope: {\n                transaction: '=',\n                categories: '=',\n                isLoading: '='\n            },\n            compile: compileFn,\n            template: require('../templates/details')\n        };\n    };\n\n    // @ngInject\n    exports.lpStickyTitle = function ($timeout, lpCoreBus) {\n        function linkFn(scope, element, attrs) {\n            var $sticky;\n            var onScrolling;\n            var outerHeight;\n\n            scope.isSpecialDate = function () {\n                return scope.isTodayOrYesterday({bookingDateTime: scope.transaction.bookingDateTime});\n            };\n\n            onScrolling = function () {\n                var stickies = document.querySelectorAll('.followMeBar');\n                for(var i = 0, len = stickies.length; i < len; i++) {\n                    var domSticky = stickies[i];\n                    var next = i + 1;\n                    var prev = i - 1;\n                    var $thisSticky = angular.element(domSticky);\n                    var scrollTop = window.scrollY;\n                    var stickyPosition = parseInt(domSticky.getAttribute('data-original-position'), 10);\n                    var originalHeight = parseInt(domSticky.getAttribute('data-original-height'), 10);\n\n                    var domNextSticky;\n                    var nextStickyPosition;\n\n                    domNextSticky = stickies[next];\n\n                    var domPrevSticky;\n                    var $prevSticky;\n\n                    domPrevSticky = stickies[prev];\n                    $prevSticky = angular.element(domPrevSticky);\n\n                    if (isNaN(stickyPosition)) {\n                        stickyPosition = $(domSticky).offset().top;\n                    }\n                    if (isNaN(originalHeight)) {\n                        originalHeight = $(domSticky).outerHeight();\n                    }\n\n                    if (stickyPosition <= scrollTop) {\n                        $thisSticky.addClass('fixed');\n                        if(domNextSticky) {\n                            nextStickyPosition = parseInt(domNextSticky.getAttribute('data-original-position'), 10) - originalHeight;\n\n                            if (stickyPosition >= nextStickyPosition) {\n\n                                $thisSticky.addClass('absolute').css('top', nextStickyPosition + 'px');\n                            }\n                        }\n                    } else {\n                        $thisSticky.removeClass('fixed');\n                        if(domPrevSticky) {\n\n                            if (scrollTop <= stickyPosition - originalHeight) {\n\n                                $prevSticky.removeClass('absolute').css('top', parseInt(domNextSticky.getAttribute('data-original-position'), 10) + 'px');\n                            }\n                        }\n                    }\n                }\n            };\n\n            $sticky = element.find('.followMeBar').wrap('<div class=\"followWrap\"/>');\n            var domSticky = $sticky[0];\n\n            $timeout(function () {\n                outerHeight = $(domSticky).outerHeight();\n\n                domSticky.setAttribute('data-original-position', $(domSticky).offset().top);\n                domSticky.setAttribute('data-original-height', outerHeight);\n                domSticky.parentNode.style.height = outerHeight + 'px';\n            }, 100);\n\n            angular.element(window).off('touchmove.stickies, touchend.stickies, scroll.stickies').on('touchmove.stickies, touchend.stickies, scroll.stickies', function () {\n                onScrolling();\n            });\n        }\n\n        function compileFn(elem, attrs) {\n            return linkFn;\n        }\n\n        return {\n            restrict: 'AE',\n            priority: 400,\n            scope: {\n                transaction: '=',\n                todayOrYesterday: '=',\n                isTodayOrYesterday: '&'\n            },\n            compile: compileFn,\n            template: function () {\n                return '' +\n                    '<div class=\"header followMeBar\">' +\n                    '<span ng-if=\"isSpecialDate()\">{{todayOrYesterday}}, </span>' +\n                    '<span itemprop=\"dateTimeMonth\">{{transaction.bookingDateTime | date:\\'MMM\\'}}</span> ' +\n                    '<span itemprop=\"dateTimeDate\">{{transaction.bookingDateTime | date:\\'dd\\'}}</span>' +\n                    '</div>';\n            }\n        };\n    };\n});\n\n\n\n/** WEBPACK FOOTER **\n ** ./scripts/components/transactions-list/scripts/directives.js\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_24__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"moment\"\n ** module id = 24\n ** module chunks = 0\n **/","define(function () {\n    'use strict';\n\n    var template = '' +\n        '<div class=\"col-xs-12 col-sm-12\">' +\n          '<div alert=\"alert\" class=\"alert alert-info\" ng-show=\"transaction.errorCode\">' +\n            '<span lp-i18n=\"{{transaction.errorCode}}\"></span>' +\n          '</div>' +\n          '<ul tabset=\"tabset\" class=\"transaction-details-navbar\" ng-if=\"showCategories && transaction.showDetails && !hideDetailsPreference\">' +\n            '<li tab=\"tab\" select=\"selectDetailsTab(transaction)\" active=\"transaction.detailTabs.details\">' +\n              '<span tab-heading=\"tab-heading\" lp-i18n=\"Details\"></span>' +\n              '<div lp-transactions-list-details=\"lp-transactions-list-details\" transaction=\"transaction\" categories=\"transactionsCategories\" is-loading=\"transaction.isLoading\"></div>' +\n            '</li>' +\n            '<li tab=\"tab\" active=\"transaction.detailTabs.categories\">' +\n            '  <span tab-heading=\"tab-heading\" lp-i18n=\"Categories\"></span>' +\n            '  <div lp-category-select=\"lp-category-select\" ng-model=\"transactionsCategories\" transaction=\"transaction\" update=\"updateTransactionCategory\" small-layout=\"categoryLayout === \\'small\\'\" offset-top-correction=\"offsetTopCorrection\" class=\"panel-body no-padding\"></div>' +\n            '</li>' +\n          '</ul>' +\n          '<div class=\"panel-body no-padding\" ng-if=\"showCategories && transaction.showDetails && hideDetailsPreference\">' +\n            '<div lp-category-select=\"lp-category-select\" ng-model=\"transactionsCategories\" transaction=\"transaction\" update=\"updateTransactionCategory\" small-layout=\"categoryLayout === \\'small\\'\" offset-top-correction=\"offsetTopCorrection\" class=\"panel-body no-padding\"></div>' +\n          '</div>' +\n          '<div lp-transactions-list-details=\"lp-transactions-list-details\" transaction=\"transaction\" categories=\"transactionsCategories\" is-loading=\"transaction.isLoading\" ng-if=\"!showCategories && transaction.showDetails && !hideDetailsPreference\"></div>' +\n        '</div>';\n\n    return template;\n});\n\n\n\n/** WEBPACK FOOTER **\n ** ./scripts/components/transactions-list/templates/info.js\n **/","define(function () {\n    'use strict';\n    //!!! showTransactionIcons\n\n    var template = '' +\n    '<div class=\"lp-transactions-list lp-transactions-list-{{categoryLayout}} lp-widget-body\" ng-class=\"{logohidden: hideLogo, \\'preview-all\\': previewAll, \\'lp-transactions-list-no-icons\\': !showTransactionIcons }\" progress-indicator=\"transactions.loading\">' +\n      '<div class=\"panel-message\" ng-if=\"transactions.noTransactionsFound()\" role=\"alert\">' +\n        '<p>' +\n          'There are no transactions to display ' +\n          '<span ng-show=\"!transactions.isSearching()\">for this account</span>' +\n          '<span ng-show=\"transactions.isSearching()\">for this search</span>.' +\n        '</p>' +\n      '</div>' +\n\n      '<div lp-freshness-message=\"lp-freshness-message\"></div>' +\n\n      '<div class=\"transactions-list-wrapper\" lp-infinite-scroll=\"loadMoreTransactions()\" lp-infinite-scroll-disabled=\"!showScrollbar || transactions.loading || !accounts.selected\" lp-infinite-scroll-end=\"!transactions.moreAvailable\">' +\n        '<div id=\"transactions-list\" role=\"presentation\" class=\"list-group list-view transactions-list lp-transactions-list-items\">' +\n          '<div class=\"lp-transactions-list-item list-group-item list-view-row expandable clearfix\" ng-class=\"{ open: transaction.showDetails }\" ng-repeat=\"transaction in transactions.transactions track by $index\">' +\n          '<div lp-sticky-title=\"lp-sticky-title\"' +\n          '     ng-if=\"transaction.newDate && groupTransactionsByDate\"' +\n          '     transaction=\"transaction\"' +\n          '     group-transactions-by-date=\"groupTransactionsByDate\"' +\n          '     today-or-yesterday=\"todayOrYesterday\"' +\n          '     is-today-or-yesterday=\"isTodayOrYesterday(bookingDateTime)\"></div>' +\n            '<div class=\"lp-transactions-list-item-head list-view-container cursor-pointer clearfix\" ng-click=\"openDetails(transaction)\" tabindex=\"0\" ng-keydown=\"transactionKeydown($event, transaction)\" ng-mouseleave=\"closePreview(transaction)\" role=\"button\" id=\"transaction-{{transaction.id}}\" aria-expanded=\"{{ !!transaction.showDetails }}\" aria-controls=\"transaction-details-{{transaction.id}}\">' +\n              // Transaction category\n              '<div class=\"lp-transactions-list-item-category categories\" ng-mouseover=\"categoryLayout == \\'small\\' || openPreview(transaction)\" ng-if=\"showCategories\">' +\n                '<div class=\"lp-transactions-list-category\" data-role=\"transactions-list-item-category\" lp-category-display=\"lp-category-display\" lp-category-view=\"previewAll\" lp-category-list=\"transactionsCategories.categories\" ng-model=\"transaction\" category-click=\"categoryClick($event, transaction)\" category-start-swipe=\"categorySwipeStart($event, transaction)\" category-swipe=\"categorySwipe($event, transaction)\" category-end-swipe=\"categorySwipeEnd($event, transaction)\"></div>' +\n              '</div>' +\n\n              // Content\n              '<div class=\"lp-transactions-list-item-content\" data-role=\"transactions-item-info\">' +\n                // Transaction date\n                '<div class=\"lp-transactions-list-item-date column\" ng-mouseover=\"categoryLayout == \\'small\\' || openPreview(transaction)\">' +\n                  '<div class=\"centered\">' +\n                    '<div class=\"lp-transactions-list-item-date-value\" aria-hidden=\"true\" ng-if=\"!groupTransactionsByDate && (transaction.newDate || showDatesAllTransactions)\">' +\n                      '<span itemprop=\"dateTimeMonth\">{{transaction.bookingDateTime | date:\\'MMM\\'}}</span>' +\n                      '<br />' +\n                      '<span itemprop=\"dateTimeDate\">{{transaction.bookingDateTime | date:\\'dd\\'}}</span>' +\n                    '</div>' +\n                  '</div>' +\n                '</div>' +\n\n                // Transaction icon\n                '<div class=\"lp-transactions-list-item-icon column\" ng-if=\"showTransactionIcons\">' +\n                  '<div class=\"centered\">' +\n                    '<div class=\"lp-transaction-icon gray-image-hover\">' +\n                      '<img ng-if=\"transaction.counterPartyLogoPath\" ng-src=\"{{transaction.counterPartyLogoPath}}\" width=\"35\" height=\"35\" alt=\"\"/>' +\n                    '</div>' +\n                  '</div>' +\n                '</div>' +\n\n                // Transaction summary\n                '<div class=\"lp-transactions-list-item-summary column\">' +\n                  '<div class=\"centered\">' +\n                    '<div class=\"lp-transactions-list-item-name counterparty-name\" itemProp=\"counterpartyName\">' +\n                      '<span class=\"sr-only\">Name</span>{{getTransactionDescription(transaction)}}' +\n                    '</div>' +\n                    '<div class=\"lp-transactions-list-item-type text-muted\" itemProp=\"transactionType\">' +\n                      '<span class=\"sr-only\">Transaction type</span>' +\n                      '{{getTransactionSubDescription(transaction)}}' +\n                    '</div>' +\n                    '<div class=\"lp-transactions-list-item-info text-muted\">' +\n                      '<span class=\"sr-only\" lp-i18n=\"Date\"></span>' +\n                      '{{transaction.bookingDateTime | date:\\'MMM\\'}} {{transaction.bookingDateTime | date:\\'dd\\'}} ' +\n                      '<span class=\"h6 text-muted transactions-list-item-amount\" itemProp=\"transactionAmount\" lp-amount=\"transaction.transactionAmount\" lp-amount-currency=\"transaction.transactionCurrency\"></span>' +\n                    '</div>' +\n                  '</div>' +\n                '</div>' +\n\n                // Transaction amount\n                '<div class=\"lp-transactions-list-item-amount column\">' +\n                  '<div class=\"centered\">' +\n                    '<span class=\"sr-only\">Amount</span>' +\n                    '<span class=\"lp-transactions-list-item-amount-value\" itemProp=\"transactionAmount\" lp-amount=\"transaction.transactionAmount\" lp-amount-currency=\"transaction.transactionCurrency\"></span>' +\n                  '</div>' +\n                '</div>' +\n              '</div>' +\n              '<div class=\"lp-transactions-list-item-toggle\"></div>' +\n            '</div>' +\n            '<div class=\"clearfix details lp-transactions-list-item-details transaction-details\" id=\"transaction-details-{{transaction.id}}\" aria-labelledby=\"transaction-details-data-{{transaction.id}}\"></div>' +\n          '</div>' +\n        '</div>' +\n        '<div ng-if=\"showScrollbar && transactions.loading\" role=\"alert\">' +\n          '<div class=\"text-center\" lp-i18n=\"Loading transactions...\"></div>' +\n        '</div>' +\n        '<div ng-if=\"!showScrollbar && transactions.transactions.length\">' +\n          '<div ng-show=\"transactions.allowMoreResults()\">' +\n            '<p class=\"lp-transactions-list-more text-center\">' +\n              '<a href=\"\" class=\"lp-transactions-list-more-button cursor-pointer\" tabindex=\"0\" ng-click=\"loadMoreTransactions()\" lp-i18n=\"Show more\"></a>' +\n            '</p>' +\n          '</div>' +\n        '</div>' +\n      '</div>' +\n    '</div>';\n\n    return template;\n});\n\n\n\n/** WEBPACK FOOTER **\n ** ./scripts/components/transactions-list/templates/list.js\n **/","define(function (require, exports, module) {\n    'use strict';\n\n    return [\n        '<div class=\"lp-transaction-details container-fluid\">',\n            '<div progress-indicator=\"progress-indicator\" is-loading=\"isLoading\">',\n                '<div ng-if=\"transaction.details.bookingDateTime && transaction.details.address\" class=\"row\">',\n                    '<div ng-if=\"transaction.details.bookingDateTime\" class=\"col-xs-6 col-md-3\" lp-transaction-details-datetime=\"transaction.details.bookingDateTime\"></div>',\n                    '<div ng-if=\"transaction.details.address\" class=\"col-xs-6 col-md-3\" lp-transaction-details-address=\"transaction.details.address\"></div>',\n                    '<div ng-if=\"transaction.details.location\" class=\"col-xs-6 col-md-3\" lp-transaction-details-map=\"transaction.details.location\"></div>',\n                    '<div ng-if=\"transaction.details.merchantType || transaction.details.category\" class=\"col-xs-6 col-md-3\">',\n                        '<div ng-show=\"transaction.details.merchantType\" lp-transaction-details-vertical detail-label=\"\\'Merchant\\'\" detail-value=\"transaction.details.merchantType\"></div>',\n                        '<div ng-show=\"!transaction.details.merchantType\" lp-transaction-details-vertical detail-label=\"\\'Category\\'\" detail-value=\"transaction.details.category.name\"></div>',\n                    '</div>',\n                '</div>',\n                '<div ng-if=\"!(transaction.details.bookingDateTime && transaction.details.address)\" class=\"row\">',\n                    '<div class=\"alert alert-warning col-xs-12\">',\n                        '<p><i class=\"lp-icon lp-icon-alert-warning\"></i> <span lp-i18n=\"Specific details regarding this transaction are currently unavailable, please contact us for further information.\"></span></p>',\n                    '</div>',\n                '</div>',\n                '<div ng-if=\"transaction.details.transactionId\" class=\"row transaction-detail-reference\">',\n                    '<div class=\"col-xs-12 col-md-12\" lp-transaction-details-horizontal detail-label=\"\\'Transaction Reference\\'\" detail-value=\"transaction.details.transactionId\"></div>',\n                '</div>',\n            '</div>',\n        '</div>'\n    ].join('');\n});\n\n\n\n/** WEBPACK FOOTER **\n ** ./scripts/components/transactions-list/templates/details.js\n **/","/**\n * Widget Transactions List Component\n * @module widget-transactions\n */\ndefine(function (require, exports, module) {\n\n    'use strict';\n\n    module.name = 'component.transactions-list-authorizations';\n\n    var base = require('base');\n\n    var deps = [];\n\n    module.exports = base.createModule(module.name, deps)\n        .provider( require('./providers') )\n        .directive( require('./directives') );\n});\n\n\n\n/** WEBPACK FOOTER **\n ** ./scripts/components/transactions-list-authorizations/scripts/main.js\n **/","/**\n *  ----------------------------------------------------------------\n *  Copyright © Backbase B.V.\n *  ----------------------------------------------------------------\n *  Author : Backbase R&D - Amsterdam - New York\n *  Filename : providers.js\n *  Description: Retrieves a list of card transactions under authorization\n *  ----------------------------------------------------------------\n */\ndefine(function (require, exports, module) {\n\n    'use strict';\n\n    // @ngInject\n    exports.lpTransactionsAuth = function() {\n\n        // @ngInject\n        this.$get = function($http, lpCoreUtils, lpCoreError, $q, lpTransactions) {\n\n            var config = {\n                pageSize: 20,\n                from: 1,\n                sort: '-bookingDateTime'\n            };\n            var utils = lpCoreUtils;\n\n            function API() {\n\n                var TransactionsAuthModel = function() {\n                    this.from = config.from;\n                    this.sort = config.sort;\n                    this.transactions = [];\n                    this.account = null;\n                    this.errorCode = null;\n                };\n\n                /**\n                 * Clears list of transactions and resets from counter\n                 */\n                TransactionsAuthModel.prototype.clearTransactionsAuthList = function() {\n                    this.transactions = [];\n                    this.moreAvailable = true;\n                    this.from = config.from;\n                    return this;\n                };\n\n                /**\n                 * Loads a new set of transactions for the given account\n                 * @param account\n                 */\n                TransactionsAuthModel.prototype.loadTransactionsAuth = function(account) {\n                    this.clearTransactionsAuthList();\n                    this.account = account;\n                    return this.loadMoreTransactionsAuth();\n                };\n\n                // TODO: add pre-processing (if needed)\n                TransactionsAuthModel.prototype.preprocessTransactions = function(list) {\n                    // validate collection\n                    if (utils.isArray(list)) {\n                        utils.forEach(list, function (item, index) {\n                            var t;\n\n                            // handle ID property\n                            if (!item.id) {\n                                list[index].id = utils.uniqueId();\n                            }\n\n                            // handle category ID property\n                            if (!item.categoryId) {\n                                list[index].categoryId = '1';\n                            }\n\n                            // handle Debit property\n                            if (!item.creditDebitIndicator || item.creditDebitIndicator === 'DBIT') {\n                                list[index].creditDebitIndicator = 'DBIT';\n                                item.amount *= -1;\n                            }\n\n                            // handle date property\n                            if (item.dateTime) {\n                                // To comply standard in a strict way --> FF can't parse yyyy-mm-dd,\n                                t = item.dateTime.replace(/-/g, '/');\n                                list[index].dateTime = Date.parse(t);\n                            }\n\n                        });\n                    }\n\n                    return list;\n                };\n\n                /**\n                 * Load transactions\n                 * @param account (pass account only for first load)\n                 */\n                TransactionsAuthModel.prototype.loadMoreTransactionsAuth = function() {\n\n                    var self = this;\n\n                    if(!this.account) {\n                        lpCoreError.throwException(new Error('Auth list: No account specified'));\n                    }\n                    var accountHoldsEndpoint = lpTransactions.getConfig('accountHoldsEndpoint');\n                    if(!accountHoldsEndpoint){\n                        // accountHolds endpoint is not specified\n                        return $q.when([]);\n                    }\n\n                    var queryParams = {\n                        f: this.from,\n                        l: config.pageSize\n                    };\n\n                    this.loading = true;\n\n                    //the minus here means descending order\n                    queryParams.sort = this.sort;\n\n                    //update paging info\n                    this.from = this.from + config.pageSize;\n\n                    return $http.get(accountHoldsEndpoint, {\n                        data: {\n                            accountIds: this.account.ids || this.account.id || ''\n                        },\n                        params: queryParams\n                    })\n                    .success(function(data) {\n                        self.errorCode = null;\n\n                        //need to normalize null data to empty array\n                        if(data === null || data === 'null') {\n                            data = [];\n                        }\n                        self.transactions = self.preprocessTransactions(data);\n\n                        return self.transactions;\n                    })\n                    .error(function(data) {\n                        self.errorCode = data.errorCode || 500;\n\n                        return data;\n                    })\n                    ['finally'](function() {\n                        self.loading = false;\n                    });\n                };\n\n                /**\n                 * Checks for errors during download and ensures that no transactions have been loaded\n                 * @returns {boolean}\n                 */\n                TransactionsAuthModel.prototype.noTransactionsAuthFound = function() {\n                    return (!this.loading && this.transactions.length === 0) && !this.errorCode;\n                };\n\n                return new TransactionsAuthModel();\n            }\n\n            return {\n                api: API\n            };\n        };\n    };\n});\n\n\n\n/** WEBPACK FOOTER **\n ** ./scripts/components/transactions-list-authorizations/scripts/providers.js\n **/","/**\n *  ----------------------------------------------------------------\n *  Copyright © Backbase B.V.\n *  ----------------------------------------------------------------\n *  Author : Backbase R&D - Amsterdam - New York\n *  Filename : directives.js\n *  Description:  On Hold Funds list directive\n *  ----------------------------------------------------------------\n */\ndefine(function(require, exports) {\n\n    'use strict';\n\n    var $ = window.jQuery;\n\n    // @ngInject\n    exports.lpTransactionsAuthorizationsList = function($templateCache, lpTransactionsAuth) {\n\n        $templateCache.put('$transactions-auth/list.html', require('../templates/list'));\n\n        /**\n         * Main link function\n         *\n         * @param scope\n         * @param elem\n         * @param attrs\n         */\n        function linkFn(scope, elem, attrs) {\n\n            // init model API\n            scope.transactions = lpTransactionsAuth.api();\n\n            // hide/show variable\n            scope.listVisible = true;\n\n            // show toggler\n            scope.showToggle = true;\n\n            // watch selected account change\n            scope.$watch('accounts.selected', function(account) {\n                if (account) {\n                    scope.transactions.loadTransactionsAuth(account)['catch'](function (error) {\n                        // display error if needed\n                        scope.serverError = true;\n                    });\n                }\n            });\n\n            scope.openPreview = function(transaction) {\n                transaction.preview = true;\n                $('#transaction-' + transaction.id).addClass('preview');\n            };\n\n            scope.closePreview = function(transaction) {\n                transaction.preview = false;\n                $('#transaction-' + transaction.id).removeClass('preview');\n            };\n        }\n\n        /**\n         * Compile function\n         * @param  {object}   el angular dom el object\n         * @param  {object}   attrs el attributes\n         * @return {function} link controller function\n         */\n        function compileFn(elem, attrs) {\n            return linkFn;\n        }\n\n        // Directive configuration\n        return {\n            scope: {\n                accounts: '=lpAccounts',\n                transactionsCategories: '=lpTransactionsCategories',\n                categoryLayout: '=',\n                showCategories: '='\n            },\n            restrict: 'AE',\n            compile: compileFn,\n            template: $templateCache.get('$transactions-auth/list.html')\n        };\n    };\n\n});\n\n\n\n/** WEBPACK FOOTER **\n ** ./scripts/components/transactions-list-authorizations/scripts/directives.js\n **/","define(function (require, exports, module) {\n    'use strict';\n\n    var template = '' +\n        '<div ng-if=\"transactions.transactions.length > 0\" class=\"lp-transactions-list-authorizations\">' +\n        '    <h5 ng-click=\"(listVisible = !listVisible)\" class=\"lp-auth-header text-muted\">{{ \"Authorizations and Funds on Hold\" | translate}}&nbsp;' +\n        '        <i ng-show=\"listVisible\" class=\"lp-icon lp-icon-caret-up\"></i>' +\n        '        <i ng-show=\"!listVisible\" class=\"lp-icon lp-icon-caret-down\"></i>' +\n        '    </h5>' +\n        '    <div ng-show=\"!listVisible\" class=\"text-warning text-center\">{{ \"List of on-hold transactions is collapsed. Click the header above to show it...\" }}</div><br ng-show=\"!listVisible\" />' +\n        '    <ul ng-show=\"listVisible\" id=\"transactions-list-auth\" class=\"list-group list-view transactions-list\">' +\n        '        <li class=\"list-group-item list-view-row clearfix\"' +\n        '            ng-repeat=\"transaction in transactions.transactions track by $index\">' +\n        '            <div id=\"transaction-{{transaction.id}}\" class=\"list-view-container clearfix\">' +\n        '               <div class=\"categories\" ng-mouseover=\"openPreview(transaction)\" ng-mouseout=\"closePreview(transaction)\" ng-if=\"showCategories\">' +\n        '                   <div lp-category-display=\"lp-category-display\" lp-category-view=\"previewAll\" lp-category-list=\"transactionsCategories.categories\" ng-model=\"transaction\"></div>' +\n        '               </div>' +\n        '               <div class=\"info\">' +\n        '                   <div class=\"col-md-8 col-sm-8 col-xs-8 column\">' +\n        '                       <div class=\"centered\">' +\n        '                           <div class=\"h4\">{{ transaction.beneficiary }}</div>' +\n        '                           <div class=\"h6 text-muted\">{{ transaction.dateTime | date }}</div>' +\n        '                       </div>' +\n        '                   </div>' +\n        '                   <div class=\"col-md-4 col-sm-4 col-xs-4 column text-center\">' +\n        '                       <div class=\"centered\">' +\n        '                           <span class=\"sr-only\">Amount</span>' +\n        '                           <span class=\"h4\" itemProp=\"transactionAmount\"' +\n        '                               lp-amount=\"transaction.amount\"' +\n        '                               lp-amount-currency=\"transaction.currencyCode\"></span>' +\n        '                       </div>' +\n        '                   </div>' +\n        '               </div>' +\n        '            </div>' +\n        '        </li>' +\n        '    </ul>' +\n        '    <h3 class=\"lp-auth-footer\"></h3>' +\n        '</div>';\n\n    return template;\n});\n\n\n\n/** WEBPACK FOOTER **\n ** ./scripts/components/transactions-list-authorizations/templates/list.js\n **/","define( function (require, exports, module) {\n\n    'use strict';\n\n    module.name = 'component.transactions-search';\n\n    var base = require('base');\n    var ui = require('ui');\n    var tags = require('module-tags');\n    var contacts = require('module-contacts');\n\n    var deps = [\n        ui.name,\n        tags.name,\n        contacts.name\n    ];\n\n    module.exports = base.createModule(module.name, deps)\n        .controller( require('./controllers') )\n        .directive( require('./directives') )\n        .factory( require('./factories') );\n\n});\n\n\n\n/** WEBPACK FOOTER **\n ** ./scripts/components/transactions-search/scripts/main.js\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_33__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"module-contacts\"\n ** module id = 33\n ** module chunks = 0\n **/","/**\n *  ----------------------------------------------------------------\n *  Copyright © Backbase B.V.\n *  ----------------------------------------------------------------\n *  Author : Backbase R&D - Amsterdam - New York\n *  Filename : controllers.js\n *  Description:  Transactions Search Component Controllers\n *  ----------------------------------------------------------------\n */\ndefine(function(require, exports) {\n    'use strict';\n\n    // @ngInject\n    exports.lpExportTransactions = function($scope, $modalInstance) {\n        $scope.download = function(option) {\n            $modalInstance.close(option);\n        };\n\n        $scope.cancel = function() {\n            $modalInstance.dismiss('cancel');\n        };\n    };\n});\n\n\n\n/** WEBPACK FOOTER **\n ** ./scripts/components/transactions-search/scripts/controllers.js\n **/","/**\n *  ----------------------------------------------------------------\n *  Copyright © Backbase B.V.\n *  ----------------------------------------------------------------\n *  Author : Backbase R&D - Amsterdam - New York\n *  Filename : directives.js\n *  Description:  Transactions Search Component\n *  ----------------------------------------------------------------\n */\ndefine(function(require, exports) {\n\n    'use strict';\n\n    var $ = window.jQuery;\n\n    // @ngInject\n    exports.lpTransactionsSearch = function($templateCache, $modal, lpCoreBus, lpCoreUtils) {\n        $templateCache.put('$transactions/sortDropdownOption.html', require('../templates/dropdownOption'));\n\n        function linkFn(scope, elem, attrs) {\n\n            /*----------------------------------------------------------------*/\n            /* Private methods & variables\n            /*----------------------------------------------------------------*/\n            var currentSuggestion;\n            var suggestionType = {\n                date: function(result) {\n                    var data = {\n                        fromDate: result.from.getTime(),\n                        toDate: result.to.getTime()\n                    };\n                    lpCoreBus.publish('launchpad-retail.transactionsDateSearch', data);\n                    return data;\n                },\n\n                amount: function(result) {\n                    return {\n                        fromAmount: result.from,\n                        toAmount: result.to\n                    };\n                },\n\n                contact: function(result) {\n                    return {\n                        contact: result.contact\n                    };\n                },\n\n                category: function(result) {\n                    lpCoreBus.publish('launchpad-retail.transactionsCategorySearch', currentSuggestion.category);\n                    return {\n                        category: result.category\n                    };\n                },\n\n                query: function(result) {\n                    return {\n                        query: result.query\n                    };\n                }\n            };\n\n            // Sorting options\n            var baseIconClass = 'lp-icon';\n            var newestOnTopClass = baseIconClass + ' lp-icon-new_top';\n            var oldestOnTopClass = baseIconClass + ' lp-icon-old_top';\n            var largestAmountOnTopClass = baseIconClass + ' lp-icon-big_to_small';\n            var smallestAmountOnTopClass = baseIconClass + ' lp-icon-small_to_big';\n\n            scope.sort = {\n                options: [\n                    { label: 'Newest on Top', icon: newestOnTopClass, sort: '-bookingDateTime', aria: 'Decreasing' },\n                    { label: 'Oldest on Top', icon: oldestOnTopClass, sort: 'bookingDateTime', aria: 'Increasing' },\n                    { label: 'Largest Amount on Top', icon: largestAmountOnTopClass, sort: '-transactionAmount', aria: 'Decreasing' },\n                    { label: 'Smallest Amount on Top', icon: smallestAmountOnTopClass, sort: 'transactionAmount', aria: 'Increasing' }\n                ]\n            };\n            scope.sort.selected = scope.sort.options[0];\n\n            /*----------------------------------------------------------------*/\n            /* Watchers\n            /*----------------------------------------------------------------*/\n            scope.$on('$destroy', function() {\n                // clean up\n            });\n\n            /*----------------------------------------------------------------*/\n            /* Events\n            /*----------------------------------------------------------------*/\n\n\n            /*----------------------------------------------------------------*/\n            /* Public methods & properties\n            /*----------------------------------------------------------------*/\n            scope.doSearch = function() {\n                var filters;\n\n                if (currentSuggestion) {\n                    var type = currentSuggestion.search.query ? 'query' : currentSuggestion.type;\n                    filters = suggestionType[type](currentSuggestion.search);\n                } else {\n                    filters = {};\n                }\n\n                scope.onPerformSearch({ filters: filters });\n            };\n\n            scope.selectSuggestion = function(suggestion) {\n                currentSuggestion = suggestion;\n                scope.doSearch();\n            };\n\n            scope.clearSuggestion = function() {\n                scope.onClearSearch();\n            };\n\n            scope.updateSuggestion = function() {\n                scope.onUpdateSearch();\n            };\n\n            scope.changeSort = function() {\n                var value = scope.sort.selected;\n                scope.onChangeSort({ value: value });\n            };\n\n            var tmpl = require('../templates/export-transactions');\n            scope.showExportOptions = function() {\n                var modalInstance = $modal.open({\n                    template: tmpl,\n                    controller: 'lpExportTransactions'\n                });\n\n                modalInstance.result.then(function (format) {\n                    scope.onExportTransactions({ format: format });\n                }, function (err) {\n                    //TODO: Add Error handling\n                    console.log(err);\n                });\n            };\n\n            scope.toggleCategoryView = function () {\n                lpCoreBus.publish('launchpad-retail.module-transactions.toggleCategoryView');\n            };\n\n            scope.showExportButton = !!scope.showExportButton;\n            scope.showCategoriesToggle = !lpCoreUtils.isUndefined(scope.showCategoriesToggle)\n                ? scope.showCategoriesToggle\n                : true;\n        }\n\n        /**\n         * Compile function\n         * @param  {object} el    angular dom el object\n         * @param  {object} attrs el attributes\n         * @return {function}       link controller function\n         */\n        function compileFn(elem, attrs) {\n            return linkFn;\n        }\n\n        // Directive configuration\n        return {\n            scope: {\n                accounts: '=',\n                contacts: '=',\n                transactionsCategories: '=',\n                showCategoriesToggle: '=?',\n                showExportButton: '=?',\n                onPerformSearch: '&',\n                onClearSearch: '&',\n                onUpdateSearch: '&',\n                onChangeSort: '&',\n                onExportTransactions: '&'\n            },\n            restrict: 'AE',\n            require: '?^ngModel',\n            compile: compileFn,\n            template: require('../templates/search')\n        };\n    };\n\n    // @ngInject\n    exports.lpSmartsuggest = function(lpCoreBus, lpCoreUtils, SmartSuggestEngine, SmartSuggestFormatter) {\n\n        return {\n            restrict: 'A',\n            scope: {\n                'smartsuggestSelect': '=',\n                'smartsuggestClear': '=',\n                'smartsuggestUpdate': '=',\n                'currency': '=',\n                'contacts': '=',\n                'categories': '='\n            },\n            link: function(scope, element, attrs) {\n\n                // TAGS: here we check if to use tags\n                scope.tagsInput = !$(element).closest('form').find('.lp-tags').length ? false : true;\n                if (scope.tagsInput === true) {\n                    // let know the input field we use\n                    lpCoreBus.publish('lpTagsInputField', element[0]);\n                }\n\n                //setup the smart suggest engine\n                var smartSuggest = new SmartSuggestEngine();\n                smartSuggest.addSuggester({\n                    data: [],\n                    suggest: SmartSuggestEngine.builtIn.getContactSuggestions\n                });\n                smartSuggest.addSuggester({\n                    type: SmartSuggestEngine.types.AMOUNT,\n                    suggest: SmartSuggestEngine.builtIn.getAmountSuggestions\n                });\n                smartSuggest.addSuggester({\n                    type: SmartSuggestEngine.types.DATE,\n                    suggest: SmartSuggestEngine.builtIn.getDateSuggestions\n                });\n                smartSuggest.addSuggester({\n                    type: SmartSuggestEngine.types.GENERAL,\n                    suggest: SmartSuggestEngine.builtIn.getGeneralSuggestions\n                });\n\n                var formatter = new SmartSuggestFormatter({\n                    locale: 'en-US',\n                    currency: scope.currency\n                });\n\n                scope.$watch('currency', function(currency) {\n                    formatter.currency = currency;\n                });\n\n                scope.$watch('contacts', function(contacts) {\n                    //TODO: why is this not an empty array when empty?\n                    if(lpCoreUtils.isArray(contacts)) {\n                        smartSuggest.addSuggester({\n                            data: contacts,\n                            suggest: SmartSuggestEngine.builtIn.getContactSuggestions\n                        });\n                    }\n                });\n\n                scope.$watch('categories', function(categories) {\n                    formatter.categories = categories;\n                    smartSuggest.addSuggester({\n                        data: scope.categories,\n                        type: SmartSuggestEngine.types.CATEGORY,\n                        suggest: SmartSuggestEngine.builtIn.getCategorySuggestions\n                    });\n                });\n\n                $(element).autosuggest({\n                    lookup: function(q) {\n                        var suggs = smartSuggest.getSuggestions(q);\n                        suggs = suggs.map(function(suggestion) {\n                            var values = formatter.format(suggestion);\n\n                            var displayValue;\n                            if(suggestion.contact) {\n                                displayValue = suggestion.contact.name;\n                            } else if(values.length === 2) {\n                                displayValue = values[0] + ' to ' + values[1];\n                            } else {\n                                displayValue = values[0];\n                            }\n\n                            return {\n                                data: suggestion,\n                                value: displayValue\n                            };\n                        });\n                        return suggs;\n                    },\n                    onSelect: function (suggestion) {\n                        if(scope.smartsuggestSelect) {\n                            lpCoreBus.publish('lpSearchSelectValue', {type: suggestion.data.type, text: suggestion.value, icon: formatter.getSuggestionIcon(suggestion.data, true)});\n                            scope.$apply(function() {\n                                scope.smartsuggestSelect.call({}, suggestion.data);\n                            });\n                        }\n                    },\n                    onClear: function() {\n                        if(scope.smartsuggestClear && !scope.tagsInput) {\n                            scope.$apply(function() {\n                                scope.smartsuggestClear.call({});\n                            });\n                        }\n                    },\n                    onChangeModel: function() {\n                        if(scope.smartsuggestUpdate && scope.tagsInput) {\n                            scope.$apply(function() {\n                                scope.smartsuggestUpdate.call({}, true);\n                            });\n                        }\n                    },\n                    formatResult: function(suggestion) {\n                        return formatter.getSuggestionHtml(suggestion.data);\n                    },\n                    autoSelectFirst: true\n                });\n            }\n        };\n    };\n});\n\n\n\n/** WEBPACK FOOTER **\n ** ./scripts/components/transactions-search/scripts/directives.js\n **/","define(function (require, exports, module) {\n    'use strict';\n\n    var template = '' +\n        '<span>' +\n        '    <i class=\"{{option.icon}} option-icon\"></i>' +\n        '    <span class=\"sr-only\">Sort by</span>' +\n        '    <span class=\"option-label\">{{option.label}}</span>' +\n        '    <span class=\"sr-only\">{{option.aria}}</span>' +\n        '    <i class=\"lp-icon lp-icon-checkmark_fat\"></i>' +\n        '</span>';\n\n    return template;\n});\n\n\n\n/** WEBPACK FOOTER **\n ** ./scripts/components/transactions-search/templates/dropdownOption.js\n **/","define(function(require, exports, module) {\n    'use strict';\n\n    module.exports = [\n    '<div class=\"export-transactions-modal\">',\n        '<div class=\"panel-body\">',\n            '<div class=\"modal-header\" lp-i18n=\"Export Results\"></div>',\n            '<div class=\"modal-body\">',\n                '<p lp-i18n=\"Select your chosen format bellow to export all transaction results currently displayed.\"></p>',\n                '<form>',\n                    '<ul>',\n                        '<li>',\n                            '<lp-custom-radio ng-model=\"exportOption\" value=\"csv\">',\n                                '<span lp-i18n=\"CSV - integrates with Excel, Numbers, etc.\"></span>',\n                            '</lp-custom-radio>',\n                        '<li>',\n                            '<lp-custom-radio ng-model=\"exportOption\" value=\"ofx\">',\n                                '<span lp-i18n=\"OFX - integrates with Quicken.\"></span>',\n                            '</lp-custom-radio>',\n                        '</li>',\n                    '</ul>',\n                '</form>',\n            '</div>',\n            '<div class=\"modal-footer\">',\n                '<button type=\"button\" ng-click=\"cancel()\" class=\"btn btn-link\" lp-i18n=\"Cancel\"></button>',\n                '<button type=\"button\" ng-click=\"download(exportOption)\" ng-disabled=\"!exportOption\" class=\"btn btn-primary\" lp-i18n=\"Export Format\"></button>',\n                '<p class=\"small\">',\n                    '<i class=\"lp-icon lp-icon-info-sign\"></i><span lp-i18n=\"For best results narrow your search criteria to keep from downloading unnecesary transactions.\"></span>',\n                '</p>',\n            '</div>',\n        '</div>',\n    '</div>'\n    ].join('');\n});\n\n\n\n/** WEBPACK FOOTER **\n ** ./scripts/components/transactions-search/templates/export-transactions.js\n **/","define(function(require, exports, module) {\n    'use strict';\n\n    module.exports = [\n        '<form ng-submit=\"doSearch\" ng-class=\"{ \\'has-category-toggle\\': showCategories }\">',\n        '    <div class=\"lp-search-wrapper\">',\n        '        <div class=\"lp-search-left\" ng-if=\"showCategoriesToggle\">',\n        '           <button class=\"btn lp-incorporate-btn\" tabindex=\"0\" aria-pressed=\"{{ previewAll }}\" ng-click=\"toggleCategoryView()\" ng-class=\"{ \\'active\\': previewAll }\">',\n        '               <i title=\"Category view\" class=\"lp-icon lp-icon-tag\"></i>',\n        '               <span class=\"sr-only\">Show Categories</span>',\n        '           </button>',\n        '        </div>',\n        '        <div class=\"lp-search-left\">',\n        '            <div lp-tags-filters=\"lp-tags-filters\"></div>',\n        '        </div>',\n        '        <div class=\"lp-search-tags\">',\n        '            <div lp-tags=\"lp-tags\" empty=\"lp-tags-left\" class=\"lp-tags\"></div>',\n        '            <input lp-smartsuggest=\"lp-smartsuggest\"',\n        '                   smartsuggest-select=\"selectSuggestion\"',\n        '                   smartsuggest-clear=\"clearSuggestion\"',\n        '                   smartsuggest-update=\"updateSuggestion\"',\n        '                   currency=\"accounts.selected.currency\"',\n        '                   contacts=\"contacts.contacts\"',\n        '                   categories=\"transactionsCategories.categories\"',\n        '                   ng-model=\"searchTerm\"',\n        '                   class=\"form-control\" placeholder=\"Search for dates, amounts, contacts...\" />',\n        '        </div>',\n        '        <div class=\"lp-search-right\">',\n        '            <div dropdown-select=\"dropdown-select\" options=\"option as option for option in sort.options\" ng-model=\"sort.selected\" ng-change=\"changeSort()\" class=\"input-group-btn sort-select pull-right lp-incorporate-btn\" option-template-url=\"$transactions/sortDropdownOption.html\"',\n        '                 aria-controls=\"transactions-list\">',\n        '            </div>',\n        '        </div>',\n        '        <div ng-if=\"showExportButton\" class=\"lp-transactions-export-btn\">',\n        '            <button type=\"button\" class=\"btn btn-default lp-search-col lp-incorporate-btn\" ng-click=\"showExportOptions()\">',\n        '               <i class=\"fa fa-download\"></i><span lp-i18n=\" Export List\"></span>',\n        '            </button>',\n        '        </div>',\n        '    </div>',\n        '</form>'\n    ].join('');\n});\n\n\n\n/** WEBPACK FOOTER **\n ** ./scripts/components/transactions-search/templates/search.js\n **/","/**\n *  ----------------------------------------------------------------\n *  Copyright © Backbase B.V.\n *  ----------------------------------------------------------------\n *  Author : Backbase R&D - Amsterdam - New York\n *  Filename : directives.js\n *  Description:  Transactions Search Component\n *  ----------------------------------------------------------------\n */\ndefine(function(require, exports) {\n\n    'use strict';\n\n    // @ngInject\n    exports.lpDownloadTransactionsFile = function($window) {\n        return function(link) {\n            if (!$window.open(link, '_blank')) {\n                console.log('lpDownloadTransactionsFile:error');\n            }\n        };\n    };\n});\n\n\n\n/** WEBPACK FOOTER **\n ** ./scripts/components/transactions-search/scripts/factories.js\n **/","/**\n * Widget Transactions Spendings Component\n * @module widget-transactions\n */\ndefine(function (require, exports, module) {\n\n    'use strict';\n\n    module.name = 'component.transactions-spendings';\n\n    var base = require('base');\n    var deps = [\n    ];\n\n    module.exports = base.createModule(module.name, deps)\n        .factory( require('./factories') )\n        .directive( require('./directives') );\n});\n\n\n\n/** WEBPACK FOOTER **\n ** ./scripts/components/transactions-spendings/scripts/main.js\n **/","define(function(require, exports, module) {\n    'use strict';\n\n    function factory(endpointSrc, cfg){\n\n        // @ngInject\n        var fn = function($resource, lpTransactions) {\n            var endpoint = lpTransactions.getEndpoint(endpointSrc);\n            return $resource(endpoint, null, cfg);\n        };\n        return fn;\n    }\n\n\n    exports.CategorySpendingsResource = factory('categorySpendingEndpoint', {\n        'get': {method: 'GET'}\n    });\n\n    exports.CategoriesResource = factory('categoriesEndpoint', {\n        'get': {method: 'GET', isArray: true}\n    });\n\n});\n\n\n\n/** WEBPACK FOOTER **\n ** ./scripts/components/transactions-spendings/scripts/factories.js\n **/","define(function(require, exports, module) {\n    'use strict';\n\n    var d3 = require('d3');\n    var utils = require('base').utils;\n\n    // @ngInject\n    exports.lpCategoriesSpendings = function($q, $timeout, $templateCache, lpCoreBus, CategorySpendingsResource, CategoriesResource) {\n        function parse(data) {\n            var categoriesSpendings = data.spendings.categoriesSpendings;\n            var categories = data.categories;\n\n            categoriesSpendings\n                .sort(function (a, b) {\n                    return a.amount - b.amount;\n                })\n                .forEach(function (categorySpending) {\n                    var category = utils.find(categories, function (currentCategory) {\n                        return currentCategory.id === categorySpending.categoryId;\n                    });\n\n                    categorySpending.name = category.name;\n                    categorySpending.color = category.color;\n                    categorySpending.currency = data.spendings.currency;\n                });\n            return categoriesSpendings;\n        }\n\n        function linkFn(scope, elem, attrs) {\n            scope.options = utils.assign({}, scope.options, scope.lpCategoriesSpendings);\n            scope.accountId = null;\n            scope.fromDate = null;\n            scope.toDate = null;\n\n            scope.viewLoading = true;\n            scope.missingData = false;\n            scope.showChart = false;\n\n            scope.$watchCollection('[viewLoading,missingData]', function(newVals, oldVals) {\n                var viewLoading = newVals[0];\n                var missingData = newVals[1];\n                scope.showChart = !viewLoading && !missingData;\n            });\n\n            scope.selectItem = function (item) {\n                $timeout(function () {\n                    scope.selectedItem = item;\n                    lpCoreBus.publish('launchpad-retail.donutCategoryChartSelection', item);\n                });\n            };\n\n            scope.resize = function (width, height) {\n                $timeout(function () {\n                    scope.width = width;\n                });\n            };\n\n            /**\n             * Updates both categories and spending data, based on changed\n             * query values for CategorySpendingsResource\n             */\n            scope.updateData = function() {\n                var params = {\n                    accountIds: scope.accountId || null,\n                    start: scope.fromDate,\n                    end: scope.toDate\n                };\n\n                $q.all({\n                    spendings: CategorySpendingsResource.get(params).$promise,\n                    categories: CategoriesResource.get().$promise\n                }).then(function(result) {\n                    scope.viewLoading = false;\n                    if(result.spendings.categoriesSpendings.length === 0) {\n                        scope.missingData = true;\n                        return;\n                    }\n                    scope.missingData = false;\n                    scope.options = utils.assign({}, scope.options, {\n                        data: parse(result)\n                    });\n                }, function(error) {\n                    scope.viewLoading = false;\n                    scope.missingData = true;\n                });\n            };\n\n            //Listen for user accounts data load\n            var accountIds;\n            var onAccountsLoaded = function(accounts) {\n                utils.forEach(accounts, function(account) {\n                    if (account.ids) {\n                        accountIds = account.ids;\n                    }\n                });\n\n                scope.accountId = accountIds;\n            };\n            lpCoreBus.subscribe('launchpad-retail.accountsLoaded', onAccountsLoaded);\n            lpCoreBus.subscribe('lpAccounts.loaded', onAccountsLoaded);\n\n            var removeWatch = scope.$watch('lpAccounts.selected', function(account) {\n                if(!account) {\n                    scope.viewLoading = false;\n                    scope.missingData = true;\n                    return;\n                }\n\n                //Listen for user account selection\n                lpCoreBus.subscribe('launchpad-retail.accountSelected', function(params) {\n                    scope.accountId = params.allAccounts ? accountIds : params.accountId;\n                    scope.updateData();\n                });\n\n                scope.accountId = account.id;\n                scope.updateData();\n\n                removeWatch();\n            });\n\n            //Listen for transaction filtering by date\n            lpCoreBus.subscribe('launchpad-retail.transactionsDateSearch', function(params) {\n                scope.fromDate = params.fromDate;\n                scope.toDate = params.toDate;\n                scope.updateData();\n            });\n\n            lpCoreBus.subscribe('launchpad-retail.transactionsCategorySearch', function(categories) {\n                if (categories.length === 1) {\n                    var spending = utils.find(scope.options.data, function(s) {\n                        return s.categoryId === categories[0].id;\n                    });\n\n                    scope.selectItem(spending);\n                }\n            });\n\n            scope.$on('tabSelected', function (event, tab) {\n                if (tab === 'donut') {\n                    scope.options = utils.assign({}, scope.options); // force update\n                }\n            });\n        }\n\n        function compileFn(elem, attrs) {\n            return linkFn;\n        }\n\n        // retrieve template\n        function templateFn() {\n            return (\n                '<div class=\"ng-cloak\" ng-class=\"responsiveClass\">' +\n                '   <div class=\"lp-widget-content widget widget-default\" role=\"application\">' +\n                '       <div class=\"lp-widget-body\" progress-indicator=\"viewLoading\">' +\n                '           <div ng-if=\"missingData\" class=\"panel-message\" >' +\n                '               <div class=\"panel-body text-center\" lp-i18n=\"Chart data is not available.\"></div>' +\n                '           </div>' +\n                '           <div lp-donut-chart options=\"options\" class=\"category-spendings-chart\" on-select=\"selectItem\" item=\"selectedItem\" on-resize=\"resize\" ng-show=\"showChart\">' +\n                '              <div category-details ng-model=\"selectedItem\" width=\"width\"></div>' +\n                '           </div>' +\n                '       </div>' +\n                '   </div>' +\n                '</div>'\n            );\n        }\n\n        // Directive configuration\n        return {\n            scope: {\n                lpCategoriesSpendings: '=?',\n                lpAccounts: '=',\n                options: '=?'\n            },\n            restrict: 'AE',\n            compile: compileFn,\n            template: templateFn,\n            replace: true\n        };\n    };\n\n    function wrapText(textNode, text) {\n        textNode.selectAll('tspan').remove();\n\n        var textNodeWidth = textNode.attr('width');\n        var tspanCount = 1;\n        var tspan = textNode.append('tspan');\n        var words = text.split(/\\s+/);\n        var lineHeight = 20;\n\n        if(words.length === 1 && text.length > 15) {\n            tspan.text(text.slice(0, 12) + '...');\n            return textNode;\n        }\n\n        for (var i = 0; i < words.length; i++) {\n            var node = tspan.node();\n            if(node && node.getComputedTextLength && node.getComputedTextLength() > textNodeWidth) {\n                tspanCount++;\n\n                // allow only two lines of text, otherwise end title with ellipsis\n                if(tspanCount >= 3) {\n                    tspan.text(tspan.text() + '...');\n                    break;\n                }\n\n                tspan = textNode.append('tspan').attr({x: 0, dy: lineHeight});\n            }\n\n            tspan.text(tspan.text() + ' ' + words[i]);\n        }\n\n        return textNode;\n    }\n\n    function formatPercentage(val) {\n        return (val * 100).toFixed(2) + '%';\n    }\n\n    // @ngInject\n    exports.categoryDetails = function (lpCoreI18n) {\n        function link(scope, element) {\n\n            var canvases = element.find('svg');\n            var canvas = canvases.length ? d3.select(canvases[0]) : d3.select(element[0]).append('svg:svg');\n            var node = canvas.append('svg:g');\n\n            node.append('svg:text').attr('class', 'name');\n            node.append('svg:text').attr('class', 'amount');\n            node.append('svg:text').attr('class', 'share');\n            node.append('svg:text').attr('class', 'delta');\n\n            function resize(width, height) {\n                if (!width) { return; }\n\n                var radius = width / 2;\n                var innerRadius = radius * 0.55;\n\n                node.attr('transform', 'translate(' + radius + ',' + radius + ')');\n                var unitSize = width / 20;\n                node.select('.name').attr({y: -0.34 * innerRadius, width: innerRadius}).style('font-size', unitSize + 'px');\n                node.select('.amount').attr({y: 0.15 * innerRadius}).style('font-size', 1.4 * unitSize + 'px');\n                node.select('.share').attr({y: 0.5 * innerRadius}).style('font-size', unitSize + 'px');\n                node.select('.delta').attr({y: 0.5 * innerRadius}).style('font-size', unitSize + 'px');\n            }\n\n            function update(data) {\n                if (!data) { return; }\n\n                wrapText(node.select('.name'), data.name);\n\n                var delta = data.historicalChangeFactor || 1;\n                var symbol = delta < 0 ? '↓' :\n                             delta > 0 ? '↑' : '';\n\n                node.select('.amount').text(lpCoreI18n.formatCurrency(data.amount, data.currency));\n                node.select('.share').text(formatPercentage(data.totalFraction) + ' ');\n                node.select('.delta').text(' ' + symbol + formatPercentage(Math.abs(delta)));\n            }\n\n            scope.$watch('width', resize);\n            scope.$watch('data', update);\n        }\n\n        return {\n            restrict: 'EA',\n            link: link,\n            scope: {\n                data: '=ngModel',\n                width: '='\n            }\n        };\n    };\n});\n\n\n\n/** WEBPACK FOOTER **\n ** ./scripts/components/transactions-spendings/scripts/directives.js\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_43__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"d3\"\n ** module id = 43\n ** module chunks = 0\n **/","/**\n * Widget Transactions Charts Component\n * @module widget-transactions\n */\ndefine(function (require, exports, module) {\n\n    'use strict';\n\n    module.name = 'component.transactions-charts';\n\n    var base = require('base');\n    var ui = require('ui');\n    var chart = require('module-charts');\n\n    var deps = [\n        ui.name,\n        chart.name\n    ];\n\n    module.exports = base.createModule(module.name, deps)\n        .factory( require('./factories') )\n        .directive( require('./directives') );\n});\n\n\n\n/** WEBPACK FOOTER **\n ** ./scripts/components/transactions-charts/scripts/main.js\n **/","/**\n *  ----------------------------------------------------------------\n *  Copyright © Backbase B.V.\n *  ----------------------------------------------------------------\n *  Author : Backbase R&D - Amsterdam - New York\n *  Filename : providers.js\n *  Description:\n *  Transactions Charts Component Provider\n *  ----------------------------------------------------------------\n */\n\ndefine(function (require, exports, module) {\n\n    'use strict';\n\n    var _ = require('base').utils;\n\n    var normalizeData = function(data, type) {\n        if (data && data.length) {\n            if (data[0].hasOwnProperty(type)) {\n                return _.chain(data)\n                    .map(function(current) {\n                        return current[type];\n                    })\n                    .reduce(function(acc, current) {\n                        return acc.concat(current);\n                    }, [])\n                    .value();\n            } else {\n                return data;\n            }\n        } else {\n            return [];\n        }\n    };\n\n\n    // @ngInject\n    exports.lpAccountsChartData = function(lpCoreUtils, $http, lpTransactions) {\n        var defaults = {\n            accountsChartEndpoint: lpTransactions.getEndpoint('accountsChartEndpoint'),\n            accountId: null\n        };\n\n        /**\n         * Accounts Chart service constructor\n         * @param config\n         * @constructor\n         */\n        var AccountsChartModel = function(config) {\n            this.config = lpCoreUtils.extend({}, defaults, config);\n            this.chartData = null;\n            this.error = false;\n        };\n\n        AccountsChartModel.prototype.setId = function(id, allAccounts) {\n            this.config.allAccounts = !!allAccounts;\n            this.config.accountId = id;\n        };\n\n        /**\n         * Load data from server\n         * @param queryParams {}\n         */\n        AccountsChartModel.prototype.load = function(queryParams) {\n            var self = this;\n            var url;\n            var options = {};\n\n            if (!queryParams) {\n                queryParams = {};\n            }\n\n            if (this.config.allAccounts) {\n                url = this.config.allAccountsChartEndpoint || lpTransactions.getEndpoint('allAccountsChartEndpoint');\n                queryParams.accountIds = this.config.accountId;\n            } else {\n                url = this.config.accountsChartEndpoint;\n                options.data = {\n                    accountId: this.config.accountId\n                };\n            }\n            options.params = queryParams;\n            return $http.get(url, options)\n                .then(function(response){\n                    self.chartData = normalizeData(response.data, 'balances');\n                    return self.chartData;\n                }, function(response){\n                    if(response.errors) {\n                        self.error = response.errors[0].code;\n                    }\n                });\n        };\n\n        return {\n            getInstance: function(config) {\n                return new AccountsChartModel(config);\n            }\n        };\n    };\n\n    // @ngInject\n    exports.lpTransactionsChartData = function(lpCoreUtils, $http, lpTransactions) {\n        var defaults = {\n            transactionsChartEndpoint: lpTransactions.getEndpoint('transactionsChartEndpoint'),\n            accountId: null\n        };\n\n        /**\n         * Transactions Chart service constructor\n         * @param config\n         * @constructor\n         */\n        var TransactionsChartModel = function(config) {\n            this.config = lpCoreUtils.extend({}, defaults, config);\n            this.chartData = null;\n            this.error = false;\n        };\n\n        TransactionsChartModel.prototype.setId = function(id, allAccounts) {\n            this.config.allAccounts = !!allAccounts;\n            this.config.accountId = id;\n        };\n\n        /**\n         * Load data from server\n         * @param queryParams {}\n         */\n        TransactionsChartModel.prototype.load = function(queryParams) {\n            var self = this;\n            var url;\n            var options = {};\n\n            if (!queryParams) {\n                queryParams = {};\n            }\n\n            if (this.config.allAccounts) {\n                url = this.config.allTransactionsChartEndpoint ||\n                    lpTransactions.getEndpoint('allTransactionsChartEndpoint');\n\n                queryParams.accountIds = this.config.accountId;\n            } else {\n                url = this.config.transactionsChartEndpoint;\n                options.data = {\n                    accountId: this.config.accountId\n                };\n            }\n            options.params = queryParams;\n\n            return $http.get(url, options)\n                .then(function(response){\n                    self.chartData = normalizeData(response.data, 'turnovers');\n                    return self.chartData;\n                }, function(response){\n                    if(response.errors) {\n                        self.error = response.errors[0].code;\n                    }\n                });\n        };\n\n        return {\n            getInstance: function(config) {\n                return new TransactionsChartModel(config);\n            }\n        };\n    };\n});\n\n\n\n/** WEBPACK FOOTER **\n ** ./scripts/components/transactions-charts/scripts/factories.js\n **/","/**\n *  ----------------------------------------------------------------\n *  Copyright © Backbase B.V.\n *  ----------------------------------------------------------------\n *  Author : Backbase R&D - Amsterdam - New York\n *  Filename : directives.js\n *  Description:  Transaction charts directive\n *  ----------------------------------------------------------------\n */\ndefine(function(require, exports) {\n\n    'use strict';\n\n    var d3 = require('d3');\n    var types = {\n        vertical: '',\n        horizontal: '-horizontal'\n    };\n\n    function buildCharts(type) {\n\n        // @ngInject\n        var controller = function($templateCache, lpCoreUtils, lpCoreI18n, $q, lpAccountsChartData, lpTransactionsChartData, lpCoreBus) {\n            function linkFn(scope, elem, attrs) {\n                var getNiceTimePeriod = function(startTime, endTime) {\n                    var monthNames = [ 'Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec'];\n\n                    var start = new Date(startTime);\n                    var end = new Date(endTime);\n\n                    //Same dates are fed into the chart but days are cut off at the start of the chart\n                    //This fix brings the display in line together\n                    start.setDate(start.getDate() + 1);\n\n                    //return nicely formatted time period\n                    return start.getDate() + ' ' + monthNames[start.getMonth()] + ' - ' + end.getDate() + ' ' + monthNames[end.getMonth()];\n                };\n\n                var getStartDate = function(){\n                    var result = new Date(scope.endDate);\n                    switch(scope.scale) {\n                        case 'WEEK':\n                            result.setDate(result.getDate() - 7);\n                            break;\n                        case 'MONTH':\n                            result.setMonth(result.getMonth() - 1);\n                            break;\n\n                    }\n                    return result;\n                };\n\n                var setDateRange = function(endDate) {\n                    scope.endDate = new Date(endDate);\n                    scope.timePeriod = getNiceTimePeriod(getStartDate().getTime(), scope.endDate.getTime());\n                };\n\n                var onTransactionsReady = function(transactions) {\n                    // get the date of the newest transaction\n                    if (transactions && transactions.length) {\n                        setDateRange(transactions[0].bookingDateTime);\n                    }\n                    lpCoreBus.unsubscribe('widget-transactions:transactions:ready', onTransactionsReady);\n                };\n                lpCoreBus.subscribe('widget-transactions:transactions:ready', onTransactionsReady);\n\n                var updateCharts = function(direction, onlyTransactions) {\n                    var params = {\n                        start: getStartDate().getTime(),\n                        end: scope.endDate.getTime()\n                    };\n\n                    //Refresh the nice time period\n                    scope.timePeriod = getNiceTimePeriod(params.start, params.end);\n\n                    var getDate = function(date){\n                        var result = new Date(date);\n                        result.setHours(0);\n                        result.setMinutes(0);\n                        result.setSeconds(0);\n                        return result;\n                    };\n\n                    var getTransactionsValue = function(data){\n                        if (scope.series === 'DEPOSIT') {\n                            return data.deposit;\n                        } else {\n                            if (data.hasOwnProperty('withdrawal')) {\n                                return data.withdrawal;\n                            } else if (data.hasOwnProperty('withdraw')) {\n                                return data.withdraw;\n                            } else {\n                                return 0;\n                            }\n                        }\n                    };\n\n                    var formatAmount = function(amount){\n                        return lpCoreI18n.formatCurrency(amount, scope.lpAccounts.selected.currency);\n                    };\n\n                    scope.loading = true;\n                    scope.emptyTurnovers = false;\n                    scope.emptyBalances = false;\n\n                    $q.all([\n                        scope.transactionsChartModel.load(params),\n                        scope.accountsChartModel.load(params)\n                    ])\n                    .then(function(results) {\n                        // Decorate data here\n                        return {\n                            turnovers: results[0],\n                            balances: results[1]\n                        };\n                    })\n                    .then(function(results) {\n                        scope.loading = false;\n                        if (results.turnovers && results.turnovers.length) {\n                            scope.transactionsChartOptions = {\n                                data: results.turnovers,\n                                height: 200,\n                                padding: [30, 30, 30, 90],\n                                parsers: {\n                                    x: function(data) {\n                                        return getDate(data.date);\n                                    },\n                                    y: function(data) {\n                                        return getTransactionsValue(data);\n                                    }\n                                },\n                                formatters: {\n                                    y: function(amount){\n                                        return formatAmount(amount);\n                                    },\n                                    x: function(date) {\n                                        return d3.time.format('%e')(date);\n                                    },\n                                    tooltip: function(data) {\n                                        return d3.time.format('%B %e')(getDate(data.date)) + '<br>' + formatAmount(getTransactionsValue(data));\n                                    }\n                                }\n                            };\n                        } else {\n                            scope.emptyTurnovers = true;\n                        }\n\n                        if(!onlyTransactions){\n                            if (results.balances && results.balances.length) {\n                                scope.accountBalanceChartOptions = {\n                                    data: results.balances,\n                                    height: 200,\n                                    padding: [30, 30, 30, 90],\n                                    parsers: {\n                                        x: function(data) {\n                                            return getDate(data.date);\n                                        },\n                                        y: function(data) {\n                                            return data.amount;\n                                        }\n                                    },\n                                    formatters: {\n                                        y: function(amount){\n                                            return formatAmount(amount);\n                                        },\n                                        x: function(date) {\n                                            return d3.time.format('%e')(date);\n                                        },\n                                        tooltip: function(data) {\n                                            return d3.time.format('%B %e')(getDate(data.date)) + '<br>' + formatAmount(data.amount);\n                                        }\n                                    },\n                                    animation: {\n                                        direction: direction === 'prev' ? 'left' : 'right'\n                                    }\n                                };\n                            } else {\n                                scope.emptyBalances = true;\n                            }\n                        }\n\n                    });\n                };\n\n                var updateChartsOnAccountSelected = function(accountId, allAccounts) {\n                    scope.accountsChartModel.setId(accountId, allAccounts);\n                    scope.transactionsChartModel.setId(accountId, allAccounts);\n                    // If the account selected is a credit card the charts\n                    // are not loaded, but if you loaded an account previously\n                    // this listener is enabled and it will be called when a card account\n                    // is selected.\n                    // TODO: Fix sharing same provider for bank accounts and\n                    //       card accounts\n                    if (scope.lpAccounts.selected && !scope.lpAccounts.selected.cardId) {\n                        updateCharts('prev');\n                    }\n                };\n\n                var initialize = function() {\n                    scope.now = new Date();\n                    scope.scale = 'WEEK';\n                    scope.series = 'WITHDRAWAL';\n                    setDateRange(scope.now);\n\n                    scope.accountsChartModel = lpAccountsChartData.getInstance();\n\n                    scope.transactionsChartModel = lpTransactionsChartData.getInstance();\n\n                    var accountIds;\n                    // Listen when accounts dropdown is ready and read the all accounts ids\n                    lpCoreBus.subscribe('lpAccounts.loaded', function(accounts) {\n                        accountIds = lpCoreUtils.result(lpCoreUtils.find(accounts, function(account) {\n                            return !!account.ids;\n                        }), 'ids');\n                    });\n\n                    var removeWatch = scope.$watch('lpAccounts.selected', function(account) {\n                        if(!account) {\n                            return;\n                        }\n\n                        // Listen for user account selection\n                        lpCoreBus.subscribe('launchpad-retail.accountSelected', function(params) {\n                            var accountId = params.allAccounts ? accountIds : params.accountId;\n                            updateChartsOnAccountSelected(accountId, params.allAccounts);\n                        });\n\n                        updateChartsOnAccountSelected(account.id);\n                        removeWatch();\n                    });\n                };\n\n                scope.nextPeriod = function() {\n                    switch(scope.scale) {\n                        case 'WEEK':\n                            scope.endDate.setDate(scope.endDate.getDate() + 7);\n                            break;\n                        case 'MONTH':\n                            scope.endDate.setMonth(scope.endDate.getMonth() + 1);\n                            break;\n                    }\n\n                    updateCharts('next');\n                };\n\n                scope.prevPeriod = function() {\n                    switch(scope.scale) {\n                        case 'WEEK':\n                            scope.endDate.setDate(scope.endDate.getDate() - 7);\n                            break;\n                        case 'MONTH':\n                            scope.endDate.setMonth(scope.endDate.getMonth() - 1);\n                            break;\n                    }\n                    updateCharts('prev');\n                };\n\n                scope.setScale = function(scale) {\n                    scope.scale = scale;\n                    updateCharts('prev');\n                };\n\n                scope.setSeries = function(series) {\n                    scope.series = series;\n                    updateCharts('prev', true);\n                };\n\n                scope.showNextPeriod = function() {\n                    return scope.now.getTime() > scope.endDate.getTime();\n                };\n\n                scope.$on('tabSelected', function(event, tab){\n                    if (tab === 'chart' || tab === 'combined'){\n                        updateCharts('prev');\n                    }\n                });\n\n                initialize();\n            }\n\n            function compileFn(elem, attrs) {\n                return linkFn;\n            }\n\n            // require template\n            if (type === types.vertical) {\n                $templateCache.put('$transactions/chartTemplate', require('../templates/charts'));\n            } else {\n                $templateCache.put('$transactions/chartTemplate-horizontal', require('../templates/charts-horizontal'));\n            }\n\n            // Directive configuration\n            return {\n                scope: {\n                    lpAccounts: '='\n                },\n                restrict: 'AE',\n                compile: compileFn,\n                template: $templateCache.get('$transactions/chartTemplate' + type)\n            };\n        };\n\n        return controller;\n    }\n\n    exports.lpTransactionsCharts = buildCharts(types.vertical);\n    exports.lpTransactionsChartsHorizontal = buildCharts(types.horizontal);\n});\n\n\n\n/** WEBPACK FOOTER **\n ** ./scripts/components/transactions-charts/scripts/directives.js\n **/","define(function (require, exports, module) {\n    'use strict';\n\n    var template = '' +\n        '<div class=\"lp-widget-body\">' +\n        '    <div>' +\n        '        <div class=\"panel-body lp-chart-balances\">' +\n        '            <div class=\"h4\">Balance - <span ng-bind=\"timePeriod\"></span></div>' +\n        '            <div progress-indicator=\"loading\" class=\"chart-progress-indicator\"></div>' +\n        '            <div ng-show=\"!loading && !emptyBalances\" lp-line-chart=\"lp-line-chart\" lp-chart-options=\"accountBalanceChartOptions\" class=\"accountsChart lp-chart\"></div>' +\n        '            <div ng-show=\"emptyBalances\" class=\"chart-empty-data\" lp-i18n=\"There is no data available for this period of time\"></div>' +\n        '        </div>' +\n        '        <div class=\"panel-body\">' +\n        '            <div class=\"controls clearfix\">' +\n        '                <div class=\"col-xs-2\">' +\n        '                    <button class=\"btn btn-primary btn-block arrow\" ng-click=\"prevPeriod()\">&lt;</button>' +\n        '                </div>' +\n        '                <div class=\"col-xs-8 text-center\">' +\n        '                    <button class=\"btn btn-default\" ng-class=\"{\\'btn-primary\\':scale==\\'WEEK\\'}\" ng-click=\"setScale(\\'WEEK\\')\">7D</button>' +\n        '                    <button class=\"btn btn-default\" ng-class=\"{\\'btn-primary\\':scale==\\'MONTH\\'}\" ng-click=\"setScale(\\'MONTH\\')\">1M</button>' +\n        '                </div>' +\n        '                <div class=\"col-xs-2\">' +\n        '                    <button class=\"btn btn-primary btn-block arrow\" ng-click=\"nextPeriod()\" ng-show=\"showNextPeriod()\">&gt;</button>' +\n        '                </div>' +\n        '            </div>' +\n        '        </div>' +\n        '        <div class=\"panel-body lp-chart-turnovers\">' +\n        '            <div class=\"h4\">Transactions - <span ng-bind=\"timePeriod\"></span></div>' +\n        '            <div progress-indicator=\"loading\" class=\"chart-progress-indicator\"></div>' +\n        '            <div ng-show=\"!loading && !emptyTurnovers\" lp-bar-chart=\"lp-bar-chart\" lp-chart-options=\"transactionsChartOptions\" class=\"transactionsChart lp-chart\"></div>' +\n        '            <div ng-show=\"emptyTurnovers\" class=\"chart-empty-data\" lp-i18n=\"There is no data available for this period of time\"></div>' +\n        '        </div>' +\n        '        <div class=\"panel-body\">' +\n        '            <div class=\"controls clearfix text-center\">' +\n        '                <button class=\"btn btn-default\" ng-class=\"{\\'btn-primary\\':series==\\'WITHDRAWAL\\'}\" ng-click=\"setSeries(\\'WITHDRAWAL\\')\">Spending</button>' +\n        '                <button class=\"btn btn-default\" ng-class=\"{\\'btn-primary\\':series==\\'DEPOSIT\\'}\" ng-click=\"setSeries(\\'DEPOSIT\\')\">Income</button>' +\n        '            </div>' +\n        '        </div>' +\n        '    </div>' +\n        '</div>';\n\n    return template;\n});\n\n\n\n/** WEBPACK FOOTER **\n ** ./scripts/components/transactions-charts/templates/charts.js\n **/","define(function (require, exports, module) {\n    'use strict';\n\n    var template = '' +\n        '<div class=\"lp-widget-body clearfix\">' +\n        '    <div>' +\n        '        <div class=\"col-xs-12 col-sm-6 chart-horizontal\">' +\n        '            <div class=\"panel-body lp-chart-balances\">' +\n        '                <div class=\"h4\">Balance<br /><span ng-bind=\"timePeriod\"></span></div>' +\n        '                <div progress-indicator=\"loading\" class=\"chart-progress-indicator\"></div>' +\n        '                <div ng-show=\"!loading && !emptyBalances\" lp-line-chart=\"lp-line-chart\" lp-chart-options=\"accountBalanceChartOptions\" class=\"accountsChart lp-chart\"></div>' +\n        '                <div ng-show=\"emptyBalances\" class=\"chart-empty-data\" lp-i18n=\"There is no data available for this period of time\"></div>' +\n        '            </div>' +\n        '            <div class=\"panel-body\">' +\n        '                <div class=\"controls clearfix\">' +\n        '                    <div class=\"col-xs-2\">' +\n        '                        <button class=\"btn btn-primary btn-block arrow\" ng-click=\"prevPeriod()\">&lt;</button>' +\n        '                    </div>' +\n        '                    <div class=\"col-xs-8 text-center\">' +\n        '                        <button class=\"btn btn-default\" ng-class=\"{\\'btn-primary\\':scale==\\'WEEK\\'}\" ng-click=\"setScale(\\'WEEK\\')\">7D</button>' +\n        '                        <button class=\"btn btn-default\" ng-class=\"{\\'btn-primary\\':scale==\\'MONTH\\'}\" ng-click=\"setScale(\\'MONTH\\')\">1M</button>' +\n        '                    </div>' +\n        '                    <div class=\"col-xs-2\">' +\n        '                        <button class=\"btn btn-primary btn-block arrow\" ng-click=\"nextPeriod()\" ng-show=\"showNextPeriod()\">&gt;</button>' +\n        '                    </div>' +\n        '                </div>' +\n        '            </div>' +\n        '        </div>' +\n        '        <div class=\"col-xs-12 col-sm-6 chart-horizontal\">' +\n        '            <div class=\"panel-body lp-chart-turnovers\">' +\n        '                <div class=\"h4\">Transactions<br /><span ng-bind=\"timePeriod\"></span></div>' +\n        '                <div progress-indicator=\"loading\" class=\"chart-progress-indicator\"></div>' +\n        '                <div ng-show=\"!loading && !emptyTurnovers\" lp-bar-chart=\"lp-bar-chart\" lp-chart-options=\"transactionsChartOptions\" class=\"transactionsChart lp-chart\"></div>' +\n        '                <div ng-show=\"emptyTurnovers\" class=\"chart-empty-data\" lp-i18n=\"There is no data available for this period of time\"></div>' +\n        '            </div>' +\n        '            <div class=\"panel-body\">' +\n        '                <div class=\"controls clearfix text-center\">' +\n        '                    <button class=\"btn btn-default\" ng-class=\"{\\'btn-primary\\':series==\\'WITHDRAWAL\\'}\" ng-click=\"setSeries(\\'WITHDRAWAL\\')\">Spending</button>' +\n        '                    <button class=\"btn btn-default\" ng-class=\"{\\'btn-primary\\':series==\\'DEPOSIT\\'}\" ng-click=\"setSeries(\\'DEPOSIT\\')\">Income</button>' +\n        '                </div>' +\n        '            </div>' +\n        '        </div>' +\n        '    </div>' +\n        '</div>';\n\n    return template;\n});\n\n\n\n/** WEBPACK FOOTER **\n ** ./scripts/components/transactions-charts/templates/charts-horizontal.js\n **/"," /**\n *  ----------------------------------------------------------------\n *  Copyright © Backbase B.V.\n *  ----------------------------------------------------------------\n *  Author : Backbase R&D - Amsterdam - New York\n *  Filename : providers.js\n *  Description: Retrieves a list of transactions from the server and maintains their state\n *  ----------------------------------------------------------------\n */\ndefine(function (require, exports, module) {\n\n    'use strict';\n\n    // @ngInject\n    exports.lpTransactions = function() {\n\n        // @ngInject\n        this.$get = function($http, $q, lpCoreUtils, lpCoreError, lpTagsUtils) {\n\n            var decorateTransactionsWithAccountsName = function(account, list) {\n                var names = account.accountsNames;\n\n                if (names && lpCoreUtils.isObject(names)) {\n                    lpCoreUtils.forEach(list, function (transaction) {\n                        transaction.accountName = names[transaction.accountId] || '';\n                    });\n                }\n\n                return list;\n            };\n\n            var config = {\n                pageSize: 20,\n                from: 0,\n                sort: '-bookingDateTime'\n            };\n\n            function API() {\n\n                var TransactionsModel = function() {\n                    this.from = config.from;\n                    this.sort = config.sort;\n                    this.transactions = [];\n                    this.moreAvailable = true;\n                    this.account = null;\n                    this.errorCode = null;\n                };\n\n                TransactionsModel.prototype.availableFilters = {\n                    QUERY: 'query',\n                    FROM_DATE: 'fromDate',\n                    TO_DATE: 'toDate',\n                    FROM_AMOUNT: 'fromAmount',\n                    TO_AMOUNT: 'toAmount',\n                    CONTACT: 'contact',\n                    CATEGORY: 'category',\n                    DEBITCREDIT: 'bk'\n                };\n\n                /**\n                 * Clears list of transactions and resets from counter\n                 */\n                TransactionsModel.prototype.clearTransactionsList = function() {\n                    this.transactions = [];\n                    this.moreAvailable = true;\n                    this.from = config.from;\n                    this.errorCode = null;\n                    return this;\n                };\n\n                /**\n                 * Sets the search filters to be used when next loading transactions from the server\n                 * @param filters\n                 */\n                TransactionsModel.prototype.setFilters = function(filters) {\n                    if (lpTagsUtils) {\n                        lpTagsUtils.setFilter(filters);\n                        this.filters = lpTagsUtils.getFilters();\n                    } else {\n                        this.filters = filters;\n                    }\n                    return this;\n                };\n\n                /**\n                 * Clears any current search filters\n                 */\n                TransactionsModel.prototype.clearFilters = function() {\n                    if (lpTagsUtils) {\n                        this.filters = lpTagsUtils.clearFilters();\n                    } else {\n                        this.filters = {};\n                    }\n                    return this;\n                };\n\n                /**\n                 * Updates current search filters\n                 */\n                TransactionsModel.prototype.updateFilters = function() {\n                    if (lpTagsUtils) {\n                        this.filters = lpTagsUtils.getFilters();\n                    } else {\n                        this.filters = {};\n                    }\n                    return this;\n                };\n\n                /**\n                 * Enriches data with presentation logic\n                 * @param transactions\n                 * @returns {*}\n                 */\n                TransactionsModel.prototype.preprocessTransactions = function(transactions) {\n                    var lastTransaction = this.transactions[this.transactions.length - 1] || null;\n                    var moment = lpCoreUtils.date;\n\n                    if(transactions) {\n                        transactions = lpCoreUtils.map(transactions, function(transaction, i) {\n                            //figure out if the date should be displayed as a new date\n                            var prevTransaction = transactions[i - 1] || lastTransaction || null;\n                            var prevDate = prevTransaction\n                                ? moment(prevTransaction.bookingDateTime)\n                                : moment().add(1, 'days');\n                            var currDate = moment(transaction.bookingDateTime);\n\n                            transaction.newDate =\n                                prevDate.date() !== currDate.date() ||\n                                prevDate.month() !== currDate.month() ||\n                                prevDate.year() !== currDate.year();\n\n                            //normalize empty details to be null\n                            if(!transaction.details) {\n                                transaction.details = null;\n                            }\n\n                            //create details tab boolean values\n                            transaction.detailTabs = {\n                                details: true,\n                                categories: false\n                            };\n\n                            //move this to view?\n                            if(transaction.creditDebitIndicator === 'DBIT') {\n                                transaction.transactionAmount *= -1;\n                            }\n\n                            return transaction;\n                        });\n                    }\n                    return transactions;\n                };\n\n                TransactionsModel.prototype.getQueryParamaters = function() {\n                    var queryParams = {};\n                    var availableFilters = this.availableFilters;\n                    var debitCredit;\n\n                    // Key:\n                    // a: action\n                    // q: query\n                    // df: Date from\n                    // dt: Date to\n                    // af: Amount from,\n                    // at: Amount to\n                    // ca: counter party account\n                    // categoryIds: category ids\n                    // crdb (bk): debit: (1) DBIT, credit: (2) CRDT\n                    if (this.filters) {\n\n                        debitCredit = parseInt(this.filters[availableFilters.DEBITCREDIT], 10);\n\n                        if (this.filters.query) {\n                            queryParams.a = 'search';\n                            queryParams.q = this.filters[availableFilters.QUERY];\n                        }\n                        if (this.filters[availableFilters.FROM_DATE] && this.filters[availableFilters.TO_DATE]) {\n                            queryParams.df = this.filters[availableFilters.FROM_DATE];\n                            queryParams.dt = this.filters[availableFilters.TO_DATE];\n                        }\n                        if (\n                            !lpCoreUtils.isUndefined(this.filters[availableFilters.FROM_AMOUNT]) &&\n                            !lpCoreUtils.isUndefined(this.filters[availableFilters.TO_AMOUNT])\n                        ) {\n                            queryParams.af = this.filters[availableFilters.FROM_AMOUNT];\n                            queryParams.at = this.filters[availableFilters.TO_AMOUNT];\n                        }\n                        if (this.filters[availableFilters.CONTACT]) {\n                            queryParams.ca = this.filters[availableFilters.CONTACT];\n                        }\n                        if (this.filters[availableFilters.CATEGORY]) {\n                            queryParams.categoryIds = this.filters[availableFilters.CATEGORY];\n                        }\n                        if (this.filters[availableFilters.DEBITCREDIT]) {\n                            queryParams.crdb = debitCredit === 1 ? 'DBIT' : 'CRDT';\n                        }\n                    }\n\n                    //the minus here means descending order\n                    queryParams.sort = this.sort;\n\n                    return queryParams;\n                };\n\n                TransactionsModel.prototype.getExportTransactionsLink = function(format) {\n                    var accountId = this.account.id || this.account.ids || '';\n                    var queryParams = this.getQueryParamaters();\n                    var parts = config.transactionsEndpoint.replace('$(accountId)', accountId).split('?');\n                    var url = [];\n\n                    //add format param\n                    queryParams['format'] = format;\n\n                    queryParams = lpCoreUtils.buildQueryString(queryParams);\n\n                    if (!parts.length) {\n                        lpCoreError.throwException(new Error('Missing transactions service url'));\n                    }\n\n                    url.push(parts[0]);\n                    if (parts.length > 1) {\n                        queryParams = queryParams + '&' + parts[1];\n                    }\n                    url.push(queryParams);\n\n                    return url.join('?');\n                };\n\n                /**\n                 * Load transactions\n                 * @param account (pass account only for first load)\n                 */\n                TransactionsModel.prototype.loadMoreTransactions = function() {\n                    var self = this;\n                    var deferred = $q.defer();\n\n                    if(!this.account) {\n                        lpCoreError.throwException(new Error('No account specified'));\n                    }\n\n                    if (this.account.allAccounts) {\n                        this.account.id = '';\n                    }\n\n                    var queryParams = lpCoreUtils.assign({\n                        f: this.from,\n                        l: config.pageSize + 1\n                    }, this.getQueryParamaters());\n\n                    this.loading = true;\n\n                    //update paging info\n                    this.from = this.from + config.pageSize;\n\n                    $http.get(config.transactionsEndpoint, {\n                        data: {\n                            accountId: this.account.id || this.account.ids || ''\n                        },\n                        params: queryParams\n                    })\n                    .success(function(data) {\n                        self.errorCode = null;\n                        //need to normalize null data to empty array\n                        if(data === null || data === 'null') {\n                            data = [];\n                        }\n\n                        var newTransactions = self.preprocessTransactions(lpCoreUtils.compact(data));\n                        if (newTransactions && newTransactions.length <= config.pageSize) {\n                            self.moreAvailable = false;\n                        } else if (newTransactions) {\n                            newTransactions.pop();\n                        }\n\n                        self.transactions = self.transactions.concat(newTransactions);\n                        self.transactions = decorateTransactionsWithAccountsName(self.account, self.transactions);\n                        deferred.resolve(self.transactions);\n                    })\n                    .error(function(data) {\n                        self.errorCode = data.errorCode || 500;\n                    })\n                    ['finally'](function() {\n                        self.loading = false;\n                    });\n\n                    return deferred.promise;\n                };\n\n                /**\n                 * Loads a new set of transactions for the given account\n                 * @param account\n                 */\n                TransactionsModel.prototype.loadTransactions = function(account) {\n\n                    this.clearTransactionsList();\n\n                    this.account = account;\n                    return this.loadMoreTransactions();\n                };\n\n                /**\n                 * Enriches/updates data ready for view rendering\n                 * @param transactions\n                 * @returns {*}\n                 */\n                TransactionsModel.prototype.preprocessTransactionDetails = function(details, transaction) {\n\n                    var specialDetails = [];\n                    var customDetails = [];\n\n                    var detailsToOmit = [\n                        'location'\n                    ];\n                    var specialDetailsKeys = [\n                        'address',\n                        'merchantType',\n                        'bookingDateTime'\n                    ];\n\n                    var longValueKeys = [\n                        'transactionId'\n                    ];\n\n                    if(details) {\n                        if(lpCoreUtils.isObject(details.location)) {\n                            //special case for map data\n                            var latLong = details.location.latitude + ',' + details.location.longitude;\n                            var mapParams = [\n                                'size=' + '160x90',\n                                'center=' + latLong,\n                                'zoom=' + 12,\n                                'format=' + 'jpg',\n                                'sensor=' + false,\n                                'markers=' + encodeURIComponent('size:med|color:red|') + latLong\n                            ];\n                            details.location.mapUrl = 'http://maps.googleapis.com/maps/api/staticmap?' + mapParams.join('&');\n                        }\n                        //add date to details for convenience\n                        details.bookingDateTime = transaction.bookingDateTime;\n\n                        //NOTE: angular 1.1.5 breaks when iterating over a map with duplicate values!\n                        //need to convert to an array of objects for happy view rendering. This will be fixed in 1.2\n                        for(var key in details) {\n                            if(details.hasOwnProperty(key) && detailsToOmit.indexOf(key) < 0) {\n                                var detailData = {\n                                    name: key,\n                                    value: details[key],\n                                    longValue: longValueKeys.indexOf(key) > -1\n                                };\n                                if(specialDetailsKeys.indexOf(key) > -1) {\n                                    specialDetails.push(detailData);\n                                } else {\n                                    customDetails.push(detailData);\n                                }\n                            }\n                        }\n\n                        details.special = specialDetails;\n                        details.custom = customDetails;\n                    }\n                    return details;\n                };\n\n                /**\n                 * Enriches data with presentation logic\n                 * @param transactions\n                 * @returns {*}\n                 */\n                TransactionsModel.prototype.loadTransactionDetails = function(transaction) {\n                    var self = this;\n\n                    if (!transaction.details || lpCoreUtils.isEmpty(transaction.details)) {\n                        transaction.loading = true;\n\n                        return $http.get(config.transactionDetailsEndpoint, {\n                            params: {\n                                transactionId: transaction.id\n                            }\n                        })\n                        .then(function(response) {\n                            transaction.loading = false;\n                            transaction.details = {};\n                            return lpCoreUtils.assign(transaction.details, self.preprocessTransactionDetails(response.data, transaction));\n                        }, function(response) {\n                            transaction.loading = false;\n                            transaction.errorCode = response.data.errorCode || 500;\n                        });\n                    } else {\n                        return $q.when(transaction.details);\n                    }\n                };\n\n                TransactionsModel.prototype.updateTransactionCategory = function(transaction, categoryId) {\n                    return $http.put(config.transactionsEndpoint + '/' + transaction.id, {\n                        accountId: this.account.id,\n                        categoryId: categoryId\n                    })\n                    .success(function(data) {\n                        transaction.categoryId = categoryId;\n                    })\n                    .error(function(data) {\n                        transaction.errorCode = data.errorCode || 500;\n                    });\n                };\n\n                TransactionsModel.prototype.updateSimilarTransactionCategory = function(transaction, categoryId) {\n                    return $http.put(config.transactionsEndpoint + '/' + transaction.id, {\n                        accountId: this.account.id,\n                        categoryId: categoryId,\n                        condition: 'SIMILAR'\n                    })\n                    .success(function(data) {\n                        transaction.categoryId = categoryId;\n                    })\n                    .error(function(data) {\n                        transaction.errorCode = data.errorCode || 500;\n                    });\n                };\n\n                /**\n                 * Checks for errors while loading transactions\n                 * @returns {boolean}\n                 */\n                TransactionsModel.prototype.allowMoreResults = function() {\n                    var allowMoreResults = (!this.loading && this.moreAvailable) && !this.errorCode;\n                    return allowMoreResults;\n                };\n\n                /**\n                 * Checks for errors during download and ensures that no transactions have been loaded\n                 * @returns {boolean}\n                 */\n                TransactionsModel.prototype.noTransactionsFound = function() {\n\n                    var noTransactionsFound = (!this.loading && this.transactions.length === 0) && !this.errorCode;\n                    return noTransactionsFound;\n                };\n\n                /**\n                 * Checks whether or not there are search filters set\n                 * @returns {boolean}\n                 */\n                TransactionsModel.prototype.isSearching = function() {\n\n                    //searching if filters in not empty\n                    if(this.filters) {\n                        for(var key in this.filters) {\n                            if(this.filters.hasOwnProperty(key)) {\n                                return true;\n                            }\n                        }\n                    }\n                    return false;\n                };\n\n                return new TransactionsModel();\n            }\n\n            return {\n                setConfig: function(options) {\n                    config = lpCoreUtils(options).chain()\n                        .mapValues(lpCoreUtils.resolvePortalPlaceholders)\n                        .defaults(config)\n                        .value();\n                    return this;\n                },\n\n                getConfig: function(prop) {\n                    if (prop && lpCoreUtils.isString(prop)) {\n                        return config[prop];\n                    } else {\n                        return config;\n                    }\n                },\n\n                /**\n                 * Get preconfigured endpoint\n                 * @param  {String} endpointSrc key which need to be configured from the widget\n                 * @return {String} resolved endpoint or undefined if optional and not defined\n                 */\n                getEndpoint: function(endpointSrc) {\n                    var endpoint = this.getConfig(endpointSrc);\n\n                    if(!endpoint){\n                        lpCoreError.throwException(new Error(\n                            endpointSrc + ' is not configured.\\n' +\n                            'for more information read here:\\n' +\n                            'https://components.backbase.com/items/module-transactions#provider\\n'));\n                    }\n\n                    return endpoint;\n                },\n\n                api: API\n            };\n        };\n    };\n});\n\n\n\n/** WEBPACK FOOTER **\n ** ./scripts/providers.js\n **/"," /**\n *  ----------------------------------------------------------------\n *  Copyright © Backbase B.V.\n *  ----------------------------------------------------------------\n *  Author : Backbase R&D - Amsterdam - New York\n *  Filename : directives.js\n *  Description: Directives for transactions\n *  ----------------------------------------------------------------\n */\ndefine(function (require, exports, module) {\n\n    'use strict';\n\n     // @ngInject\n    exports.lpBalanceUpdate = function() {\n        return {\n            restrict: 'A',\n            require: 'ngModel',\n            link: function (scope, element, attrs, ngModelCtrl) {\n                element.addClass('lp-amount');\n\n                scope.$watch(function() {\n                    return ngModelCtrl.$modelValue;\n                }, function(newValue, oldValue) {\n\n                    if(newValue.id !== oldValue.id) {\n                        return;\n                    }\n\n                    //class names\n                    var cssClass = {\n                        increase: 'lp-increase-amount',\n                        decrease: 'lp-decrease-amount'\n                    };\n\n                    //time before removing class in milliseconds\n                    var removeClassTimeout = 2000;\n\n\n                    if(newValue.delta === 1) {\n\n                        //flash green\n                        element.addClass(cssClass.increase);\n                        setTimeout(function() {\n                            element.removeClass(cssClass.increase);\n                        }, removeClassTimeout);\n\n                    } else if(newValue.delta === -1) {\n\n                        //flash red\n                        element.addClass(cssClass.decrease);\n                        setTimeout(function() {\n                            element.removeClass(cssClass.decrease);\n                        }, removeClassTimeout);\n                    }\n\n                    //set delta to equal so subsequent re-renders do not trigger the animation if the accounts model has not been reloaded\n                    newValue.delta = 0;\n                });\n            }\n        };\n    };\n\n    /**\n     * Common directive used by multiple transactions widgets\n     * to apply responsive classes to the element\n     * and execute callback\n     *\n     *  Usage: <div lp-responsive-callback=\"mainCtrl.responsiveCallback(size)\">...</div>\n     */\n\n    // @ngInject\n    exports.lpResponsiveCallback = function($parse, lpUIResponsive, $timeout) {\n        function linkFn (scope, element, attrs){\n            var lpResponsiveCallback = $parse(attrs.lpResponsiveCallback);\n\n            var applyRule = function(size) {\n                return function(){\n                    element.removeClass('lp-tile-size lp-small-size lp-medium-size lp-large-size');\n                    element.addClass('lp-' + size + '-size');\n\n                    $timeout(function() {\n                        lpResponsiveCallback(scope, {size: size});\n                    });\n                };\n            };\n\n            lpUIResponsive.enable(element)\n                .rule({\n                    'max-width': 200,\n                    then: applyRule('tile')\n                })\n                .rule({\n                    'min-width': 201,\n                    'max-width': 375,\n                    then: applyRule('small')\n                })\n                .rule({\n                    'min-width': 376,\n                    'max-width': 600,\n                    then: applyRule('medium')\n                })\n                .rule({\n                    'min-width': 601,\n                    then: applyRule('large')\n                });\n        }\n\n        return {\n            restrict: 'A',\n            link: linkFn\n        };\n    };\n});\n\n\n\n/** WEBPACK FOOTER **\n ** ./scripts/directives.js\n **/"],"sourceRoot":""}