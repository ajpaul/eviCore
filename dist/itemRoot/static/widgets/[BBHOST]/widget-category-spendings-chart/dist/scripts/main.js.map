{"version":3,"sources":["webpack:///widget-category-spendings-chart/webpack/universalModuleDefinition","webpack:///widget-category-spendings-chart/scripts/main.js","webpack:///widget-category-spendings-chart/webpack/bootstrap cae2b565426d58ec58e9","webpack:///widget-category-spendings-chart/./scripts/main.js","webpack:///widget-category-spendings-chart/(webpack)/buildin/module.js","webpack:///widget-category-spendings-chart/./scripts/factories.js","webpack:///widget-category-spendings-chart/./scripts/controllers.js","webpack:///widget-category-spendings-chart/./scripts/directives.js","webpack:///widget-category-spendings-chart/./bower_components/d3/d3.js"],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE_2__","__WEBPACK_EXTERNAL_MODULE_3__","__WEBPACK_EXTERNAL_MODULE_4__","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","__WEBPACK_AMD_DEFINE_RESULT__","run","lpWidget","lpCoreBus","model","name","publish","$inject","base","core","ui","deps","createModule","controller","directive","undefined","webpackPolyfill","deprecate","paths","children","CategorySpendingsResource","$resource","lpCoreUtils","spendingsDataSrc","resolvePortalPlaceholders","getPreference","get","method","CategoriesResource","categoriesDataSrc","isArray","CategorySpendingsChartCtrl","$scope","$q","bus","utils","accountId","fromDate","toDate","viewLoading","missingData","showChart","$watchCollection","newVals","oldVals","updateData","all","spendings","accountIds","start","end","$promise","categories","then","result","categoriesSpendings","length","error","subscribe","params","accounts","forEach","account","push","join","d3","$","window","jQuery","categorySpendingsChart","restrict","replace","template","link","$element","wrapText","textNode","text","selectAll","remove","textNodeWidth","attr","tspanCount","tspan","append","words","split","lineHeight","slice","i","node","getComputedTextLength","x","dy","radiansToDegree","radians","Math","PI","categoryArrow","data","categoryArc","svg","filter","arc","categoryId","datum","select","class","transform","innerRadius","d","fill","color","rotateBy","endAngle","startAngle","clean","setCategoryInfo","historicalChangeFactor","parseFloat","amount","toFixed","abs","classed","up","down","comparisonArrow","refX","refY","markerWidth","markerHeight","orient","marker-end","arrowUp","arrowDown","arrow","totalFraction","initialize","svgEl","width","height","cx","cy","r","innerLabels","y","comparisonGroup","onArcClick","update","spending","partyCategories","vCategories","totalData","spendingByCategory","sort","a","b","each","index","categorySpending","category","grep","vCategory","amountFn","scale","linear","domain","min","max","range","pie","layout","value","enter","arcGenerator","style","on","exit","radius","outerRadius","vSpending","__WEBPACK_AMD_DEFINE_FACTORY__","d3_ascending","NaN","d3_number","d3_numeric","isNaN","d3_bisector","compare","left","lo","hi","arguments","mid","right","d3_zipLength","d3_range_integerScale","k","d3_class","ctor","properties","key","Object","defineProperty","prototype","enumerable","d3_Map","_","create","d3_map_escape","d3_map_proto","d3_map_zero","d3_map_unescape","d3_map_has","d3_map_remove","d3_map_keys","keys","d3_map_size","size","d3_map_empty","d3_Set","d3_rebind","target","source","apply","d3_vendorSymbol","object","charAt","toUpperCase","n","d3_vendorPrefixes","prefixName","d3_noop","d3_dispatch","d3_dispatch_event","dispatch","event","l","z","listeners","listenerByName","listener","indexOf","concat","set","d3_eventPreventDefault","preventDefault","d3_eventSource","s","e","sourceEvent","d3_eventDispatch","of","thiz","argumentz","e1","e0","type","d3_selection","groups","d3_subclass","d3_selectionPrototype","d3_selection_selector","selector","d3_select","d3_selection_selectorAll","d3_selectAll","d3_selection_attr","attrNull","removeAttribute","attrNullNS","removeAttributeNS","space","local","attrConstant","setAttribute","attrConstantNS","setAttributeNS","attrFunction","attrFunctionNS","ns","qualify","d3_collapse","trim","d3_selection_classedRe","RegExp","requote","d3_selection_classes","d3_selection_classed","classedConstant","classedFunction","map","d3_selection_classedName","re","classList","add","getAttribute","lastIndex","test","d3_selection_style","priority","styleNull","removeProperty","styleConstant","setProperty","styleFunction","d3_selection_property","propertyNull","propertyConstant","propertyFunction","d3_selection_creator","ownerDocument","createElementNS","namespaceURI","d3_selection_dataNode","__data__","d3_selection_filter","d3_selectMatches","d3_selection_sortComparator","comparator","d3_selection_each","callback","j","group","d3_selection_enter","selection","d3_selection_enterPrototype","d3_selection_enterInsertBefore","i0","j0","d3_selection_interrupt","lock","__transition__","active","d3_selection_on","capture","onRemove","removeEventListener","onAdd","wrap","d3_array","addEventListener","removeAll","match","d3_selection_onListener","d3_selection_onFilters","d3_selection_onFilter","o","related","relatedTarget","compareDocumentPosition","d3_event_dragSuppress","d3_event_dragId","click","w","d3_window","d3_event_dragSelect","d3_documentElement","suppressClick","off","setTimeout","d3_mousePoint","container","changedTouches","ownerSVGElement","createSVGPoint","point","d3_mouse_bug44083","scrollX","scrollY","position","top","margin","padding","border","ctm","getScreenCTM","f","pageX","pageY","clientX","clientY","matrixTransform","inverse","rect","getBoundingClientRect","clientLeft","clientTop","d3_behavior_dragTouchId","identifier","d3_behavior_dragTouchSubject","d3_behavior_dragMouseSubject","d3_sgn","d3_cross2d","d3_acos","π","acos","d3_asin","halfπ","asin","d3_sinh","exp","d3_cosh","d3_tanh","d3_haversin","sin","d3_color","d3_hsl","h","d3_rgb_parse","d3_rgb_hsl","d3_hsl_rgb","v","m1","m2","vv","round","d3_rgb","d3_hcl","d3_lab","d3_lab_hcl","d3_rgb_lab","rgb","g","d3_hcl_lab","cos","d3_radians","d3_lab_rgb","d3_lab_xyz","d3_lab_X","d3_lab_Y","d3_lab_Z","d3_xyz_rgb","atan2","d3_degrees","sqrt","d3_xyz_lab","pow","d3_rgbNumber","d3_rgbString","d3_rgb_hex","toString","format","hsl","exec","d3_rgb_parseNumber","d3_rgb_names","parseInt","d3_rgb_xyz","d3_functor","d3_identity","d3_xhrType","response","url","mimeType","d3_xhr","respond","status","request","d3_xhrHasResponse","xhr","load","headers","XMLHttpRequest","responseType","XDomainRequest","onload","onerror","onreadystatechange","readyState","onprogress","progress","header","toLowerCase","send","open","setRequestHeader","overrideMimeType","beforesend","abort","rebind","d3_xhr_fixCallback","responseText","d3_timer_step","now","d3_timer_mark","delay","d3_timer_sweep","isFinite","clearTimeout","d3_timer_timeout","d3_timer_interval","d3_timer_frame","Date","d3_timer_active","d3_timer_queueHead","t","t0","t1","time","Infinity","d3_timer_queueTail","d3_format_precision","ceil","log","LN10","d3_formatPrefix","symbol","d3_locale_numberFormat","locale","locale_decimal","decimal","locale_thousands","thousands","locale_grouping","grouping","locale_currency","currency","formatGroup","substring","reverse","specifier","d3_format_re","align","sign","zfill","comma","precision","prefix","suffix","integer","exponent","d3_format_types","d3_format_typeDefault","zcomma","fullSuffix","negative","unit","formatPrefix","before","after","lastIndexOf","Array","d3_date_utc","UTC","d3_time_interval","step","number","date","d0","d1","offset","d3_date","dt","times","range_utc","utc","floor","d3_time_interval_utc","d3_locale_timeFormat","d3_time_format","string","charCodeAt","d3_time_formatPads","d3_time_formats","parse","H","M","S","L","Z","d3_time_parse","localZ","setFullYear","W","getDay","U","setHours","d3_time_parsers","d3_time_parseWeekdayAbbrev","d3_time_dayAbbrevRe","d3_time_dayAbbrevLookup","d3_time_parseWeekday","d3_time_dayRe","d3_time_dayLookup","d3_time_parseMonthAbbrev","d3_time_monthAbbrevRe","d3_time_monthAbbrevLookup","d3_time_parseMonth","d3_time_monthRe","d3_time_monthLookup","d3_time_parseLocaleFull","d3_time_parseLocaleDate","d3_time_parseLocaleTime","X","d3_time_parseAmPm","d3_time_periodLookup","locale_dateTime","dateTime","locale_date","locale_time","locale_periods","periods","locale_days","days","locale_shortDays","shortDays","locale_months","months","locale_shortMonths","shortMonths","multi","d3_time_formatMulti","d3_time_formatRe","d3_time_formatLookup","A","getMonth","B","d3_time_formatPad","getDate","getHours","I","d3_time","dayOfYear","getMilliseconds","getMinutes","getSeconds","sundayOfYear","mondayOfYear","getFullYear","Y","d3_time_zone","%","d3_time_parseDay","d3_time_parseHour24","d3_time_parseDayOfYear","d3_time_parseMilliseconds","d3_time_parseMonthNumber","d3_time_parseMinutes","d3_time_parseSeconds","d3_time_parseWeekNumberSunday","d3_time_parseWeekdayNumber","d3_time_parseWeekNumberMonday","d3_time_parseYear","d3_time_parseFullYear","d3_time_parseZone","d3_time_parseLiteralPercent","names","d3_time_numberRe","d3_time_expandYear","getTimezoneOffset","zs","zh","zm","d3_time_percentRe","formats","d3_adder","d3_adderSum","bv","av","d3_geo_streamGeometry","geometry","d3_geo_streamGeometryType","hasOwnProperty","d3_geo_streamLine","coordinates","closed","coordinate","lineStart","lineEnd","d3_geo_streamPolygon","polygonStart","polygonEnd","d3_geo_areaRingStart","nextPoint","λ","φ","dλ","λ0","sdλ","adλ","cosφ","sinφ","sinφ0","u","cosφ0","d3_geo_areaRingSum","λ00","φ00","d3_geo_area","d3_geo_cartesian","spherical","d3_geo_cartesianDot","d3_geo_cartesianCross","d3_geo_cartesianAdd","d3_geo_cartesianScale","vector","d3_geo_cartesianNormalize","d3_geo_spherical","cartesian","d3_geo_sphericalEqual","ε","d3_geo_centroidPoint","d3_geo_centroidPointXYZ","d3_geo_centroidW0","d3_geo_centroidX0","d3_geo_centroidY0","d3_geo_centroidZ0","d3_geo_centroidLineStart","y0","z0","x0","d3_geo_centroidW1","d3_geo_centroidX1","d3_geo_centroidY1","d3_geo_centroidZ1","d3_geo_centroid","d3_geo_centroidLineEnd","d3_geo_centroidRingStart","cz","d3_geo_centroidX2","d3_geo_centroidY2","d3_geo_centroidZ2","d3_true","d3_geo_clipPolygon","segments","clipStartInside","interpolate","subject","clip","segment","p0","p1","d3_geo_clipPolygonIntersection","d3_geo_clipPolygonLinkCircular","entry","points","current","isSubject","array","other","d3_geo_clip","pointVisible","clipLine","clipStart","rotate","pointLine","line","pointRing","ring","ringListener","ringStart","ringEnd","ringSegments","buffer","pop","polygon","polygonStarted","shift","d3_geo_clipSegmentLength1","rotatedClipStart","invert","merge","d3_geo_pointInPolygon","d3_geo_clipSort","sphere","d3_geo_clipBufferListener","lines","rejoin","d3_geo_clipAntimeridianLine","φ0","sλ0","λ1","φ1","sλ1","d3_geo_clipAntimeridianIntersect","cosφ1","sinλ0_λ1","atan","d3_geo_clipAntimeridianInterpolate","from","to","direction","meridian","parallel","meridianNormal","polarAngle","winding","reset","point0","antimeridian","τ","intersection","φarc","d3_geo_clipCircle","visible","cr","c0","v0","v00","point2","point1","smallRadius","code","intersect","notHemisphere","two","pa","pb","n1","n2","n2n2","n1n2","determinant","c1","c2","n1xn2","uu","t2","q","δλ","polar","q1","d3_geo_circleInterpolate","d3_geom_clipLine","x1","y1","ax","ay","bx","by","dx","d3_geo_clipExtent","corner","comparePoints","ca","cb","insidePolygon","wn","a1","linePoint","first","v_","x_","y_","x__","y__","v__","bufferListener","d3_geo_clipExtentMAX","listener_","inside","d3_geo_compose","compose","d3_geo_conic","projectAt","d3_geo_projectionMutator","parallels","d3_geo_conicEqualArea","forward","ρ","C","ρ0","ρ0_y","d3_geo_pathAreaRingStart","d3_geo_pathAreaPolygon","x00","y00","d3_geo_pathArea","d3_geo_pathBoundsPoint","d3_geo_pathBoundsX0","d3_geo_pathBoundsX1","d3_geo_pathBoundsY0","d3_geo_pathBoundsY1","d3_geo_pathBuffer","pointCircle","pointLineStart","stream","lineEndPolygon","d3_geo_pathBufferCircle","pointRadius","d3_geo_pathCentroidPoint","d3_geo_pathCentroidLineStart","d3_geo_pathCentroid","d3_geo_pathCentroidLineEnd","d3_geo_pathCentroidRingStart","d3_geo_pathContext","context","moveTo","lineTo","closePath","d3_geo_resample","project","resample","maxDepth","resampleRecursive","resampleNone","d3_geo_transformPoint","resampleLineTo","a0","b0","ringPoint","a00","b00","c00","b1","depth","d2","δ2","φ2","λ2","x2","y2","dx2","dy2","dz","cosMinDistance","d3_geo_pathProjectStream","d3_geo_projectionRadians","d3_geo_transform","d3_geo_projection","projection","projectRotate","δx","δy","d3_geo_rotation","δφ","δγ","center","invalidate","valid","projectResample","preclip","d3_geo_clipAntimeridian","postclip","clipAngle","clipExtent","output","translate","d3_geo_equirectangular","d3_geo_identityRotation","d3_geo_rotationλ","d3_geo_rotationφγ","d3_geo_forwardRotationλ","rotation","cosδφ","sinδφ","cosδγ","sinδγ","sr","d3_geo_circleAngle","angle","d3_geo_graticuleX","d3_geo_graticuleY","d3_source","d3_target","d3_geo_interpolate","cy0","sy0","cy1","sy1","kx0","ky0","kx1","ky1","distance","d3_geo_lengthLineStart","cosΔλ","d3_geo_lengthSum","d3_geo_length","d3_geo_azimuthal","azimuthal","cosλ","sinc","cosc","d3_geo_conicConformal","F","tan","d3_geo_mercator","d3_geo_conicEquidistant","G","d3_geo_mercatorProjection","clipAuto","d3_geo_transverseMercator","d3_geom_pointX","d3_geom_pointY","d3_geom_hullUpper","hull","hs","d3_geom_hullOrder","d3_geom_polygonInside","d3_geom_polygonIntersect","x3","x21","x43","y3","y21","y43","ua","d3_geom_polygonClosed","d3_geom_voronoiBeach","d3_geom_voronoiRedBlackNode","edge","site","circle","d3_geom_voronoiCreateBeach","beach","d3_geom_voronoiBeachPool","d3_geom_voronoiDetachBeach","d3_geom_voronoiDetachCircle","d3_geom_voronoiBeaches","d3_geom_voronoiRemoveBeach","vertex","previous","P","next","N","disappearing","lArc","unshift","rArc","iArc","nArcs","d3_geom_voronoiSetEdgeEnd","d3_geom_voronoiCreateEdge","d3_geom_voronoiAttachCircle","d3_geom_voronoiAddBeach","dxl","dxr","directrix","d3_geom_voronoiLeftBreakPoint","d3_geom_voronoiRightBreakPoint","R","newArc","insert","lSite","rSite","hb","hc","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","d3_geom_voronoiCell","edges","d3_geom_voronoiCloseCells","extent","cell","iHalfEdge","halfEdges","nHalfEdges","cells","d3_geom_voronoiCells","iCell","prepare","splice","d3_geom_voronoiHalfEdge","d3_geom_voronoiCreateBorderEdge","d3_geom_voronoiHalfEdgeOrder","d3_geom_voronoiCircle","cSite","ε2","ha","d3_geom_voronoiCirclePool","d3_geom_voronoiCircles","d3_geom_voronoiFirstCircle","d3_geom_voronoiClipEdges","d3_geom_voronoiEdges","d3_geom_voronoiConnectEdge","vb","fm","fb","va","lx","ly","rx","ry","fx","fy","d3_geom_voronoiEdge","d3_geom_voronoiRedBlackTree","d3_geom_voronoiRedBlackRotateLeft","tree","parent","d3_geom_voronoiRedBlackRotateRight","d3_geom_voronoiRedBlackFirst","d3_geom_voronoi","sites","bbox","d3_geom_voronoiVertexOrder","diagram","d3_geom_voronoiTriangleArea","d3_geom_quadtreeCompatX","d3_geom_quadtreeCompatY","d3_geom_quadtreeNode","leaf","nodes","d3_geom_quadtreeVisit","sx","sy","d3_interpolateRgb","ar","ag","ab","br","bg","bb","d3_interpolateObject","d3_interpolate","d3_interpolateNumber","d3_interpolateString","am","bm","bs","bi","d3_interpolate_numberA","d3_interpolate_numberB","interpolators","d3_interpolateArray","na","nb","n0","d3_ease_clamp","d3_ease_reverse","d3_ease_reflect","d3_ease_quad","d3_ease_cubic","d3_ease_cubicInOut","t3","d3_ease_poly","d3_ease_sin","d3_ease_exp","d3_ease_circle","d3_ease_elastic","d3_ease_back","d3_ease_bounce","d3_interpolateHcl","hcl","ah","ac","al","bh","bc","bl","d3_interpolateHsl","as","d3_interpolateLab","lab","aa","ba","d3_interpolateRound","d3_transform","r0","r1","kx","d3_transformNormalize","kz","d3_transformDot","ky","d3_transformCombine","skew","d3_interpolateTransform","ta","tb","ra","rb","wa","wb","ka","kb","d3_uninterpolateNumber","d3_uninterpolateClamp","d3_layout_bundlePath","lca","d3_layout_bundleLeastCommonAncestor","d3_layout_bundleAncestors","ancestors","aNodes","bNodes","aNode","bNode","sharedNode","d3_layout_forceDragstart","fixed","d3_layout_forceDragend","d3_layout_forceMouseover","px","py","d3_layout_forceMouseout","d3_layout_forceAccumulate","quad","alpha","charges","charge","random","pointCharge","d3_layout_hierarchyRebind","hierarchy","links","d3_layout_hierarchyLinks","d3_layout_hierarchyVisitBefore","d3_layout_hierarchyVisitAfter","nodes2","d3_layout_hierarchyChildren","d3_layout_hierarchyValue","d3_layout_hierarchySort","child","d3_layout_stackX","d3_layout_stackY","d3_layout_stackOut","d3_layout_stackOrderDefault","d3_layout_stackOffsetZero","d3_layout_stackMaxIndex","d3_layout_stackReduceSum","reduce","d3_layout_stackSum","d3_layout_histogramBinSturges","values","d3_layout_histogramBinFixed","LN2","d3_layout_histogramRange","d3_layout_packSort","d3_layout_packInsert","_pack_next","_pack_prev","d3_layout_packSplice","d3_layout_packIntersects","dr","d3_layout_packSiblings","bound","xMin","xMax","yMin","yMax","d3_layout_packLink","d3_layout_packPlace","isect","s1","s2","d3_layout_packUnlink","d3_layout_packTransform","db","da","dc","d3_layout_treeSeparation","d3_layout_treeLeft","d3_layout_treeRight","d3_layout_treeMove","wm","wp","change","d3_layout_treeShift","d3_layout_treeAncestor","vim","ancestor","d3_layout_clusterY","d3_layout_clusterX","d3_layout_clusterLeft","d3_layout_clusterRight","d3_layout_treemapPadNull","d3_layout_treemapPad","d3_scaleExtent","stop","d3_scaleRange","rangeExtent","d3_scale_bilinear","uninterpolate","d3_scale_nice","nice","i1","d3_scale_niceStep","d3_scale_niceIdentity","d3_scale_polylinear","bisect","d3_scale_linear","clamp","rescale","input","Number","rangeRound","ticks","d3_scale_linearTicks","tickFormat","d3_scale_linearTickFormat","d3_scale_linearNice","copy","d3_scale_linearRebind","d3_scale_linearTickRange","span","err","d3_scale_linearPrecision","d3_scale_linearFormatPrecision","d3_scale_linearFormatSignificant","d3_scale_log","positive","niced","d3_scale_logNiceNegative","d3_scale_logFormat","d3_scale_pow","powp","d3_scale_powPow","powb","d3_scale_ordinal","ranger","steps","rangeBand","xi","has","rangePoints","rangeBands","outerPadding","rangeRoundBands","d3_scale_quantile","thresholds","quantile","quantiles","invertExtent","d3_scale_quantize","d3_scale_threshold","d3_scale_identity","identity","d3_svg_arcInnerRadius","d3_svg_arcOuterRadius","d3_svg_arcStartAngle","d3_svg_arcEndAngle","d3_svg_line","tension","defined","d3_svg_lineLinear","interpolateKey","d3_svg_lineInterpolators","d3_svg_lineLinearClosed","d3_svg_lineStep","path","d3_svg_lineStepBefore","d3_svg_lineStepAfter","d3_svg_lineCardinalOpen","d3_svg_lineHermite","d3_svg_lineCardinalTangents","d3_svg_lineCardinalClosed","d3_svg_lineCardinal","tangents","pi","lp","p2","d3_svg_lineBasis","d3_svg_lineDot4","d3_svg_lineBasisBezier3","d3_svg_lineBasisBezier","d3_svg_lineBasisOpen","d3_svg_lineBasisClosed","d3_svg_lineBundle","d3_svg_lineBasisBezier1","d3_svg_lineBasisBezier2","d3_svg_lineSlope","d3_svg_lineFiniteDifferences","d3_svg_lineMonotoneTangents","d3_svg_lineMonotone","d3_svg_lineRadial","d3_svg_arcOffset","d3_svg_area","area","points1","interpolateReverse","points0","fx0","fy0","fx1","fy1","d3_svg_chordRadius","d3_svg_diagonalProjection","d3_svg_diagonalRadialProjection","d3_svg_symbolSize","d3_svg_symbolType","d3_svg_symbolCircle","d3_transition","d3_transitionPrototype","d3_transition_tween","tween","d3_transition_text","textContent","d3_transitionNode","inherit","count","transition","ease","duration","timer","elapsed","tweened","tick","d3_svg_axisX","d3_svg_axisY","d3_time_formatIsoNative","toISOString","d3_time_scale","methods","tickMethod","d3_time_scaleSteps","year","d3_time_scaleMilliseconds","d3_time_scaleDate","interval","skip","skipped","d3_json","JSON","d3_html","d3_document","createRange","selectNode","body","createContextualFragment","version","d3_arraySlice","list","document","documentElement","childNodes","nodeType","createElement","d3_element_prototype","Element","d3_element_setAttribute","d3_element_setAttributeNS","d3_style_prototype","CSSStyleDeclaration","d3_style_setProperty","ascending","descending","sum","mean","median","numbers","d3_bisect","bisectLeft","bisectRight","bisector","shuffle","permute","indexes","permutes","pairs","zip","zips","transpose","matrix","entries","arrays","merged","Error","empty","nest","mapType","rollup","sortValues","keyValue","setter","valuesByKey","sortKey","sortKeys","keyMap","order","behavior","d3_requote_re","__proto__","property","querySelector","querySelectorAll","d3_selectMatcher","matches","Sizzle","matchesSelector","d3_selectionRoot","subgroup","subnode","subgroups","parentNode","d3_nsPrefix","xhtml","xlink","xml","xmlns","getAttributeNS","contains","getComputedStyle","getPropertyValue","html","innerHTML","appendChild","insertBefore","removeChild","bind","groupData","nodeData","updateNodes","enterNodes","exitNodes","nodeByKeyValue","keyValues","nextSibling","args","upgroup","d3_transitionInheritId","d3_transitionId","d3_transitionInherit","interrupt","mouseenter","mouseleave","mouse","navigator","userAgent","touch","touches","drag","mousedown","touchstart","dragstart","move","moved","position1","dragId","position0","dragged","dragOffset","ended","dragSubject","dragName","dragRestore","that","origin","SQRT2","ρ2","ρ4","interpolateZoom","coshr0","w0","ux0","uy0","ux1","uy1","w1","zoom","mousedowned","d3_behavior_zoomWheel","mousewheeled","dblclicked","touchstarted","location","view","scaleTo","scaleExtent","translateTo","zoomstarted","zoomed","zoomended","location0","mousemove","mouseup","relocate","scale0","locations0","started","touchmove","touchend","targets","changed","touchtime","distance0","l0","l1","distance1","scale1","zoomName","mousewheelTimer","translate0","center0","d3_behavior_zoomDelta","shiftKey","d3_behavior_zoomInfinity","view1","__chart__","deltaY","deltaMode","wheelDelta","detail","d3_hslPrototype","brighter","darker","d3_hclPrototype","d3_lab_K","d3_labPrototype","d3_rgbPrototype","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","functor","dsv","delimiter","row","typedResponse","formatRow","formatValue","reFormat","delimiterCode","parseRows","Function","stringify","token","EOF","eol","EOL","rows","formatRows","fieldSet","fields","field","csv","tsv","flush","d3_formatPrefixes","String","fromCharCode","toPrecision","toExponential","getUTCDate","getUTCDay","getUTCFullYear","getUTCHours","getUTCMilliseconds","getUTCMinutes","getUTCMonth","getUTCSeconds","getTime","valueOf","setDate","d3_time_prototype","setUTCDate","setDay","setUTCDay","setUTCFullYear","setUTCHours","setMilliseconds","setUTCMilliseconds","setMinutes","setUTCMinutes","setMonth","setUTCMonth","setSeconds","setUTCSeconds","setTime","day","years","week","sunday","weeks","weekOfYear","-","0","numberFormat","timeFormat","d3_locale_enUS","geo","d3_adderTemp","d3_geo_streamObjectType","Feature","feature","FeatureCollection","features","Sphere","Point","MultiPoint","LineString","MultiLineString","Polygon","MultiPolygon","GeometryCollection","geometries","d3_geo_areaSum","bounds","ranges","normal","equatorial","inflection","λ_","λi","φi","dλSum","λ__","φ__","compareRanges","withinRange","best","centroid","conicEqualArea","raw","albers","albersUsa","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","lower48Stream","alaskaStream","hawaiiStream","d3_geo_pathAreaSum","d3_geo_pathBounds","contextStream","cacheStream","projectStream","projectionMutator","equirectangular","Δλ","sinΔλ","sinφ1","graticule","X0","DX","X1","Y0","DY","Y1","outline","majorExtent","minorExtent","majorStep","minorStep","greatArc","source_","target_","d3_geo_azimuthalEqualArea","cosλcosφ","azimuthalEqualArea","d3_geo_azimuthalEquidistant","azimuthalEquidistant","conicConformal","conicEquidistant","d3_geo_gnomonic","gnomonic","mercator","d3_geo_orthographic","orthographic","d3_geo_stereographic","stereographic","transverseMercator","geom","vertices","flippedPoints","upper","lower","skipLeft","skipRight","d3_geom_polygonPrototype","grandpa","uncle","sibling","voronoi","polygons","d3_geom_voronoiClipExtent","triangles","s0","delaunay","quadtree","nx","ny","insertChild","nPoint","bottom","xs","ys","x1_","y1_","x2_","y2_","compat","visit","interpolateRgb","interpolateObject","interpolateNumber","interpolateString","interpolateArray","d3_ease_default","d3_ease","poly","cubic","elastic","back","bounce","d3_ease_mode","in","out","in-out","out-in","interpolateHcl","interpolateHsl","interpolateLab","interpolateRound","baseVal","consolidate","d3_transformIdentity","interpolateTransform","bundle","chord","relayout","groupSums","groupIndex","subgroupIndex","chords","sortGroups","sortSubgroups","di","dj","subindex","sortChords","resort","force","repulse","dw","dn","theta2","chargeDistance2","dragmove","resume","distances","strengths","friction","linkDistance","d3_layout_forceLinkDistance","linkStrength","d3_layout_forceLinkStrength","d3_layout_forceChargeDistance2","gravity","weight","chargeDistance","theta","dimension","neighbors","candidates","stack","childs","revalue","partition","d3_layout_pieSortByValue","arcs","series","orders","offsets","d3_layout_stackOrders","d3_layout_stackOffsets","inside-out","sums","tops","bottoms","default","silhouette","wiggle","s3","o0","expand","zero","histogram","bin","bins","valuer","binner","frequency","pack","root0","root1","wrapTree","firstWalk","secondWalk","nodeSize","sizeNode","tx","separation","node1","queue","siblings","midpoint","apportion","vip","vop","vom","sip","sop","sim","som","cluster","previousNode","treemap","squarify","score","pad","remaining","mode","worst","stickify","rmax","rmin","ratio","stickies","sticky","padFunction","padConstant","µ","σ","logNormal","bates","irwinHall","ordinal","category10","d3_category10","category20","d3_category20","category20b","d3_category20b","category20c","d3_category20c","quantize","threshold","df","d3_svg_arcMax","linear-closed","step-before","step-after","basis","basis-open","basis-closed","cardinal","cardinal-open","cardinal-closed","monotone","radial","equals","curve","self","diagonal","p3","projection_","d3_svg_symbols","cross","diamond","d3_svg_symbolTan30","square","triangle-down","d3_svg_symbolSqrt3","triangle-up","symbolTypes","subnodes","nameNS","attrTween","attrTweenNS","styleString","styleTween","inheritId","id0","id1","axis","tickTransform","tickValues","tickArguments_","tickFormat_","tickEnter","tickExit","tickUpdate","tickSpacing","innerTickSize","tickPadding","pathUpdate","lineEnter","lineUpdate","textEnter","textUpdate","outerTickSize","d3_svg_axisDefaultOrient","d3_svg_axisOrients","tickSize","tickSubdivide","brush","brushstart","background","resize","resizes","d3_svg_brushCursor","gUpdate","backgroundUpdate","redrawX","redrawY","redraw","xExtent","yExtent","keydown","keyCode","dragging","keyup","brushmove","altKey","resizingX","move1","resizingY","event_","yClamp","xClamp","yExtentDomain","xExtentDomain","brushend","eventTarget","resizing","ex","ey","d3_svg_brushResizes","extent1","extent0","yi","clear","nw","ne","se","sw","d3_time_formatUtc","d3_time_formatIso","iso","second","seconds","minute","minutes","hour","timezone","hours","month","d3_time_scaleLocalMethods","d3_time_scaleLocalFormat","d3_time_scaleUtcMethods","d3_time_scaleUtcFormat","json","responseXML"],"mappings":"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","file":"scripts/main.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"base\"), require(\"core\"), require(\"ui\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"base\", \"core\", \"ui\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"widget-category-spendings-chart\"] = factory(require(\"base\"), require(\"core\"), require(\"ui\"));\n\telse\n\t\troot[\"widget-category-spendings-chart\"] = factory(root[\"base\"], root[\"core\"], root[\"ui\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_3__, __WEBPACK_EXTERNAL_MODULE_4__) {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"base\"), require(\"core\"), require(\"ui\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"base\", \"core\", \"ui\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"widget-category-spendings-chart\"] = factory(require(\"base\"), require(\"core\"), require(\"ui\"));\n\telse\n\t\troot[\"widget-category-spendings-chart\"] = factory(root[\"base\"], root[\"core\"], root[\"ui\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_3__, __WEBPACK_EXTERNAL_MODULE_4__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n\n\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(module) {!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require, exports, module) {\n\t    'use strict';\n\n\t    run.$inject = [\"lpWidget\", \"lpCoreBus\"];\n\t    module.name = 'widget-category-spendings-chart';\n\n\t    var base = __webpack_require__(2);\n\t    var core = __webpack_require__(3);\n\t    var ui = __webpack_require__(4);\n\n\t    var deps = [\n\t        core.name,\n\t        ui.name\n\t    ];\n\n\t    // @ngInject\n\t    function run(lpWidget, lpCoreBus) {\n\t        if (lpWidget && lpWidget.model && lpWidget.model.name) {\n\t            lpCoreBus.publish('cxp.item.loaded', { id: lpWidget.model.name });\n\t        }\n\t    }\n\n\t    module.exports = base.createModule(module.name, deps)\n\t        .factory(__webpack_require__(5))\n\t        .controller(__webpack_require__(6))\n\t        .directive(__webpack_require__(7))\n\t        .run(run);\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)(module)))\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function(module) {\r\n\t\tif(!module.webpackPolyfill) {\r\n\t\t\tmodule.deprecate = function() {};\r\n\t\t\tmodule.paths = [];\r\n\t\t\t// module.parent = undefined by default\r\n\t\t\tmodule.children = [];\r\n\t\t\tmodule.webpackPolyfill = 1;\r\n\t\t}\r\n\t\treturn module;\r\n\t}\r\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_4__;\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/**\n\t * Factories\n\t * @module factories\n\t */\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require, exports) {\n\n\t    'use strict';\n\n\t    // @ngInject\n\t    exports.CategorySpendingsResource = function($resource, lpWidget, lpCoreUtils) {\n\t        var spendingsDataSrc = lpCoreUtils.resolvePortalPlaceholders(lpWidget.getPreference('categorySpendingDataSrc'));\n\t        return $resource(spendingsDataSrc, null, {\n\t            'get': {method: 'GET'}\n\t        });\n\t    };\n\t    exports.CategorySpendingsResource.$inject = [\"$resource\", \"lpWidget\", \"lpCoreUtils\"];\n\n\t    // @ngInject\n\t    exports.CategoriesResource = function($resource, lpWidget, lpCoreUtils) {\n\t        var categoriesDataSrc = lpCoreUtils.resolvePortalPlaceholders(lpWidget.getPreference('categoriesDataSrc'));\n\t        return $resource(categoriesDataSrc, null, {\n\t            'get': {method: 'GET', isArray: true}\n\t        });\n\t    };\n\t    exports.CategoriesResource.$inject = [\"$resource\", \"lpWidget\", \"lpCoreUtils\"];\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/**\n\t * Controllers\n\t * @module controllers\n\t */\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require, exports) {\n\n\t    'use strict';\n\n\t    // @ngInject\n\t    exports.CategorySpendingsChartCtrl = function($scope, $q, CategorySpendingsResource, CategoriesResource, lpCoreBus, lpCoreUtils) {\n\t        var bus = lpCoreBus;\n\t        var utils = lpCoreUtils;\n\n\t        $scope.accountId = null;\n\t        $scope.fromDate = null;\n\t        $scope.toDate = null;\n\n\t        $scope.viewLoading = true;\n\t        $scope.missingData = false;\n\t        $scope.showChart = false;\n\n\t        $scope.$watchCollection('[viewLoading,missingData]', function(newVals, oldVals) {\n\t            var viewLoading = newVals[0];\n\t            var missingData = newVals[1];\n\t            $scope.showChart = !viewLoading && !missingData;\n\t        });\n\n\t        /**\n\t         * Updates both categories and spending data, based on changed\n\t         * query values for CategorySpendingsResource\n\t         */\n\t        $scope.updateData = function() {\n\t            $q.all({\n\t                spendings: CategorySpendingsResource.get({\n\t                        accountIds: $scope.accountId,\n\t                        start: $scope.fromDate,\n\t                        end: $scope.toDate\n\t                    }).$promise,\n\t                categories: CategoriesResource.get().$promise\n\t            }).then(function(result) {\n\t                if(result.spendings.categoriesSpendings.length === 0) {\n\t                    $scope.missingData = true;\n\t                    $scope.viewLoading = false;\n\t                    return;\n\t                }\n\n\t                $scope.viewLoading = false;\n\t                $scope.missingData = false;\n\n\t                bus.publish('launchpad-retail.spendingDataUpdated', {\n\t                    spendings: result.spendings,\n\t                    categories: result.categories\n\t                });\n\t            }, function(error) {\n\t                $scope.viewLoading = false;\n\t                $scope.missingData = true;\n\t            });\n\t        };\n\n\t        //Listen for user account selection\n\t        bus.subscribe('launchpad-retail.accountSelected', function(params) {\n\t            $scope.accountId = params.accountId;\n\t            $scope.updateData();\n\t        });\n\n\t        //Listen for user accounts data load\n\t        bus.subscribe('launchpad-retail.accountsLoaded', function(accounts) {\n\t            var accountIds = [];\n\n\t            utils.forEach(accounts, function(account) {\n\t                accountIds.push(account.id);\n\t            });\n\n\t            $scope.accountId = accountIds.join(',');\n\t            $scope.updateData();\n\t        });\n\n\t        //Listen for transaction filtering by date\n\t        bus.subscribe('launchpad-retail.transactionsDateSearch', function(params) {\n\t            $scope.fromDate = params.fromDate;\n\t            $scope.toDate = params.toDate;\n\t            $scope.updateData();\n\t        });\n\t    };\n\t    exports.CategorySpendingsChartCtrl.$inject = [\"$scope\", \"$q\", \"CategorySpendingsResource\", \"CategoriesResource\", \"lpCoreBus\", \"lpCoreUtils\"];\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/**\n\t * Directives\n\t * @module directives\n\t */\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require, exports) {\n\n\t    'use strict';\n\n\t    var d3 = __webpack_require__(8);\n\t    var $ = window.jQuery;\n\n\t    // @ngInject\n\t    exports.categorySpendingsChart = function(lpCoreBus) {\n\t        var bus = lpCoreBus;\n\n\t        return {\n\t            restrict: 'EA',\n\t            replace: true,\n\t            template: '<svg class=\"category-spendings-chart\" width=\"350\" height=\"350\"></svg>',\n\t            link: function($scope, $element) {\n\t                var spendings, categories = null;\n\t                var width = 350;\n\t                var height = 350;\n\t                var radius = Math.min(width, height / 2);\n\t                var innerRadius = radius * 0.55;\n\t                var outerRadius = radius;\n\t                var arcGenerator = d3.svg.arc()\n\t                                .outerRadius(outerRadius)\n\t                                .innerRadius(innerRadius);\n\t                var svg;\n\n\t                function wrapText(textNode, text) {\n\t                    textNode.selectAll('tspan').remove();\n\n\t                    var textNodeWidth = textNode.attr('width');\n\t                    var tspanCount = 1;\n\t                    var tspan = textNode.append('tspan');\n\t                    var words = text.split(/\\s+/);\n\t                    var lineHeight = 20;\n\n\t                    if(words.length === 1 && text.length > 15) {\n\t                        tspan.text(text.slice(0, 12) + '...');\n\t                        return textNode;\n\t                    }\n\n\t                    for (var i = 0; i < words.length; i++) {\n\t                        if(tspan.node().getComputedTextLength() > textNodeWidth) {\n\t                            tspanCount++;\n\n\t                            // allow only two lines of text, otherwise end title with ellipsis\n\t                            if(tspanCount >= 3) {\n\t                                tspan.text(tspan.text() + '...');\n\t                                break;\n\t                            }\n\n\t                            tspan = textNode.append('tspan').attr({x: 0, dy: lineHeight});\n\t                        }\n\n\t                        tspan.text(tspan.text() + ' ' + words[i]);\n\t                    }\n\n\t                    return textNode;\n\t                }\n\n\t                /**\n\t                 * Converts radians to degrees\n\t                 * @param  {number} radians Value in radians\n\t                 * @return {number}         Value in degrees\n\t                 */\n\t                function radiansToDegree(radians) {\n\t                    return radians * (180 / Math.PI);\n\t                }\n\n\t                function categoryArrow(data) {\n\t                    var categoryArc = svg.selectAll('.arc').filter(function(arc) {\n\t                        return arc.data.categoryId === data.categoryId;\n\t                    });\n\n\t                    if(categoryArc[0].length > 0) {\n\t                        var datum = categoryArc.datum();\n\n\t                        svg.select('.arrow-group').append('path').attr({\n\t                            'class': 'arrow',\n\t                            transform: [\n\t                                'translate(0,' + (-1 * innerRadius * 0.9 ) + ')',\n\t                                'rotate(180)'\n\t                            ].join(' '),\n\t                            d: 'M 0 0 l 15.5 27.5 l -30 0',\n\t                            fill: data.color\n\t                        });\n\n\t                        var rotateBy = (datum.endAngle - datum.startAngle) / 2 + datum.startAngle;\n\n\t                        svg.selectAll('.arrow-group').attr({\n\t                            transform: 'rotate(' + radiansToDegree(rotateBy) + ')',\n\t                            'fill': data.color\n\t                        });\n\t                    }\n\t                }\n\n\t                function clean() {\n\t                    svg.selectAll('.arrow').remove();\n\t                    svg.selectAll('.historical-change-arrow').remove();\n\t                    svg.selectAll('.inner-labels text').text('');\n\t                }\n\n\t                function setCategoryInfo(data) {\n\t                    if(!data) {\n\t                        return;\n\t                    }\n\n\t                    clean();\n\t                    categoryArrow(data);\n\t                    wrapText(svg.select('.name'), data.name);\n\n\t                    var historicalChangeFactor = data.historicalChangeFactor || 1;\n\n\t                    svg.select('.amount').text('$' + parseFloat(data.amount).toFixed(2));\n\n\t                    svg.select('.historical-change-factor').text(\n\t                        parseFloat(Math.abs(historicalChangeFactor * 100)).toFixed(2) + '%'\n\t                    );\n\n\t                    svg.select('.historical-change-group').classed({\n\t                        'up': historicalChangeFactor > 0,\n\t                        'down': historicalChangeFactor <= 0\n\t                    });\n\n\t                    // svg.selectAll('.historical-change-arrow').remove();\n\n\t                    var comparisonArrow = svg.select('.historical-change-group')\n\t                                                .append('g')\n\t                                                .attr('class', 'historical-change-arrow');\n\n\t                    // define marker\n\t                    comparisonArrow.append('svg:defs').append('marker')\n\t                        .attr({\n\t                            'id': 'arrow-head',\n\t                            'refX': 0, 'refY': 2,\n\t                            'markerWidth': 2, 'markerHeight': 4,\n\t                            'orient': 'auto'\n\t                        })\n\t                        .append('svg:path')\n\t                        .attr('d', 'M0,0 V4 L2,2 Z');\n\n\t                    comparisonArrow.append('path')\n\t                                .attr({\n\t                                    'id': 'arrow-line',\n\t                                    'marker-end': 'url(#arrow-head)',\n\t                                    'fill': 'none',\n\t                                    'd': 'M0,0 L0,-18'\n\t                                });\n\n\t                    var arrowUp = ['translate(6,' + innerRadius * 0.31 + ')', 'rotate(180)'].join(' ');\n\t                    var arrowDown = ['translate(6,' + innerRadius * 0.54 + ')', 'rotate(0)'].join(' ');\n\t                    var arrow = svg.select('.historical-change-group').classed('down') ? arrowUp : arrowDown;\n\n\t                    svg.select('.historical-change-arrow').attr('transform', arrow);\n\t                    svg.select('.total-fraction').text(parseFloat(data.totalFraction * 100).toFixed(2) + '%');\n\t                }\n\n\t                function initialize() {\n\t                    var svgEl = d3.select($element[0])\n\t                                .append('g')\n\t                                .attr({\n\t                                    'class': 'donut',\n\t                                    transform: 'translate(' + width / 2 + ',' + height / 2 + ')'\n\t                                });\n\n\t                    // chart inner circle\n\t                    svgEl.append('circle').attr({\n\t                        'class': 'inner-circle',\n\t                        cx: 0, cy: 0, r: innerRadius\n\t                    });\n\n\t                    svgEl.append('g').attr('class', 'arcs');\n\n\t                    //Labels placed in the middle of the chart\n\t                    var innerLabels = svgEl.append('g').attr('class', 'inner-labels');\n\t                    innerLabels.append('text').attr({'class': 'name', x: 0, y: -(innerRadius * 0.34), width: innerRadius});\n\t                    innerLabels.append('text').attr({'class': 'amount', x: 0, dy: innerRadius * 0.15 });\n\t                    innerLabels.append('text').attr({\n\t                        'class': 'total-fraction',\n\t                        x: -(innerRadius * 0.4),\n\t                        dy: innerRadius * 0.5\n\t                    });\n\n\t                    var comparisonGroup = innerLabels.append('g').attr('class', 'historical-change-group');\n\t                    comparisonGroup.append('text').attr({'class': 'historical-change-factor', x: innerRadius * 0.45, dy: innerRadius * 0.5});\n\n\t                    // Arrow group which is used to rotate elements in the group according to arc\n\t                    svgEl.append('g').attr('class', 'arrow-group');\n\n\t                    return svgEl;\n\t                }\n\n\t                function onArcClick(d) {\n\t                    setCategoryInfo(d.data);\n\t                    bus.publish('launchpad-retail.donutCategoryChartSelection', d.data);\n\t                }\n\n\t                function update(spending, partyCategories) {\n\t                    clean();\n\n\t                    var vCategories = partyCategories;\n\n\t                    var totalData = {\n\t                        amount: spending.amount,\n\t                        historicalChangeFactor: spending.historicalChangeFactor,\n\t                        name: 'All Categories',\n\t                        totalFraction: 1\n\t                    };\n\t                    setCategoryInfo(totalData);\n\n\t                    var spendingByCategory = spending.categoriesSpendings;\n\t                    spendingByCategory.sort(function(a, b) {\n\t                        if (a.amount > b.amount) {\n\t                            return 1;\n\t                        } else if(a.amount < b.amount) {\n\t                            return -1;\n\t                        } else {\n\t                            return 0;\n\t                        }\n\t                    });\n\n\t                    $.each(spendingByCategory, function(index, categorySpending) {\n\t                        var category = $.grep(vCategories, function(vCategory) {\n\t                            return vCategory.id === categorySpending.categoryId;\n\t                        })[0];\n\n\t                        categorySpending.name = category.name;\n\t                        categorySpending.color = category.color;\n\t                    });\n\n\t                    var amountFn = function(category) { return category.amount; };\n\t                    var scale = d3.scale.linear()\n\t                            .domain([d3.min(spendingByCategory, amountFn), d3.max(spendingByCategory, amountFn)])\n\t                            .range([100, 360]);\n\n\t                    var pie = d3.layout.pie()\n\t                            .sort(null)\n\t                            .value(function(d) { return scale(Math.abs(d.amount)); });\n\n\t                    var arc = svg.select('.arcs').selectAll('.arc').data(pie(spendingByCategory)); // JOIN new data with old elems\n\t                    arc.classed('update', true); //UPDATE old elems\n\t                    arc.enter().append('path') //ENTER, create new elements if needed\n\t                        .classed('arc', true)\n\t                        .attr('d', arcGenerator)\n\t                        .style('fill', function(d) { return d.data.color; })\n\t                        .on('click', onArcClick);\n\t                    arc.attr('d', arcGenerator).style('fill', function(d) { return d.data.color; }); //ENTER + UPDATE\n\t                    arc.exit().remove(); //EXIT, remove old elements\n\t                }\n\n\t                svg = initialize();\n\n\t                bus.subscribe('launchpad-retail.spendingDataUpdated', function(data) {\n\t                    spendings = data.spendings;\n\t                    categories = data.categories;\n\t                    update(spendings, categories);\n\t                });\n\n\t                bus.subscribe('launchpad-retail.transactionsCategorySearch', function(vCategories) {\n\t                    if(vCategories.length === 1) {\n\t                        var categoriesSpendings = spendings.categoriesSpendings;\n\t                        var spending = categoriesSpendings.filter(function(vSpending) {\n\t                            return vSpending.categoryId === vCategories[0].id;\n\t                        })[0];\n\n\n\t                        setCategoryInfo(spending);\n\t                    }\n\t                });\n\n\t            }\n\t        };\n\t    };\n\t    exports.categorySpendingsChart.$inject = [\"lpCoreBus\"];\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(9);\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;!function() {\n\t  var d3 = {\n\t    version: \"3.4.13\"\n\t  };\n\t  if (!Date.now) Date.now = function() {\n\t    return +new Date();\n\t  };\n\t  var d3_arraySlice = [].slice, d3_array = function(list) {\n\t    return d3_arraySlice.call(list);\n\t  };\n\t  var d3_document = document, d3_documentElement = d3_document.documentElement, d3_window = window;\n\t  try {\n\t    d3_array(d3_documentElement.childNodes)[0].nodeType;\n\t  } catch (e) {\n\t    d3_array = function(list) {\n\t      var i = list.length, array = new Array(i);\n\t      while (i--) array[i] = list[i];\n\t      return array;\n\t    };\n\t  }\n\t  try {\n\t    d3_document.createElement(\"div\").style.setProperty(\"opacity\", 0, \"\");\n\t  } catch (error) {\n\t    var d3_element_prototype = d3_window.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = d3_window.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;\n\t    d3_element_prototype.setAttribute = function(name, value) {\n\t      d3_element_setAttribute.call(this, name, value + \"\");\n\t    };\n\t    d3_element_prototype.setAttributeNS = function(space, local, value) {\n\t      d3_element_setAttributeNS.call(this, space, local, value + \"\");\n\t    };\n\t    d3_style_prototype.setProperty = function(name, value, priority) {\n\t      d3_style_setProperty.call(this, name, value + \"\", priority);\n\t    };\n\t  }\n\t  d3.ascending = d3_ascending;\n\t  function d3_ascending(a, b) {\n\t    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n\t  }\n\t  d3.descending = function(a, b) {\n\t    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n\t  };\n\t  d3.min = function(array, f) {\n\t    var i = -1, n = array.length, a, b;\n\t    if (arguments.length === 1) {\n\t      while (++i < n && !((a = array[i]) != null && a <= a)) a = undefined;\n\t      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n\t    } else {\n\t      while (++i < n && !((a = f.call(array, array[i], i)) != null && a <= a)) a = undefined;\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\n\t    }\n\t    return a;\n\t  };\n\t  d3.max = function(array, f) {\n\t    var i = -1, n = array.length, a, b;\n\t    if (arguments.length === 1) {\n\t      while (++i < n && !((a = array[i]) != null && a <= a)) a = undefined;\n\t      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n\t    } else {\n\t      while (++i < n && !((a = f.call(array, array[i], i)) != null && a <= a)) a = undefined;\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\n\t    }\n\t    return a;\n\t  };\n\t  d3.extent = function(array, f) {\n\t    var i = -1, n = array.length, a, b, c;\n\t    if (arguments.length === 1) {\n\t      while (++i < n && !((a = c = array[i]) != null && a <= a)) a = c = undefined;\n\t      while (++i < n) if ((b = array[i]) != null) {\n\t        if (a > b) a = b;\n\t        if (c < b) c = b;\n\t      }\n\t    } else {\n\t      while (++i < n && !((a = c = f.call(array, array[i], i)) != null && a <= a)) a = undefined;\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {\n\t        if (a > b) a = b;\n\t        if (c < b) c = b;\n\t      }\n\t    }\n\t    return [ a, c ];\n\t  };\n\t  function d3_number(x) {\n\t    return x === null ? NaN : +x;\n\t  }\n\t  function d3_numeric(x) {\n\t    return !isNaN(x);\n\t  }\n\t  d3.sum = function(array, f) {\n\t    var s = 0, n = array.length, a, i = -1;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if (d3_numeric(a = +array[i])) s += a;\n\t    } else {\n\t      while (++i < n) if (d3_numeric(a = +f.call(array, array[i], i))) s += a;\n\t    }\n\t    return s;\n\t  };\n\t  d3.mean = function(array, f) {\n\t    var s = 0, n = array.length, a, i = -1, j = n;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) s += a; else --j;\n\t    } else {\n\t      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a; else --j;\n\t    }\n\t    return j ? s / j : undefined;\n\t  };\n\t  d3.quantile = function(values, p) {\n\t    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;\n\t    return e ? v + e * (values[h] - v) : v;\n\t  };\n\t  d3.median = function(array, f) {\n\t    var numbers = [], n = array.length, a, i = -1;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);\n\t    } else {\n\t      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);\n\t    }\n\t    return numbers.length ? d3.quantile(numbers.sort(d3_ascending), .5) : undefined;\n\t  };\n\t  function d3_bisector(compare) {\n\t    return {\n\t      left: function(a, x, lo, hi) {\n\t        if (arguments.length < 3) lo = 0;\n\t        if (arguments.length < 4) hi = a.length;\n\t        while (lo < hi) {\n\t          var mid = lo + hi >>> 1;\n\t          if (compare(a[mid], x) < 0) lo = mid + 1; else hi = mid;\n\t        }\n\t        return lo;\n\t      },\n\t      right: function(a, x, lo, hi) {\n\t        if (arguments.length < 3) lo = 0;\n\t        if (arguments.length < 4) hi = a.length;\n\t        while (lo < hi) {\n\t          var mid = lo + hi >>> 1;\n\t          if (compare(a[mid], x) > 0) hi = mid; else lo = mid + 1;\n\t        }\n\t        return lo;\n\t      }\n\t    };\n\t  }\n\t  var d3_bisect = d3_bisector(d3_ascending);\n\t  d3.bisectLeft = d3_bisect.left;\n\t  d3.bisect = d3.bisectRight = d3_bisect.right;\n\t  d3.bisector = function(f) {\n\t    return d3_bisector(f.length === 1 ? function(d, x) {\n\t      return d3_ascending(f(d), x);\n\t    } : f);\n\t  };\n\t  d3.shuffle = function(array) {\n\t    var m = array.length, t, i;\n\t    while (m) {\n\t      i = Math.random() * m-- | 0;\n\t      t = array[m], array[m] = array[i], array[i] = t;\n\t    }\n\t    return array;\n\t  };\n\t  d3.permute = function(array, indexes) {\n\t    var i = indexes.length, permutes = new Array(i);\n\t    while (i--) permutes[i] = array[indexes[i]];\n\t    return permutes;\n\t  };\n\t  d3.pairs = function(array) {\n\t    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);\n\t    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];\n\t    return pairs;\n\t  };\n\t  d3.zip = function() {\n\t    if (!(n = arguments.length)) return [];\n\t    for (var i = -1, m = d3.min(arguments, d3_zipLength), zips = new Array(m); ++i < m; ) {\n\t      for (var j = -1, n, zip = zips[i] = new Array(n); ++j < n; ) {\n\t        zip[j] = arguments[j][i];\n\t      }\n\t    }\n\t    return zips;\n\t  };\n\t  function d3_zipLength(d) {\n\t    return d.length;\n\t  }\n\t  d3.transpose = function(matrix) {\n\t    return d3.zip.apply(d3, matrix);\n\t  };\n\t  d3.keys = function(map) {\n\t    var keys = [];\n\t    for (var key in map) keys.push(key);\n\t    return keys;\n\t  };\n\t  d3.values = function(map) {\n\t    var values = [];\n\t    for (var key in map) values.push(map[key]);\n\t    return values;\n\t  };\n\t  d3.entries = function(map) {\n\t    var entries = [];\n\t    for (var key in map) entries.push({\n\t      key: key,\n\t      value: map[key]\n\t    });\n\t    return entries;\n\t  };\n\t  d3.merge = function(arrays) {\n\t    var n = arrays.length, m, i = -1, j = 0, merged, array;\n\t    while (++i < n) j += arrays[i].length;\n\t    merged = new Array(j);\n\t    while (--n >= 0) {\n\t      array = arrays[n];\n\t      m = array.length;\n\t      while (--m >= 0) {\n\t        merged[--j] = array[m];\n\t      }\n\t    }\n\t    return merged;\n\t  };\n\t  var abs = Math.abs;\n\t  d3.range = function(start, stop, step) {\n\t    if (arguments.length < 3) {\n\t      step = 1;\n\t      if (arguments.length < 2) {\n\t        stop = start;\n\t        start = 0;\n\t      }\n\t    }\n\t    if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\n\t    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;\n\t    start *= k, stop *= k, step *= k;\n\t    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);\n\t    return range;\n\t  };\n\t  function d3_range_integerScale(x) {\n\t    var k = 1;\n\t    while (x * k % 1) k *= 10;\n\t    return k;\n\t  }\n\t  function d3_class(ctor, properties) {\n\t    for (var key in properties) {\n\t      Object.defineProperty(ctor.prototype, key, {\n\t        value: properties[key],\n\t        enumerable: false\n\t      });\n\t    }\n\t  }\n\t  d3.map = function(object) {\n\t    var map = new d3_Map();\n\t    if (object instanceof d3_Map) object.forEach(function(key, value) {\n\t      map.set(key, value);\n\t    }); else for (var key in object) map.set(key, object[key]);\n\t    return map;\n\t  };\n\t  function d3_Map() {\n\t    this._ = Object.create(null);\n\t  }\n\t  var d3_map_proto = \"__proto__\", d3_map_zero = \"\\x00\";\n\t  d3_class(d3_Map, {\n\t    has: d3_map_has,\n\t    get: function(key) {\n\t      return this._[d3_map_escape(key)];\n\t    },\n\t    set: function(key, value) {\n\t      return this._[d3_map_escape(key)] = value;\n\t    },\n\t    remove: d3_map_remove,\n\t    keys: d3_map_keys,\n\t    values: function() {\n\t      var values = [];\n\t      for (var key in this._) values.push(this._[key]);\n\t      return values;\n\t    },\n\t    entries: function() {\n\t      var entries = [];\n\t      for (var key in this._) entries.push({\n\t        key: d3_map_unescape(key),\n\t        value: this._[key]\n\t      });\n\t      return entries;\n\t    },\n\t    size: d3_map_size,\n\t    empty: d3_map_empty,\n\t    forEach: function(f) {\n\t      for (var key in this._) f.call(this, d3_map_unescape(key), this._[key]);\n\t    }\n\t  });\n\t  function d3_map_escape(key) {\n\t    return (key += \"\") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;\n\t  }\n\t  function d3_map_unescape(key) {\n\t    return (key += \"\")[0] === d3_map_zero ? key.slice(1) : key;\n\t  }\n\t  function d3_map_has(key) {\n\t    return d3_map_escape(key) in this._;\n\t  }\n\t  function d3_map_remove(key) {\n\t    return (key = d3_map_escape(key)) in this._ && delete this._[key];\n\t  }\n\t  function d3_map_keys() {\n\t    var keys = [];\n\t    for (var key in this._) keys.push(d3_map_unescape(key));\n\t    return keys;\n\t  }\n\t  function d3_map_size() {\n\t    var size = 0;\n\t    for (var key in this._) ++size;\n\t    return size;\n\t  }\n\t  function d3_map_empty() {\n\t    for (var key in this._) return false;\n\t    return true;\n\t  }\n\t  d3.nest = function() {\n\t    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;\n\t    function map(mapType, array, depth) {\n\t      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\n\t      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;\n\t      while (++i < n) {\n\t        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\n\t          values.push(object);\n\t        } else {\n\t          valuesByKey.set(keyValue, [ object ]);\n\t        }\n\t      }\n\t      if (mapType) {\n\t        object = mapType();\n\t        setter = function(keyValue, values) {\n\t          object.set(keyValue, map(mapType, values, depth));\n\t        };\n\t      } else {\n\t        object = {};\n\t        setter = function(keyValue, values) {\n\t          object[keyValue] = map(mapType, values, depth);\n\t        };\n\t      }\n\t      valuesByKey.forEach(setter);\n\t      return object;\n\t    }\n\t    function entries(map, depth) {\n\t      if (depth >= keys.length) return map;\n\t      var array = [], sortKey = sortKeys[depth++];\n\t      map.forEach(function(key, keyMap) {\n\t        array.push({\n\t          key: key,\n\t          values: entries(keyMap, depth)\n\t        });\n\t      });\n\t      return sortKey ? array.sort(function(a, b) {\n\t        return sortKey(a.key, b.key);\n\t      }) : array;\n\t    }\n\t    nest.map = function(array, mapType) {\n\t      return map(mapType, array, 0);\n\t    };\n\t    nest.entries = function(array) {\n\t      return entries(map(d3.map, array, 0), 0);\n\t    };\n\t    nest.key = function(d) {\n\t      keys.push(d);\n\t      return nest;\n\t    };\n\t    nest.sortKeys = function(order) {\n\t      sortKeys[keys.length - 1] = order;\n\t      return nest;\n\t    };\n\t    nest.sortValues = function(order) {\n\t      sortValues = order;\n\t      return nest;\n\t    };\n\t    nest.rollup = function(f) {\n\t      rollup = f;\n\t      return nest;\n\t    };\n\t    return nest;\n\t  };\n\t  d3.set = function(array) {\n\t    var set = new d3_Set();\n\t    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);\n\t    return set;\n\t  };\n\t  function d3_Set() {\n\t    this._ = Object.create(null);\n\t  }\n\t  d3_class(d3_Set, {\n\t    has: d3_map_has,\n\t    add: function(key) {\n\t      this._[d3_map_escape(key += \"\")] = true;\n\t      return key;\n\t    },\n\t    remove: d3_map_remove,\n\t    values: d3_map_keys,\n\t    size: d3_map_size,\n\t    empty: d3_map_empty,\n\t    forEach: function(f) {\n\t      for (var key in this._) f.call(this, d3_map_unescape(key));\n\t    }\n\t  });\n\t  d3.behavior = {};\n\t  d3.rebind = function(target, source) {\n\t    var i = 1, n = arguments.length, method;\n\t    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);\n\t    return target;\n\t  };\n\t  function d3_rebind(target, source, method) {\n\t    return function() {\n\t      var value = method.apply(source, arguments);\n\t      return value === source ? target : value;\n\t    };\n\t  }\n\t  function d3_vendorSymbol(object, name) {\n\t    if (name in object) return name;\n\t    name = name.charAt(0).toUpperCase() + name.slice(1);\n\t    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\n\t      var prefixName = d3_vendorPrefixes[i] + name;\n\t      if (prefixName in object) return prefixName;\n\t    }\n\t  }\n\t  var d3_vendorPrefixes = [ \"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\" ];\n\t  function d3_noop() {}\n\t  d3.dispatch = function() {\n\t    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;\n\t    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n\t    return dispatch;\n\t  };\n\t  function d3_dispatch() {}\n\t  d3_dispatch.prototype.on = function(type, listener) {\n\t    var i = type.indexOf(\".\"), name = \"\";\n\t    if (i >= 0) {\n\t      name = type.slice(i + 1);\n\t      type = type.slice(0, i);\n\t    }\n\t    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\n\t    if (arguments.length === 2) {\n\t      if (listener == null) for (type in this) {\n\t        if (this.hasOwnProperty(type)) this[type].on(name, null);\n\t      }\n\t      return this;\n\t    }\n\t  };\n\t  function d3_dispatch_event(dispatch) {\n\t    var listeners = [], listenerByName = new d3_Map();\n\t    function event() {\n\t      var z = listeners, i = -1, n = z.length, l;\n\t      while (++i < n) if (l = z[i].on) l.apply(this, arguments);\n\t      return dispatch;\n\t    }\n\t    event.on = function(name, listener) {\n\t      var l = listenerByName.get(name), i;\n\t      if (arguments.length < 2) return l && l.on;\n\t      if (l) {\n\t        l.on = null;\n\t        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\n\t        listenerByName.remove(name);\n\t      }\n\t      if (listener) listeners.push(listenerByName.set(name, {\n\t        on: listener\n\t      }));\n\t      return dispatch;\n\t    };\n\t    return event;\n\t  }\n\t  d3.event = null;\n\t  function d3_eventPreventDefault() {\n\t    d3.event.preventDefault();\n\t  }\n\t  function d3_eventSource() {\n\t    var e = d3.event, s;\n\t    while (s = e.sourceEvent) e = s;\n\t    return e;\n\t  }\n\t  function d3_eventDispatch(target) {\n\t    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;\n\t    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n\t    dispatch.of = function(thiz, argumentz) {\n\t      return function(e1) {\n\t        try {\n\t          var e0 = e1.sourceEvent = d3.event;\n\t          e1.target = target;\n\t          d3.event = e1;\n\t          dispatch[e1.type].apply(thiz, argumentz);\n\t        } finally {\n\t          d3.event = e0;\n\t        }\n\t      };\n\t    };\n\t    return dispatch;\n\t  }\n\t  d3.requote = function(s) {\n\t    return s.replace(d3_requote_re, \"\\\\$&\");\n\t  };\n\t  var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n\t  var d3_subclass = {}.__proto__ ? function(object, prototype) {\n\t    object.__proto__ = prototype;\n\t  } : function(object, prototype) {\n\t    for (var property in prototype) object[property] = prototype[property];\n\t  };\n\t  function d3_selection(groups) {\n\t    d3_subclass(groups, d3_selectionPrototype);\n\t    return groups;\n\t  }\n\t  var d3_select = function(s, n) {\n\t    return n.querySelector(s);\n\t  }, d3_selectAll = function(s, n) {\n\t    return n.querySelectorAll(s);\n\t  }, d3_selectMatcher = d3_documentElement.matches || d3_documentElement[d3_vendorSymbol(d3_documentElement, \"matchesSelector\")], d3_selectMatches = function(n, s) {\n\t    return d3_selectMatcher.call(n, s);\n\t  };\n\t  if (typeof Sizzle === \"function\") {\n\t    d3_select = function(s, n) {\n\t      return Sizzle(s, n)[0] || null;\n\t    };\n\t    d3_selectAll = Sizzle;\n\t    d3_selectMatches = Sizzle.matchesSelector;\n\t  }\n\t  d3.selection = function() {\n\t    return d3_selectionRoot;\n\t  };\n\t  var d3_selectionPrototype = d3.selection.prototype = [];\n\t  d3_selectionPrototype.select = function(selector) {\n\t    var subgroups = [], subgroup, subnode, group, node;\n\t    selector = d3_selection_selector(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      subgroups.push(subgroup = []);\n\t      subgroup.parentNode = (group = this[j]).parentNode;\n\t      for (var i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\n\t          if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\n\t        } else {\n\t          subgroup.push(null);\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  function d3_selection_selector(selector) {\n\t    return typeof selector === \"function\" ? selector : function() {\n\t      return d3_select(selector, this);\n\t    };\n\t  }\n\t  d3_selectionPrototype.selectAll = function(selector) {\n\t    var subgroups = [], subgroup, node;\n\t    selector = d3_selection_selectorAll(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\n\t          subgroup.parentNode = node;\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  function d3_selection_selectorAll(selector) {\n\t    return typeof selector === \"function\" ? selector : function() {\n\t      return d3_selectAll(selector, this);\n\t    };\n\t  }\n\t  var d3_nsPrefix = {\n\t    svg: \"http://www.w3.org/2000/svg\",\n\t    xhtml: \"http://www.w3.org/1999/xhtml\",\n\t    xlink: \"http://www.w3.org/1999/xlink\",\n\t    xml: \"http://www.w3.org/XML/1998/namespace\",\n\t    xmlns: \"http://www.w3.org/2000/xmlns/\"\n\t  };\n\t  d3.ns = {\n\t    prefix: d3_nsPrefix,\n\t    qualify: function(name) {\n\t      var i = name.indexOf(\":\"), prefix = name;\n\t      if (i >= 0) {\n\t        prefix = name.slice(0, i);\n\t        name = name.slice(i + 1);\n\t      }\n\t      return d3_nsPrefix.hasOwnProperty(prefix) ? {\n\t        space: d3_nsPrefix[prefix],\n\t        local: name\n\t      } : name;\n\t    }\n\t  };\n\t  d3_selectionPrototype.attr = function(name, value) {\n\t    if (arguments.length < 2) {\n\t      if (typeof name === \"string\") {\n\t        var node = this.node();\n\t        name = d3.ns.qualify(name);\n\t        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\n\t      }\n\t      for (value in name) this.each(d3_selection_attr(value, name[value]));\n\t      return this;\n\t    }\n\t    return this.each(d3_selection_attr(name, value));\n\t  };\n\t  function d3_selection_attr(name, value) {\n\t    name = d3.ns.qualify(name);\n\t    function attrNull() {\n\t      this.removeAttribute(name);\n\t    }\n\t    function attrNullNS() {\n\t      this.removeAttributeNS(name.space, name.local);\n\t    }\n\t    function attrConstant() {\n\t      this.setAttribute(name, value);\n\t    }\n\t    function attrConstantNS() {\n\t      this.setAttributeNS(name.space, name.local, value);\n\t    }\n\t    function attrFunction() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);\n\t    }\n\t    function attrFunctionNS() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);\n\t    }\n\t    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\n\t  }\n\t  function d3_collapse(s) {\n\t    return s.trim().replace(/\\s+/g, \" \");\n\t  }\n\t  d3_selectionPrototype.classed = function(name, value) {\n\t    if (arguments.length < 2) {\n\t      if (typeof name === \"string\") {\n\t        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;\n\t        if (value = node.classList) {\n\t          while (++i < n) if (!value.contains(name[i])) return false;\n\t        } else {\n\t          value = node.getAttribute(\"class\");\n\t          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;\n\t        }\n\t        return true;\n\t      }\n\t      for (value in name) this.each(d3_selection_classed(value, name[value]));\n\t      return this;\n\t    }\n\t    return this.each(d3_selection_classed(name, value));\n\t  };\n\t  function d3_selection_classedRe(name) {\n\t    return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\n\t  }\n\t  function d3_selection_classes(name) {\n\t    return (name + \"\").trim().split(/^|\\s+/);\n\t  }\n\t  function d3_selection_classed(name, value) {\n\t    name = d3_selection_classes(name).map(d3_selection_classedName);\n\t    var n = name.length;\n\t    function classedConstant() {\n\t      var i = -1;\n\t      while (++i < n) name[i](this, value);\n\t    }\n\t    function classedFunction() {\n\t      var i = -1, x = value.apply(this, arguments);\n\t      while (++i < n) name[i](this, x);\n\t    }\n\t    return typeof value === \"function\" ? classedFunction : classedConstant;\n\t  }\n\t  function d3_selection_classedName(name) {\n\t    var re = d3_selection_classedRe(name);\n\t    return function(node, value) {\n\t      if (c = node.classList) return value ? c.add(name) : c.remove(name);\n\t      var c = node.getAttribute(\"class\") || \"\";\n\t      if (value) {\n\t        re.lastIndex = 0;\n\t        if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\n\t      } else {\n\t        node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\n\t      }\n\t    };\n\t  }\n\t  d3_selectionPrototype.style = function(name, value, priority) {\n\t    var n = arguments.length;\n\t    if (n < 3) {\n\t      if (typeof name !== \"string\") {\n\t        if (n < 2) value = \"\";\n\t        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));\n\t        return this;\n\t      }\n\t      if (n < 2) return d3_window.getComputedStyle(this.node(), null).getPropertyValue(name);\n\t      priority = \"\";\n\t    }\n\t    return this.each(d3_selection_style(name, value, priority));\n\t  };\n\t  function d3_selection_style(name, value, priority) {\n\t    function styleNull() {\n\t      this.style.removeProperty(name);\n\t    }\n\t    function styleConstant() {\n\t      this.style.setProperty(name, value, priority);\n\t    }\n\t    function styleFunction() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);\n\t    }\n\t    return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\n\t  }\n\t  d3_selectionPrototype.property = function(name, value) {\n\t    if (arguments.length < 2) {\n\t      if (typeof name === \"string\") return this.node()[name];\n\t      for (value in name) this.each(d3_selection_property(value, name[value]));\n\t      return this;\n\t    }\n\t    return this.each(d3_selection_property(name, value));\n\t  };\n\t  function d3_selection_property(name, value) {\n\t    function propertyNull() {\n\t      delete this[name];\n\t    }\n\t    function propertyConstant() {\n\t      this[name] = value;\n\t    }\n\t    function propertyFunction() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) delete this[name]; else this[name] = x;\n\t    }\n\t    return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\n\t  }\n\t  d3_selectionPrototype.text = function(value) {\n\t    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n\t      var v = value.apply(this, arguments);\n\t      this.textContent = v == null ? \"\" : v;\n\t    } : value == null ? function() {\n\t      this.textContent = \"\";\n\t    } : function() {\n\t      this.textContent = value;\n\t    }) : this.node().textContent;\n\t  };\n\t  d3_selectionPrototype.html = function(value) {\n\t    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n\t      var v = value.apply(this, arguments);\n\t      this.innerHTML = v == null ? \"\" : v;\n\t    } : value == null ? function() {\n\t      this.innerHTML = \"\";\n\t    } : function() {\n\t      this.innerHTML = value;\n\t    }) : this.node().innerHTML;\n\t  };\n\t  d3_selectionPrototype.append = function(name) {\n\t    name = d3_selection_creator(name);\n\t    return this.select(function() {\n\t      return this.appendChild(name.apply(this, arguments));\n\t    });\n\t  };\n\t  function d3_selection_creator(name) {\n\t    return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? function() {\n\t      return this.ownerDocument.createElementNS(name.space, name.local);\n\t    } : function() {\n\t      return this.ownerDocument.createElementNS(this.namespaceURI, name);\n\t    };\n\t  }\n\t  d3_selectionPrototype.insert = function(name, before) {\n\t    name = d3_selection_creator(name);\n\t    before = d3_selection_selector(before);\n\t    return this.select(function() {\n\t      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\n\t    });\n\t  };\n\t  d3_selectionPrototype.remove = function() {\n\t    return this.each(function() {\n\t      var parent = this.parentNode;\n\t      if (parent) parent.removeChild(this);\n\t    });\n\t  };\n\t  d3_selectionPrototype.data = function(value, key) {\n\t    var i = -1, n = this.length, group, node;\n\t    if (!arguments.length) {\n\t      value = new Array(n = (group = this[0]).length);\n\t      while (++i < n) {\n\t        if (node = group[i]) {\n\t          value[i] = node.__data__;\n\t        }\n\t      }\n\t      return value;\n\t    }\n\t    function bind(group, groupData) {\n\t      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;\n\t      if (key) {\n\t        var nodeByKeyValue = new d3_Map(), keyValues = new Array(n), keyValue;\n\t        for (i = -1; ++i < n; ) {\n\t          if (nodeByKeyValue.has(keyValue = key.call(node = group[i], node.__data__, i))) {\n\t            exitNodes[i] = node;\n\t          } else {\n\t            nodeByKeyValue.set(keyValue, node);\n\t          }\n\t          keyValues[i] = keyValue;\n\t        }\n\t        for (i = -1; ++i < m; ) {\n\t          if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {\n\t            enterNodes[i] = d3_selection_dataNode(nodeData);\n\t          } else if (node !== true) {\n\t            updateNodes[i] = node;\n\t            node.__data__ = nodeData;\n\t          }\n\t          nodeByKeyValue.set(keyValue, true);\n\t        }\n\t        for (i = -1; ++i < n; ) {\n\t          if (nodeByKeyValue.get(keyValues[i]) !== true) {\n\t            exitNodes[i] = group[i];\n\t          }\n\t        }\n\t      } else {\n\t        for (i = -1; ++i < n0; ) {\n\t          node = group[i];\n\t          nodeData = groupData[i];\n\t          if (node) {\n\t            node.__data__ = nodeData;\n\t            updateNodes[i] = node;\n\t          } else {\n\t            enterNodes[i] = d3_selection_dataNode(nodeData);\n\t          }\n\t        }\n\t        for (;i < m; ++i) {\n\t          enterNodes[i] = d3_selection_dataNode(groupData[i]);\n\t        }\n\t        for (;i < n; ++i) {\n\t          exitNodes[i] = group[i];\n\t        }\n\t      }\n\t      enterNodes.update = updateNodes;\n\t      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\n\t      enter.push(enterNodes);\n\t      update.push(updateNodes);\n\t      exit.push(exitNodes);\n\t    }\n\t    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);\n\t    if (typeof value === \"function\") {\n\t      while (++i < n) {\n\t        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\n\t      }\n\t    } else {\n\t      while (++i < n) {\n\t        bind(group = this[i], value);\n\t      }\n\t    }\n\t    update.enter = function() {\n\t      return enter;\n\t    };\n\t    update.exit = function() {\n\t      return exit;\n\t    };\n\t    return update;\n\t  };\n\t  function d3_selection_dataNode(data) {\n\t    return {\n\t      __data__: data\n\t    };\n\t  }\n\t  d3_selectionPrototype.datum = function(value) {\n\t    return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\n\t  };\n\t  d3_selectionPrototype.filter = function(filter) {\n\t    var subgroups = [], subgroup, group, node;\n\t    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      subgroups.push(subgroup = []);\n\t      subgroup.parentNode = (group = this[j]).parentNode;\n\t      for (var i = 0, n = group.length; i < n; i++) {\n\t        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n\t          subgroup.push(node);\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  function d3_selection_filter(selector) {\n\t    return function() {\n\t      return d3_selectMatches(this, selector);\n\t    };\n\t  }\n\t  d3_selectionPrototype.order = function() {\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {\n\t        if (node = group[i]) {\n\t          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n\t          next = node;\n\t        }\n\t      }\n\t    }\n\t    return this;\n\t  };\n\t  d3_selectionPrototype.sort = function(comparator) {\n\t    comparator = d3_selection_sortComparator.apply(this, arguments);\n\t    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);\n\t    return this.order();\n\t  };\n\t  function d3_selection_sortComparator(comparator) {\n\t    if (!arguments.length) comparator = d3_ascending;\n\t    return function(a, b) {\n\t      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\n\t    };\n\t  }\n\t  d3_selectionPrototype.each = function(callback) {\n\t    return d3_selection_each(this, function(node, i, j) {\n\t      callback.call(node, node.__data__, i, j);\n\t    });\n\t  };\n\t  function d3_selection_each(groups, callback) {\n\t    for (var j = 0, m = groups.length; j < m; j++) {\n\t      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\n\t        if (node = group[i]) callback(node, i, j);\n\t      }\n\t    }\n\t    return groups;\n\t  }\n\t  d3_selectionPrototype.call = function(callback) {\n\t    var args = d3_array(arguments);\n\t    callback.apply(args[0] = this, args);\n\t    return this;\n\t  };\n\t  d3_selectionPrototype.empty = function() {\n\t    return !this.node();\n\t  };\n\t  d3_selectionPrototype.node = function() {\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n\t        var node = group[i];\n\t        if (node) return node;\n\t      }\n\t    }\n\t    return null;\n\t  };\n\t  d3_selectionPrototype.size = function() {\n\t    var n = 0;\n\t    d3_selection_each(this, function() {\n\t      ++n;\n\t    });\n\t    return n;\n\t  };\n\t  function d3_selection_enter(selection) {\n\t    d3_subclass(selection, d3_selection_enterPrototype);\n\t    return selection;\n\t  }\n\t  var d3_selection_enterPrototype = [];\n\t  d3.selection.enter = d3_selection_enter;\n\t  d3.selection.enter.prototype = d3_selection_enterPrototype;\n\t  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\n\t  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\n\t  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\n\t  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\n\t  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\n\t  d3_selection_enterPrototype.select = function(selector) {\n\t    var subgroups = [], subgroup, subnode, upgroup, group, node;\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      upgroup = (group = this[j]).update;\n\t      subgroups.push(subgroup = []);\n\t      subgroup.parentNode = group.parentNode;\n\t      for (var i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\n\t          subnode.__data__ = node.__data__;\n\t        } else {\n\t          subgroup.push(null);\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  d3_selection_enterPrototype.insert = function(name, before) {\n\t    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\n\t    return d3_selectionPrototype.insert.call(this, name, before);\n\t  };\n\t  function d3_selection_enterInsertBefore(enter) {\n\t    var i0, j0;\n\t    return function(d, i, j) {\n\t      var group = enter[j].update, n = group.length, node;\n\t      if (j != j0) j0 = j, i0 = 0;\n\t      if (i >= i0) i0 = i + 1;\n\t      while (!(node = group[i0]) && ++i0 < n) ;\n\t      return node;\n\t    };\n\t  }\n\t  d3_selectionPrototype.transition = function() {\n\t    var id = d3_transitionInheritId || ++d3_transitionId, subgroups = [], subgroup, node, transition = d3_transitionInherit || {\n\t      time: Date.now(),\n\t      ease: d3_ease_cubicInOut,\n\t      delay: 0,\n\t      duration: 250\n\t    };\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) d3_transitionNode(node, i, id, transition);\n\t        subgroup.push(node);\n\t      }\n\t    }\n\t    return d3_transition(subgroups, id);\n\t  };\n\t  d3_selectionPrototype.interrupt = function() {\n\t    return this.each(d3_selection_interrupt);\n\t  };\n\t  function d3_selection_interrupt() {\n\t    var lock = this.__transition__;\n\t    if (lock) ++lock.active;\n\t  }\n\t  d3.select = function(node) {\n\t    var group = [ typeof node === \"string\" ? d3_select(node, d3_document) : node ];\n\t    group.parentNode = d3_documentElement;\n\t    return d3_selection([ group ]);\n\t  };\n\t  d3.selectAll = function(nodes) {\n\t    var group = d3_array(typeof nodes === \"string\" ? d3_selectAll(nodes, d3_document) : nodes);\n\t    group.parentNode = d3_documentElement;\n\t    return d3_selection([ group ]);\n\t  };\n\t  var d3_selectionRoot = d3.select(d3_documentElement);\n\t  d3_selectionPrototype.on = function(type, listener, capture) {\n\t    var n = arguments.length;\n\t    if (n < 3) {\n\t      if (typeof type !== \"string\") {\n\t        if (n < 2) listener = false;\n\t        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));\n\t        return this;\n\t      }\n\t      if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\n\t      capture = false;\n\t    }\n\t    return this.each(d3_selection_on(type, listener, capture));\n\t  };\n\t  function d3_selection_on(type, listener, capture) {\n\t    var name = \"__on\" + type, i = type.indexOf(\".\"), wrap = d3_selection_onListener;\n\t    if (i > 0) type = type.slice(0, i);\n\t    var filter = d3_selection_onFilters.get(type);\n\t    if (filter) type = filter, wrap = d3_selection_onFilter;\n\t    function onRemove() {\n\t      var l = this[name];\n\t      if (l) {\n\t        this.removeEventListener(type, l, l.$);\n\t        delete this[name];\n\t      }\n\t    }\n\t    function onAdd() {\n\t      var l = wrap(listener, d3_array(arguments));\n\t      onRemove.call(this);\n\t      this.addEventListener(type, this[name] = l, l.$ = capture);\n\t      l._ = listener;\n\t    }\n\t    function removeAll() {\n\t      var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"), match;\n\t      for (var name in this) {\n\t        if (match = name.match(re)) {\n\t          var l = this[name];\n\t          this.removeEventListener(match[1], l, l.$);\n\t          delete this[name];\n\t        }\n\t      }\n\t    }\n\t    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\n\t  }\n\t  var d3_selection_onFilters = d3.map({\n\t    mouseenter: \"mouseover\",\n\t    mouseleave: \"mouseout\"\n\t  });\n\t  d3_selection_onFilters.forEach(function(k) {\n\t    if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\n\t  });\n\t  function d3_selection_onListener(listener, argumentz) {\n\t    return function(e) {\n\t      var o = d3.event;\n\t      d3.event = e;\n\t      argumentz[0] = this.__data__;\n\t      try {\n\t        listener.apply(this, argumentz);\n\t      } finally {\n\t        d3.event = o;\n\t      }\n\t    };\n\t  }\n\t  function d3_selection_onFilter(listener, argumentz) {\n\t    var l = d3_selection_onListener(listener, argumentz);\n\t    return function(e) {\n\t      var target = this, related = e.relatedTarget;\n\t      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\n\t        l.call(target, e);\n\t      }\n\t    };\n\t  }\n\t  var d3_event_dragSelect = \"onselectstart\" in d3_document ? null : d3_vendorSymbol(d3_documentElement.style, \"userSelect\"), d3_event_dragId = 0;\n\t  function d3_event_dragSuppress() {\n\t    var name = \".dragsuppress-\" + ++d3_event_dragId, click = \"click\" + name, w = d3.select(d3_window).on(\"touchmove\" + name, d3_eventPreventDefault).on(\"dragstart\" + name, d3_eventPreventDefault).on(\"selectstart\" + name, d3_eventPreventDefault);\n\t    if (d3_event_dragSelect) {\n\t      var style = d3_documentElement.style, select = style[d3_event_dragSelect];\n\t      style[d3_event_dragSelect] = \"none\";\n\t    }\n\t    return function(suppressClick) {\n\t      w.on(name, null);\n\t      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\n\t      if (suppressClick) {\n\t        function off() {\n\t          w.on(click, null);\n\t        }\n\t        w.on(click, function() {\n\t          d3_eventPreventDefault();\n\t          off();\n\t        }, true);\n\t        setTimeout(off, 0);\n\t      }\n\t    };\n\t  }\n\t  d3.mouse = function(container) {\n\t    return d3_mousePoint(container, d3_eventSource());\n\t  };\n\t  var d3_mouse_bug44083 = /WebKit/.test(d3_window.navigator.userAgent) ? -1 : 0;\n\t  function d3_mousePoint(container, e) {\n\t    if (e.changedTouches) e = e.changedTouches[0];\n\t    var svg = container.ownerSVGElement || container;\n\t    if (svg.createSVGPoint) {\n\t      var point = svg.createSVGPoint();\n\t      if (d3_mouse_bug44083 < 0 && (d3_window.scrollX || d3_window.scrollY)) {\n\t        svg = d3.select(\"body\").append(\"svg\").style({\n\t          position: \"absolute\",\n\t          top: 0,\n\t          left: 0,\n\t          margin: 0,\n\t          padding: 0,\n\t          border: \"none\"\n\t        }, \"important\");\n\t        var ctm = svg[0][0].getScreenCTM();\n\t        d3_mouse_bug44083 = !(ctm.f || ctm.e);\n\t        svg.remove();\n\t      }\n\t      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX, \n\t      point.y = e.clientY;\n\t      point = point.matrixTransform(container.getScreenCTM().inverse());\n\t      return [ point.x, point.y ];\n\t    }\n\t    var rect = container.getBoundingClientRect();\n\t    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];\n\t  }\n\t  d3.touch = function(container, touches, identifier) {\n\t    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;\n\t    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {\n\t      if ((touch = touches[i]).identifier === identifier) {\n\t        return d3_mousePoint(container, touch);\n\t      }\n\t    }\n\t  };\n\t  d3.behavior.drag = function() {\n\t    var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, d3_behavior_dragMouseSubject, \"mousemove\", \"mouseup\"), touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_behavior_dragTouchSubject, \"touchmove\", \"touchend\");\n\t    function drag() {\n\t      this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\n\t    }\n\t    function dragstart(id, position, subject, move, end) {\n\t      return function() {\n\t        var that = this, target = d3.event.target, parent = that.parentNode, dispatch = event.of(that, arguments), dragged = 0, dragId = id(), dragName = \".drag\" + (dragId == null ? \"\" : \"-\" + dragId), dragOffset, dragSubject = d3.select(subject()).on(move + dragName, moved).on(end + dragName, ended), dragRestore = d3_event_dragSuppress(), position0 = position(parent, dragId);\n\t        if (origin) {\n\t          dragOffset = origin.apply(that, arguments);\n\t          dragOffset = [ dragOffset.x - position0[0], dragOffset.y - position0[1] ];\n\t        } else {\n\t          dragOffset = [ 0, 0 ];\n\t        }\n\t        dispatch({\n\t          type: \"dragstart\"\n\t        });\n\t        function moved() {\n\t          var position1 = position(parent, dragId), dx, dy;\n\t          if (!position1) return;\n\t          dx = position1[0] - position0[0];\n\t          dy = position1[1] - position0[1];\n\t          dragged |= dx | dy;\n\t          position0 = position1;\n\t          dispatch({\n\t            type: \"drag\",\n\t            x: position1[0] + dragOffset[0],\n\t            y: position1[1] + dragOffset[1],\n\t            dx: dx,\n\t            dy: dy\n\t          });\n\t        }\n\t        function ended() {\n\t          if (!position(parent, dragId)) return;\n\t          dragSubject.on(move + dragName, null).on(end + dragName, null);\n\t          dragRestore(dragged && d3.event.target === target);\n\t          dispatch({\n\t            type: \"dragend\"\n\t          });\n\t        }\n\t      };\n\t    }\n\t    drag.origin = function(x) {\n\t      if (!arguments.length) return origin;\n\t      origin = x;\n\t      return drag;\n\t    };\n\t    return d3.rebind(drag, event, \"on\");\n\t  };\n\t  function d3_behavior_dragTouchId() {\n\t    return d3.event.changedTouches[0].identifier;\n\t  }\n\t  function d3_behavior_dragTouchSubject() {\n\t    return d3.event.target;\n\t  }\n\t  function d3_behavior_dragMouseSubject() {\n\t    return d3_window;\n\t  }\n\t  d3.touches = function(container, touches) {\n\t    if (arguments.length < 2) touches = d3_eventSource().touches;\n\t    return touches ? d3_array(touches).map(function(touch) {\n\t      var point = d3_mousePoint(container, touch);\n\t      point.identifier = touch.identifier;\n\t      return point;\n\t    }) : [];\n\t  };\n\t  var π = Math.PI, τ = 2 * π, halfπ = π / 2, ε = 1e-6, ε2 = ε * ε, d3_radians = π / 180, d3_degrees = 180 / π;\n\t  function d3_sgn(x) {\n\t    return x > 0 ? 1 : x < 0 ? -1 : 0;\n\t  }\n\t  function d3_cross2d(a, b, c) {\n\t    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n\t  }\n\t  function d3_acos(x) {\n\t    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n\t  }\n\t  function d3_asin(x) {\n\t    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\n\t  }\n\t  function d3_sinh(x) {\n\t    return ((x = Math.exp(x)) - 1 / x) / 2;\n\t  }\n\t  function d3_cosh(x) {\n\t    return ((x = Math.exp(x)) + 1 / x) / 2;\n\t  }\n\t  function d3_tanh(x) {\n\t    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n\t  }\n\t  function d3_haversin(x) {\n\t    return (x = Math.sin(x / 2)) * x;\n\t  }\n\t  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;\n\t  d3.interpolateZoom = function(p0, p1) {\n\t    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2];\n\t    var dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1), dr = r1 - r0, S = (dr || Math.log(w1 / w0)) / ρ;\n\t    function interpolate(t) {\n\t      var s = t * S;\n\t      if (dr) {\n\t        var coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\n\t        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];\n\t      }\n\t      return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * s) ];\n\t    }\n\t    interpolate.duration = S * 1e3;\n\t    return interpolate;\n\t  };\n\t  d3.behavior.zoom = function() {\n\t    var view = {\n\t      x: 0,\n\t      y: 0,\n\t      k: 1\n\t    }, translate0, center0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, mousedown = \"mousedown.zoom\", mousemove = \"mousemove.zoom\", mouseup = \"mouseup.zoom\", mousewheelTimer, touchstart = \"touchstart.zoom\", touchtime, event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"), x0, x1, y0, y1;\n\t    function zoom(g) {\n\t      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\n\t    }\n\t    zoom.event = function(g) {\n\t      g.each(function() {\n\t        var dispatch = event.of(this, arguments), view1 = view;\n\t        if (d3_transitionInheritId) {\n\t          d3.select(this).transition().each(\"start.zoom\", function() {\n\t            view = this.__chart__ || {\n\t              x: 0,\n\t              y: 0,\n\t              k: 1\n\t            };\n\t            zoomstarted(dispatch);\n\t          }).tween(\"zoom:zoom\", function() {\n\t            var dx = size[0], dy = size[1], cx = dx / 2, cy = dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);\n\t            return function(t) {\n\t              var l = i(t), k = dx / l[2];\n\t              this.__chart__ = view = {\n\t                x: cx - l[0] * k,\n\t                y: cy - l[1] * k,\n\t                k: k\n\t              };\n\t              zoomed(dispatch);\n\t            };\n\t          }).each(\"end.zoom\", function() {\n\t            zoomended(dispatch);\n\t          });\n\t        } else {\n\t          this.__chart__ = view;\n\t          zoomstarted(dispatch);\n\t          zoomed(dispatch);\n\t          zoomended(dispatch);\n\t        }\n\t      });\n\t    };\n\t    zoom.translate = function(_) {\n\t      if (!arguments.length) return [ view.x, view.y ];\n\t      view = {\n\t        x: +_[0],\n\t        y: +_[1],\n\t        k: view.k\n\t      };\n\t      rescale();\n\t      return zoom;\n\t    };\n\t    zoom.scale = function(_) {\n\t      if (!arguments.length) return view.k;\n\t      view = {\n\t        x: view.x,\n\t        y: view.y,\n\t        k: +_\n\t      };\n\t      rescale();\n\t      return zoom;\n\t    };\n\t    zoom.scaleExtent = function(_) {\n\t      if (!arguments.length) return scaleExtent;\n\t      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];\n\t      return zoom;\n\t    };\n\t    zoom.center = function(_) {\n\t      if (!arguments.length) return center;\n\t      center = _ && [ +_[0], +_[1] ];\n\t      return zoom;\n\t    };\n\t    zoom.size = function(_) {\n\t      if (!arguments.length) return size;\n\t      size = _ && [ +_[0], +_[1] ];\n\t      return zoom;\n\t    };\n\t    zoom.x = function(z) {\n\t      if (!arguments.length) return x1;\n\t      x1 = z;\n\t      x0 = z.copy();\n\t      view = {\n\t        x: 0,\n\t        y: 0,\n\t        k: 1\n\t      };\n\t      return zoom;\n\t    };\n\t    zoom.y = function(z) {\n\t      if (!arguments.length) return y1;\n\t      y1 = z;\n\t      y0 = z.copy();\n\t      view = {\n\t        x: 0,\n\t        y: 0,\n\t        k: 1\n\t      };\n\t      return zoom;\n\t    };\n\t    function location(p) {\n\t      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];\n\t    }\n\t    function point(l) {\n\t      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];\n\t    }\n\t    function scaleTo(s) {\n\t      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\n\t    }\n\t    function translateTo(p, l) {\n\t      l = point(l);\n\t      view.x += p[0] - l[0];\n\t      view.y += p[1] - l[1];\n\t    }\n\t    function rescale() {\n\t      if (x1) x1.domain(x0.range().map(function(x) {\n\t        return (x - view.x) / view.k;\n\t      }).map(x0.invert));\n\t      if (y1) y1.domain(y0.range().map(function(y) {\n\t        return (y - view.y) / view.k;\n\t      }).map(y0.invert));\n\t    }\n\t    function zoomstarted(dispatch) {\n\t      dispatch({\n\t        type: \"zoomstart\"\n\t      });\n\t    }\n\t    function zoomed(dispatch) {\n\t      rescale();\n\t      dispatch({\n\t        type: \"zoom\",\n\t        scale: view.k,\n\t        translate: [ view.x, view.y ]\n\t      });\n\t    }\n\t    function zoomended(dispatch) {\n\t      dispatch({\n\t        type: \"zoomend\"\n\t      });\n\t    }\n\t    function mousedowned() {\n\t      var that = this, target = d3.event.target, dispatch = event.of(that, arguments), dragged = 0, subject = d3.select(d3_window).on(mousemove, moved).on(mouseup, ended), location0 = location(d3.mouse(that)), dragRestore = d3_event_dragSuppress();\n\t      d3_selection_interrupt.call(that);\n\t      zoomstarted(dispatch);\n\t      function moved() {\n\t        dragged = 1;\n\t        translateTo(d3.mouse(that), location0);\n\t        zoomed(dispatch);\n\t      }\n\t      function ended() {\n\t        subject.on(mousemove, null).on(mouseup, null);\n\t        dragRestore(dragged && d3.event.target === target);\n\t        zoomended(dispatch);\n\t      }\n\t    }\n\t    function touchstarted() {\n\t      var that = this, dispatch = event.of(that, arguments), locations0 = {}, distance0 = 0, scale0, zoomName = \".zoom-\" + d3.event.changedTouches[0].identifier, touchmove = \"touchmove\" + zoomName, touchend = \"touchend\" + zoomName, targets = [], subject = d3.select(that), dragRestore = d3_event_dragSuppress();\n\t      d3_selection_interrupt.call(that);\n\t      started();\n\t      zoomstarted(dispatch);\n\t      subject.on(mousedown, null).on(touchstart, started);\n\t      function relocate() {\n\t        var touches = d3.touches(that);\n\t        scale0 = view.k;\n\t        touches.forEach(function(t) {\n\t          if (t.identifier in locations0) locations0[t.identifier] = location(t);\n\t        });\n\t        return touches;\n\t      }\n\t      function started() {\n\t        var target = d3.event.target;\n\t        d3.select(target).on(touchmove, moved).on(touchend, ended);\n\t        targets.push(target);\n\t        var changed = d3.event.changedTouches;\n\t        for (var i = 0, n = changed.length; i < n; ++i) {\n\t          locations0[changed[i].identifier] = null;\n\t        }\n\t        var touches = relocate(), now = Date.now();\n\t        if (touches.length === 1) {\n\t          if (now - touchtime < 500) {\n\t            var p = touches[0], l = locations0[p.identifier];\n\t            scaleTo(view.k * 2);\n\t            translateTo(p, l);\n\t            d3_eventPreventDefault();\n\t            zoomed(dispatch);\n\t          }\n\t          touchtime = now;\n\t        } else if (touches.length > 1) {\n\t          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];\n\t          distance0 = dx * dx + dy * dy;\n\t        }\n\t      }\n\t      function moved() {\n\t        var touches = d3.touches(that), p0, l0, p1, l1;\n\t        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\n\t          p1 = touches[i];\n\t          if (l1 = locations0[p1.identifier]) {\n\t            if (l0) break;\n\t            p0 = p1, l0 = l1;\n\t          }\n\t        }\n\t        if (l1) {\n\t          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);\n\t          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];\n\t          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];\n\t          scaleTo(scale1 * scale0);\n\t        }\n\t        touchtime = null;\n\t        translateTo(p0, l0);\n\t        zoomed(dispatch);\n\t      }\n\t      function ended() {\n\t        if (d3.event.touches.length) {\n\t          var changed = d3.event.changedTouches;\n\t          for (var i = 0, n = changed.length; i < n; ++i) {\n\t            delete locations0[changed[i].identifier];\n\t          }\n\t          for (var identifier in locations0) {\n\t            return void relocate();\n\t          }\n\t        }\n\t        d3.selectAll(targets).on(zoomName, null);\n\t        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);\n\t        dragRestore();\n\t        zoomended(dispatch);\n\t      }\n\t    }\n\t    function mousewheeled() {\n\t      var dispatch = event.of(this, arguments);\n\t      if (mousewheelTimer) clearTimeout(mousewheelTimer); else translate0 = location(center0 = center || d3.mouse(this)), \n\t      d3_selection_interrupt.call(this), zoomstarted(dispatch);\n\t      mousewheelTimer = setTimeout(function() {\n\t        mousewheelTimer = null;\n\t        zoomended(dispatch);\n\t      }, 50);\n\t      d3_eventPreventDefault();\n\t      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\n\t      translateTo(center0, translate0);\n\t      zoomed(dispatch);\n\t    }\n\t    function dblclicked() {\n\t      var dispatch = event.of(this, arguments), p = d3.mouse(this), l = location(p), k = Math.log(view.k) / Math.LN2;\n\t      zoomstarted(dispatch);\n\t      scaleTo(Math.pow(2, d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1));\n\t      translateTo(p, l);\n\t      zoomed(dispatch);\n\t      zoomended(dispatch);\n\t    }\n\t    return d3.rebind(zoom, event, \"on\");\n\t  };\n\t  var d3_behavior_zoomInfinity = [ 0, Infinity ];\n\t  var d3_behavior_zoomDelta, d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n\t    return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\n\t  }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n\t    return d3.event.wheelDelta;\n\t  }, \"mousewheel\") : (d3_behavior_zoomDelta = function() {\n\t    return -d3.event.detail;\n\t  }, \"MozMousePixelScroll\");\n\t  d3.color = d3_color;\n\t  function d3_color() {}\n\t  d3_color.prototype.toString = function() {\n\t    return this.rgb() + \"\";\n\t  };\n\t  d3.hsl = d3_hsl;\n\t  function d3_hsl(h, s, l) {\n\t    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);\n\t  }\n\t  var d3_hslPrototype = d3_hsl.prototype = new d3_color();\n\t  d3_hslPrototype.brighter = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    return new d3_hsl(this.h, this.s, this.l / k);\n\t  };\n\t  d3_hslPrototype.darker = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    return new d3_hsl(this.h, this.s, k * this.l);\n\t  };\n\t  d3_hslPrototype.rgb = function() {\n\t    return d3_hsl_rgb(this.h, this.s, this.l);\n\t  };\n\t  function d3_hsl_rgb(h, s, l) {\n\t    var m1, m2;\n\t    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n\t    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n\t    l = l < 0 ? 0 : l > 1 ? 1 : l;\n\t    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n\t    m1 = 2 * l - m2;\n\t    function v(h) {\n\t      if (h > 360) h -= 360; else if (h < 0) h += 360;\n\t      if (h < 60) return m1 + (m2 - m1) * h / 60;\n\t      if (h < 180) return m2;\n\t      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n\t      return m1;\n\t    }\n\t    function vv(h) {\n\t      return Math.round(v(h) * 255);\n\t    }\n\t    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n\t  }\n\t  d3.hcl = d3_hcl;\n\t  function d3_hcl(h, c, l) {\n\t    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);\n\t  }\n\t  var d3_hclPrototype = d3_hcl.prototype = new d3_color();\n\t  d3_hclPrototype.brighter = function(k) {\n\t    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n\t  };\n\t  d3_hclPrototype.darker = function(k) {\n\t    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n\t  };\n\t  d3_hclPrototype.rgb = function() {\n\t    return d3_hcl_lab(this.h, this.c, this.l).rgb();\n\t  };\n\t  function d3_hcl_lab(h, c, l) {\n\t    if (isNaN(h)) h = 0;\n\t    if (isNaN(c)) c = 0;\n\t    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n\t  }\n\t  d3.lab = d3_lab;\n\t  function d3_lab(l, a, b) {\n\t    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);\n\t  }\n\t  var d3_lab_K = 18;\n\t  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;\n\t  var d3_labPrototype = d3_lab.prototype = new d3_color();\n\t  d3_labPrototype.brighter = function(k) {\n\t    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n\t  };\n\t  d3_labPrototype.darker = function(k) {\n\t    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n\t  };\n\t  d3_labPrototype.rgb = function() {\n\t    return d3_lab_rgb(this.l, this.a, this.b);\n\t  };\n\t  function d3_lab_rgb(l, a, b) {\n\t    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;\n\t    x = d3_lab_xyz(x) * d3_lab_X;\n\t    y = d3_lab_xyz(y) * d3_lab_Y;\n\t    z = d3_lab_xyz(z) * d3_lab_Z;\n\t    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\n\t  }\n\t  function d3_lab_hcl(l, a, b) {\n\t    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);\n\t  }\n\t  function d3_lab_xyz(x) {\n\t    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n\t  }\n\t  function d3_xyz_lab(x) {\n\t    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n\t  }\n\t  function d3_xyz_rgb(r) {\n\t    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n\t  }\n\t  d3.rgb = d3_rgb;\n\t  function d3_rgb(r, g, b) {\n\t    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);\n\t  }\n\t  function d3_rgbNumber(value) {\n\t    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n\t  }\n\t  function d3_rgbString(value) {\n\t    return d3_rgbNumber(value) + \"\";\n\t  }\n\t  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();\n\t  d3_rgbPrototype.brighter = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    var r = this.r, g = this.g, b = this.b, i = 30;\n\t    if (!r && !g && !b) return new d3_rgb(i, i, i);\n\t    if (r && r < i) r = i;\n\t    if (g && g < i) g = i;\n\t    if (b && b < i) b = i;\n\t    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));\n\t  };\n\t  d3_rgbPrototype.darker = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    return new d3_rgb(k * this.r, k * this.g, k * this.b);\n\t  };\n\t  d3_rgbPrototype.hsl = function() {\n\t    return d3_rgb_hsl(this.r, this.g, this.b);\n\t  };\n\t  d3_rgbPrototype.toString = function() {\n\t    return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n\t  };\n\t  function d3_rgb_hex(v) {\n\t    return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n\t  }\n\t  function d3_rgb_parse(format, rgb, hsl) {\n\t    var r = 0, g = 0, b = 0, m1, m2, color;\n\t    m1 = /([a-z]+)\\((.*)\\)/i.exec(format);\n\t    if (m1) {\n\t      m2 = m1[2].split(\",\");\n\t      switch (m1[1]) {\n\t       case \"hsl\":\n\t        {\n\t          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n\t        }\n\n\t       case \"rgb\":\n\t        {\n\t          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\n\t        }\n\t      }\n\t    }\n\t    if (color = d3_rgb_names.get(format)) return rgb(color.r, color.g, color.b);\n\t    if (format != null && format.charAt(0) === \"#\" && !isNaN(color = parseInt(format.slice(1), 16))) {\n\t      if (format.length === 4) {\n\t        r = (color & 3840) >> 4;\n\t        r = r >> 4 | r;\n\t        g = color & 240;\n\t        g = g >> 4 | g;\n\t        b = color & 15;\n\t        b = b << 4 | b;\n\t      } else if (format.length === 7) {\n\t        r = (color & 16711680) >> 16;\n\t        g = (color & 65280) >> 8;\n\t        b = color & 255;\n\t      }\n\t    }\n\t    return rgb(r, g, b);\n\t  }\n\t  function d3_rgb_hsl(r, g, b) {\n\t    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;\n\t    if (d) {\n\t      s = l < .5 ? d / (max + min) : d / (2 - max - min);\n\t      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;\n\t      h *= 60;\n\t    } else {\n\t      h = NaN;\n\t      s = l > 0 && l < 1 ? 0 : h;\n\t    }\n\t    return new d3_hsl(h, s, l);\n\t  }\n\t  function d3_rgb_lab(r, g, b) {\n\t    r = d3_rgb_xyz(r);\n\t    g = d3_rgb_xyz(g);\n\t    b = d3_rgb_xyz(b);\n\t    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n\t    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n\t  }\n\t  function d3_rgb_xyz(r) {\n\t    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n\t  }\n\t  function d3_rgb_parseNumber(c) {\n\t    var f = parseFloat(c);\n\t    return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n\t  }\n\t  var d3_rgb_names = d3.map({\n\t    aliceblue: 15792383,\n\t    antiquewhite: 16444375,\n\t    aqua: 65535,\n\t    aquamarine: 8388564,\n\t    azure: 15794175,\n\t    beige: 16119260,\n\t    bisque: 16770244,\n\t    black: 0,\n\t    blanchedalmond: 16772045,\n\t    blue: 255,\n\t    blueviolet: 9055202,\n\t    brown: 10824234,\n\t    burlywood: 14596231,\n\t    cadetblue: 6266528,\n\t    chartreuse: 8388352,\n\t    chocolate: 13789470,\n\t    coral: 16744272,\n\t    cornflowerblue: 6591981,\n\t    cornsilk: 16775388,\n\t    crimson: 14423100,\n\t    cyan: 65535,\n\t    darkblue: 139,\n\t    darkcyan: 35723,\n\t    darkgoldenrod: 12092939,\n\t    darkgray: 11119017,\n\t    darkgreen: 25600,\n\t    darkgrey: 11119017,\n\t    darkkhaki: 12433259,\n\t    darkmagenta: 9109643,\n\t    darkolivegreen: 5597999,\n\t    darkorange: 16747520,\n\t    darkorchid: 10040012,\n\t    darkred: 9109504,\n\t    darksalmon: 15308410,\n\t    darkseagreen: 9419919,\n\t    darkslateblue: 4734347,\n\t    darkslategray: 3100495,\n\t    darkslategrey: 3100495,\n\t    darkturquoise: 52945,\n\t    darkviolet: 9699539,\n\t    deeppink: 16716947,\n\t    deepskyblue: 49151,\n\t    dimgray: 6908265,\n\t    dimgrey: 6908265,\n\t    dodgerblue: 2003199,\n\t    firebrick: 11674146,\n\t    floralwhite: 16775920,\n\t    forestgreen: 2263842,\n\t    fuchsia: 16711935,\n\t    gainsboro: 14474460,\n\t    ghostwhite: 16316671,\n\t    gold: 16766720,\n\t    goldenrod: 14329120,\n\t    gray: 8421504,\n\t    green: 32768,\n\t    greenyellow: 11403055,\n\t    grey: 8421504,\n\t    honeydew: 15794160,\n\t    hotpink: 16738740,\n\t    indianred: 13458524,\n\t    indigo: 4915330,\n\t    ivory: 16777200,\n\t    khaki: 15787660,\n\t    lavender: 15132410,\n\t    lavenderblush: 16773365,\n\t    lawngreen: 8190976,\n\t    lemonchiffon: 16775885,\n\t    lightblue: 11393254,\n\t    lightcoral: 15761536,\n\t    lightcyan: 14745599,\n\t    lightgoldenrodyellow: 16448210,\n\t    lightgray: 13882323,\n\t    lightgreen: 9498256,\n\t    lightgrey: 13882323,\n\t    lightpink: 16758465,\n\t    lightsalmon: 16752762,\n\t    lightseagreen: 2142890,\n\t    lightskyblue: 8900346,\n\t    lightslategray: 7833753,\n\t    lightslategrey: 7833753,\n\t    lightsteelblue: 11584734,\n\t    lightyellow: 16777184,\n\t    lime: 65280,\n\t    limegreen: 3329330,\n\t    linen: 16445670,\n\t    magenta: 16711935,\n\t    maroon: 8388608,\n\t    mediumaquamarine: 6737322,\n\t    mediumblue: 205,\n\t    mediumorchid: 12211667,\n\t    mediumpurple: 9662683,\n\t    mediumseagreen: 3978097,\n\t    mediumslateblue: 8087790,\n\t    mediumspringgreen: 64154,\n\t    mediumturquoise: 4772300,\n\t    mediumvioletred: 13047173,\n\t    midnightblue: 1644912,\n\t    mintcream: 16121850,\n\t    mistyrose: 16770273,\n\t    moccasin: 16770229,\n\t    navajowhite: 16768685,\n\t    navy: 128,\n\t    oldlace: 16643558,\n\t    olive: 8421376,\n\t    olivedrab: 7048739,\n\t    orange: 16753920,\n\t    orangered: 16729344,\n\t    orchid: 14315734,\n\t    palegoldenrod: 15657130,\n\t    palegreen: 10025880,\n\t    paleturquoise: 11529966,\n\t    palevioletred: 14381203,\n\t    papayawhip: 16773077,\n\t    peachpuff: 16767673,\n\t    peru: 13468991,\n\t    pink: 16761035,\n\t    plum: 14524637,\n\t    powderblue: 11591910,\n\t    purple: 8388736,\n\t    red: 16711680,\n\t    rosybrown: 12357519,\n\t    royalblue: 4286945,\n\t    saddlebrown: 9127187,\n\t    salmon: 16416882,\n\t    sandybrown: 16032864,\n\t    seagreen: 3050327,\n\t    seashell: 16774638,\n\t    sienna: 10506797,\n\t    silver: 12632256,\n\t    skyblue: 8900331,\n\t    slateblue: 6970061,\n\t    slategray: 7372944,\n\t    slategrey: 7372944,\n\t    snow: 16775930,\n\t    springgreen: 65407,\n\t    steelblue: 4620980,\n\t    tan: 13808780,\n\t    teal: 32896,\n\t    thistle: 14204888,\n\t    tomato: 16737095,\n\t    turquoise: 4251856,\n\t    violet: 15631086,\n\t    wheat: 16113331,\n\t    white: 16777215,\n\t    whitesmoke: 16119285,\n\t    yellow: 16776960,\n\t    yellowgreen: 10145074\n\t  });\n\t  d3_rgb_names.forEach(function(key, value) {\n\t    d3_rgb_names.set(key, d3_rgbNumber(value));\n\t  });\n\t  function d3_functor(v) {\n\t    return typeof v === \"function\" ? v : function() {\n\t      return v;\n\t    };\n\t  }\n\t  d3.functor = d3_functor;\n\t  function d3_identity(d) {\n\t    return d;\n\t  }\n\t  d3.xhr = d3_xhrType(d3_identity);\n\t  function d3_xhrType(response) {\n\t    return function(url, mimeType, callback) {\n\t      if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType, \n\t      mimeType = null;\n\t      return d3_xhr(url, mimeType, response, callback);\n\t    };\n\t  }\n\t  function d3_xhr(url, mimeType, response, callback) {\n\t    var xhr = {}, dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"), headers = {}, request = new XMLHttpRequest(), responseType = null;\n\t    if (d3_window.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n\t    \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {\n\t      request.readyState > 3 && respond();\n\t    };\n\t    function respond() {\n\t      var status = request.status, result;\n\t      if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n\t        try {\n\t          result = response.call(xhr, request);\n\t        } catch (e) {\n\t          dispatch.error.call(xhr, e);\n\t          return;\n\t        }\n\t        dispatch.load.call(xhr, result);\n\t      } else {\n\t        dispatch.error.call(xhr, request);\n\t      }\n\t    }\n\t    request.onprogress = function(event) {\n\t      var o = d3.event;\n\t      d3.event = event;\n\t      try {\n\t        dispatch.progress.call(xhr, request);\n\t      } finally {\n\t        d3.event = o;\n\t      }\n\t    };\n\t    xhr.header = function(name, value) {\n\t      name = (name + \"\").toLowerCase();\n\t      if (arguments.length < 2) return headers[name];\n\t      if (value == null) delete headers[name]; else headers[name] = value + \"\";\n\t      return xhr;\n\t    };\n\t    xhr.mimeType = function(value) {\n\t      if (!arguments.length) return mimeType;\n\t      mimeType = value == null ? null : value + \"\";\n\t      return xhr;\n\t    };\n\t    xhr.responseType = function(value) {\n\t      if (!arguments.length) return responseType;\n\t      responseType = value;\n\t      return xhr;\n\t    };\n\t    xhr.response = function(value) {\n\t      response = value;\n\t      return xhr;\n\t    };\n\t    [ \"get\", \"post\" ].forEach(function(method) {\n\t      xhr[method] = function() {\n\t        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));\n\t      };\n\t    });\n\t    xhr.send = function(method, data, callback) {\n\t      if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\n\t      request.open(method, url, true);\n\t      if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\n\t      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);\n\t      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\n\t      if (responseType != null) request.responseType = responseType;\n\t      if (callback != null) xhr.on(\"error\", callback).on(\"load\", function(request) {\n\t        callback(null, request);\n\t      });\n\t      dispatch.beforesend.call(xhr, request);\n\t      request.send(data == null ? null : data);\n\t      return xhr;\n\t    };\n\t    xhr.abort = function() {\n\t      request.abort();\n\t      return xhr;\n\t    };\n\t    d3.rebind(xhr, dispatch, \"on\");\n\t    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\n\t  }\n\t  function d3_xhr_fixCallback(callback) {\n\t    return callback.length === 1 ? function(error, request) {\n\t      callback(error == null ? request : null);\n\t    } : callback;\n\t  }\n\t  function d3_xhrHasResponse(request) {\n\t    var type = request.responseType;\n\t    return type && type !== \"text\" ? request.response : request.responseText;\n\t  }\n\t  d3.dsv = function(delimiter, mimeType) {\n\t    var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"), delimiterCode = delimiter.charCodeAt(0);\n\t    function dsv(url, row, callback) {\n\t      if (arguments.length < 3) callback = row, row = null;\n\t      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\n\t      xhr.row = function(_) {\n\t        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\n\t      };\n\t      return xhr;\n\t    }\n\t    function response(request) {\n\t      return dsv.parse(request.responseText);\n\t    }\n\t    function typedResponse(f) {\n\t      return function(request) {\n\t        return dsv.parse(request.responseText, f);\n\t      };\n\t    }\n\t    dsv.parse = function(text, f) {\n\t      var o;\n\t      return dsv.parseRows(text, function(row, i) {\n\t        if (o) return o(row, i - 1);\n\t        var a = new Function(\"d\", \"return {\" + row.map(function(name, i) {\n\t          return JSON.stringify(name) + \": d[\" + i + \"]\";\n\t        }).join(\",\") + \"}\");\n\t        o = f ? function(row, i) {\n\t          return f(a(row), i);\n\t        } : a;\n\t      });\n\t    };\n\t    dsv.parseRows = function(text, f) {\n\t      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;\n\t      function token() {\n\t        if (I >= N) return EOF;\n\t        if (eol) return eol = false, EOL;\n\t        var j = I;\n\t        if (text.charCodeAt(j) === 34) {\n\t          var i = j;\n\t          while (i++ < N) {\n\t            if (text.charCodeAt(i) === 34) {\n\t              if (text.charCodeAt(i + 1) !== 34) break;\n\t              ++i;\n\t            }\n\t          }\n\t          I = i + 2;\n\t          var c = text.charCodeAt(i + 1);\n\t          if (c === 13) {\n\t            eol = true;\n\t            if (text.charCodeAt(i + 2) === 10) ++I;\n\t          } else if (c === 10) {\n\t            eol = true;\n\t          }\n\t          return text.slice(j + 1, i).replace(/\"\"/g, '\"');\n\t        }\n\t        while (I < N) {\n\t          var c = text.charCodeAt(I++), k = 1;\n\t          if (c === 10) eol = true; else if (c === 13) {\n\t            eol = true;\n\t            if (text.charCodeAt(I) === 10) ++I, ++k;\n\t          } else if (c !== delimiterCode) continue;\n\t          return text.slice(j, I - k);\n\t        }\n\t        return text.slice(j);\n\t      }\n\t      while ((t = token()) !== EOF) {\n\t        var a = [];\n\t        while (t !== EOL && t !== EOF) {\n\t          a.push(t);\n\t          t = token();\n\t        }\n\t        if (f && (a = f(a, n++)) == null) continue;\n\t        rows.push(a);\n\t      }\n\t      return rows;\n\t    };\n\t    dsv.format = function(rows) {\n\t      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\n\t      var fieldSet = new d3_Set(), fields = [];\n\t      rows.forEach(function(row) {\n\t        for (var field in row) {\n\t          if (!fieldSet.has(field)) {\n\t            fields.push(fieldSet.add(field));\n\t          }\n\t        }\n\t      });\n\t      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {\n\t        return fields.map(function(field) {\n\t          return formatValue(row[field]);\n\t        }).join(delimiter);\n\t      })).join(\"\\n\");\n\t    };\n\t    dsv.formatRows = function(rows) {\n\t      return rows.map(formatRow).join(\"\\n\");\n\t    };\n\t    function formatRow(row) {\n\t      return row.map(formatValue).join(delimiter);\n\t    }\n\t    function formatValue(text) {\n\t      return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\n\t    }\n\t    return dsv;\n\t  };\n\t  d3.csv = d3.dsv(\",\", \"text/csv\");\n\t  d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\n\t  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_active, d3_timer_frame = d3_window[d3_vendorSymbol(d3_window, \"requestAnimationFrame\")] || function(callback) {\n\t    setTimeout(callback, 17);\n\t  };\n\t  d3.timer = function(callback, delay, then) {\n\t    var n = arguments.length;\n\t    if (n < 2) delay = 0;\n\t    if (n < 3) then = Date.now();\n\t    var time = then + delay, timer = {\n\t      c: callback,\n\t      t: time,\n\t      f: false,\n\t      n: null\n\t    };\n\t    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;\n\t    d3_timer_queueTail = timer;\n\t    if (!d3_timer_interval) {\n\t      d3_timer_timeout = clearTimeout(d3_timer_timeout);\n\t      d3_timer_interval = 1;\n\t      d3_timer_frame(d3_timer_step);\n\t    }\n\t  };\n\t  function d3_timer_step() {\n\t    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;\n\t    if (delay > 24) {\n\t      if (isFinite(delay)) {\n\t        clearTimeout(d3_timer_timeout);\n\t        d3_timer_timeout = setTimeout(d3_timer_step, delay);\n\t      }\n\t      d3_timer_interval = 0;\n\t    } else {\n\t      d3_timer_interval = 1;\n\t      d3_timer_frame(d3_timer_step);\n\t    }\n\t  }\n\t  d3.timer.flush = function() {\n\t    d3_timer_mark();\n\t    d3_timer_sweep();\n\t  };\n\t  function d3_timer_mark() {\n\t    var now = Date.now();\n\t    d3_timer_active = d3_timer_queueHead;\n\t    while (d3_timer_active) {\n\t      if (now >= d3_timer_active.t) d3_timer_active.f = d3_timer_active.c(now - d3_timer_active.t);\n\t      d3_timer_active = d3_timer_active.n;\n\t    }\n\t    return now;\n\t  }\n\t  function d3_timer_sweep() {\n\t    var t0, t1 = d3_timer_queueHead, time = Infinity;\n\t    while (t1) {\n\t      if (t1.f) {\n\t        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\n\t      } else {\n\t        if (t1.t < time) time = t1.t;\n\t        t1 = (t0 = t1).n;\n\t      }\n\t    }\n\t    d3_timer_queueTail = t0;\n\t    return time;\n\t  }\n\t  function d3_format_precision(x, p) {\n\t    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\n\t  }\n\t  d3.round = function(x, n) {\n\t    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n\t  };\n\t  var d3_formatPrefixes = [ \"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\" ].map(d3_formatPrefix);\n\t  d3.formatPrefix = function(value, precision) {\n\t    var i = 0;\n\t    if (value) {\n\t      if (value < 0) value *= -1;\n\t      if (precision) value = d3.round(value, d3_format_precision(value, precision));\n\t      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n\t      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));\n\t    }\n\t    return d3_formatPrefixes[8 + i / 3];\n\t  };\n\t  function d3_formatPrefix(d, i) {\n\t    var k = Math.pow(10, abs(8 - i) * 3);\n\t    return {\n\t      scale: i > 8 ? function(d) {\n\t        return d / k;\n\t      } : function(d) {\n\t        return d * k;\n\t      },\n\t      symbol: d\n\t    };\n\t  }\n\t  function d3_locale_numberFormat(locale) {\n\t    var locale_decimal = locale.decimal, locale_thousands = locale.thousands, locale_grouping = locale.grouping, locale_currency = locale.currency, formatGroup = locale_grouping && locale_thousands ? function(value, width) {\n\t      var i = value.length, t = [], j = 0, g = locale_grouping[0], length = 0;\n\t      while (i > 0 && g > 0) {\n\t        if (length + g + 1 > width) g = Math.max(1, width - length);\n\t        t.push(value.substring(i -= g, i + g));\n\t        if ((length += g + 1) > width) break;\n\t        g = locale_grouping[j = (j + 1) % locale_grouping.length];\n\t      }\n\t      return t.reverse().join(locale_thousands);\n\t    } : d3_identity;\n\t    return function(specifier) {\n\t      var match = d3_format_re.exec(specifier), fill = match[1] || \" \", align = match[2] || \">\", sign = match[3] || \"-\", symbol = match[4] || \"\", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, prefix = \"\", suffix = \"\", integer = false, exponent = true;\n\t      if (precision) precision = +precision.substring(1);\n\t      if (zfill || fill === \"0\" && align === \"=\") {\n\t        zfill = fill = \"0\";\n\t        align = \"=\";\n\t      }\n\t      switch (type) {\n\t       case \"n\":\n\t        comma = true;\n\t        type = \"g\";\n\t        break;\n\n\t       case \"%\":\n\t        scale = 100;\n\t        suffix = \"%\";\n\t        type = \"f\";\n\t        break;\n\n\t       case \"p\":\n\t        scale = 100;\n\t        suffix = \"%\";\n\t        type = \"r\";\n\t        break;\n\n\t       case \"b\":\n\t       case \"o\":\n\t       case \"x\":\n\t       case \"X\":\n\t        if (symbol === \"#\") prefix = \"0\" + type.toLowerCase();\n\n\t       case \"c\":\n\t        exponent = false;\n\n\t       case \"d\":\n\t        integer = true;\n\t        precision = 0;\n\t        break;\n\n\t       case \"s\":\n\t        scale = -1;\n\t        type = \"r\";\n\t        break;\n\t      }\n\t      if (symbol === \"$\") prefix = locale_currency[0], suffix = locale_currency[1];\n\t      if (type == \"r\" && !precision) type = \"g\";\n\t      if (precision != null) {\n\t        if (type == \"g\") precision = Math.max(1, Math.min(21, precision)); else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\n\t      }\n\t      type = d3_format_types.get(type) || d3_format_typeDefault;\n\t      var zcomma = zfill && comma;\n\t      return function(value) {\n\t        var fullSuffix = suffix;\n\t        if (integer && value % 1) return \"\";\n\t        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign === \"-\" ? \"\" : sign;\n\t        if (scale < 0) {\n\t          var unit = d3.formatPrefix(value, precision);\n\t          value = unit.scale(value);\n\t          fullSuffix = unit.symbol + suffix;\n\t        } else {\n\t          value *= scale;\n\t        }\n\t        value = type(value, precision);\n\t        var i = value.lastIndexOf(\".\"), before, after;\n\t        if (i < 0) {\n\t          var j = exponent ? value.lastIndexOf(\"e\") : -1;\n\t          if (j < 0) before = value, after = \"\"; else before = value.substring(0, j), after = value.substring(j);\n\t        } else {\n\t          before = value.substring(0, i);\n\t          after = locale_decimal + value.substring(i + 1);\n\t        }\n\t        if (!zfill && comma) before = formatGroup(before, Infinity);\n\t        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\n\t        if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);\n\t        negative += prefix;\n\t        value = before + after;\n\t        return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;\n\t      };\n\t    };\n\t  }\n\t  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\n\t  var d3_format_types = d3.map({\n\t    b: function(x) {\n\t      return x.toString(2);\n\t    },\n\t    c: function(x) {\n\t      return String.fromCharCode(x);\n\t    },\n\t    o: function(x) {\n\t      return x.toString(8);\n\t    },\n\t    x: function(x) {\n\t      return x.toString(16);\n\t    },\n\t    X: function(x) {\n\t      return x.toString(16).toUpperCase();\n\t    },\n\t    g: function(x, p) {\n\t      return x.toPrecision(p);\n\t    },\n\t    e: function(x, p) {\n\t      return x.toExponential(p);\n\t    },\n\t    f: function(x, p) {\n\t      return x.toFixed(p);\n\t    },\n\t    r: function(x, p) {\n\t      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\n\t    }\n\t  });\n\t  function d3_format_typeDefault(x) {\n\t    return x + \"\";\n\t  }\n\t  var d3_time = d3.time = {}, d3_date = Date;\n\t  function d3_date_utc() {\n\t    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\n\t  }\n\t  d3_date_utc.prototype = {\n\t    getDate: function() {\n\t      return this._.getUTCDate();\n\t    },\n\t    getDay: function() {\n\t      return this._.getUTCDay();\n\t    },\n\t    getFullYear: function() {\n\t      return this._.getUTCFullYear();\n\t    },\n\t    getHours: function() {\n\t      return this._.getUTCHours();\n\t    },\n\t    getMilliseconds: function() {\n\t      return this._.getUTCMilliseconds();\n\t    },\n\t    getMinutes: function() {\n\t      return this._.getUTCMinutes();\n\t    },\n\t    getMonth: function() {\n\t      return this._.getUTCMonth();\n\t    },\n\t    getSeconds: function() {\n\t      return this._.getUTCSeconds();\n\t    },\n\t    getTime: function() {\n\t      return this._.getTime();\n\t    },\n\t    getTimezoneOffset: function() {\n\t      return 0;\n\t    },\n\t    valueOf: function() {\n\t      return this._.valueOf();\n\t    },\n\t    setDate: function() {\n\t      d3_time_prototype.setUTCDate.apply(this._, arguments);\n\t    },\n\t    setDay: function() {\n\t      d3_time_prototype.setUTCDay.apply(this._, arguments);\n\t    },\n\t    setFullYear: function() {\n\t      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\n\t    },\n\t    setHours: function() {\n\t      d3_time_prototype.setUTCHours.apply(this._, arguments);\n\t    },\n\t    setMilliseconds: function() {\n\t      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\n\t    },\n\t    setMinutes: function() {\n\t      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\n\t    },\n\t    setMonth: function() {\n\t      d3_time_prototype.setUTCMonth.apply(this._, arguments);\n\t    },\n\t    setSeconds: function() {\n\t      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\n\t    },\n\t    setTime: function() {\n\t      d3_time_prototype.setTime.apply(this._, arguments);\n\t    }\n\t  };\n\t  var d3_time_prototype = Date.prototype;\n\t  function d3_time_interval(local, step, number) {\n\t    function round(date) {\n\t      var d0 = local(date), d1 = offset(d0, 1);\n\t      return date - d0 < d1 - date ? d0 : d1;\n\t    }\n\t    function ceil(date) {\n\t      step(date = local(new d3_date(date - 1)), 1);\n\t      return date;\n\t    }\n\t    function offset(date, k) {\n\t      step(date = new d3_date(+date), k);\n\t      return date;\n\t    }\n\t    function range(t0, t1, dt) {\n\t      var time = ceil(t0), times = [];\n\t      if (dt > 1) {\n\t        while (time < t1) {\n\t          if (!(number(time) % dt)) times.push(new Date(+time));\n\t          step(time, 1);\n\t        }\n\t      } else {\n\t        while (time < t1) times.push(new Date(+time)), step(time, 1);\n\t      }\n\t      return times;\n\t    }\n\t    function range_utc(t0, t1, dt) {\n\t      try {\n\t        d3_date = d3_date_utc;\n\t        var utc = new d3_date_utc();\n\t        utc._ = t0;\n\t        return range(utc, t1, dt);\n\t      } finally {\n\t        d3_date = Date;\n\t      }\n\t    }\n\t    local.floor = local;\n\t    local.round = round;\n\t    local.ceil = ceil;\n\t    local.offset = offset;\n\t    local.range = range;\n\t    var utc = local.utc = d3_time_interval_utc(local);\n\t    utc.floor = utc;\n\t    utc.round = d3_time_interval_utc(round);\n\t    utc.ceil = d3_time_interval_utc(ceil);\n\t    utc.offset = d3_time_interval_utc(offset);\n\t    utc.range = range_utc;\n\t    return local;\n\t  }\n\t  function d3_time_interval_utc(method) {\n\t    return function(date, k) {\n\t      try {\n\t        d3_date = d3_date_utc;\n\t        var utc = new d3_date_utc();\n\t        utc._ = date;\n\t        return method(utc, k)._;\n\t      } finally {\n\t        d3_date = Date;\n\t      }\n\t    };\n\t  }\n\t  d3_time.year = d3_time_interval(function(date) {\n\t    date = d3_time.day(date);\n\t    date.setMonth(0, 1);\n\t    return date;\n\t  }, function(date, offset) {\n\t    date.setFullYear(date.getFullYear() + offset);\n\t  }, function(date) {\n\t    return date.getFullYear();\n\t  });\n\t  d3_time.years = d3_time.year.range;\n\t  d3_time.years.utc = d3_time.year.utc.range;\n\t  d3_time.day = d3_time_interval(function(date) {\n\t    var day = new d3_date(2e3, 0);\n\t    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n\t    return day;\n\t  }, function(date, offset) {\n\t    date.setDate(date.getDate() + offset);\n\t  }, function(date) {\n\t    return date.getDate() - 1;\n\t  });\n\t  d3_time.days = d3_time.day.range;\n\t  d3_time.days.utc = d3_time.day.utc.range;\n\t  d3_time.dayOfYear = function(date) {\n\t    var year = d3_time.year(date);\n\t    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\n\t  };\n\t  [ \"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\" ].forEach(function(day, i) {\n\t    i = 7 - i;\n\t    var interval = d3_time[day] = d3_time_interval(function(date) {\n\t      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\n\t      return date;\n\t    }, function(date, offset) {\n\t      date.setDate(date.getDate() + Math.floor(offset) * 7);\n\t    }, function(date) {\n\t      var day = d3_time.year(date).getDay();\n\t      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\n\t    });\n\t    d3_time[day + \"s\"] = interval.range;\n\t    d3_time[day + \"s\"].utc = interval.utc.range;\n\t    d3_time[day + \"OfYear\"] = function(date) {\n\t      var day = d3_time.year(date).getDay();\n\t      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\n\t    };\n\t  });\n\t  d3_time.week = d3_time.sunday;\n\t  d3_time.weeks = d3_time.sunday.range;\n\t  d3_time.weeks.utc = d3_time.sunday.utc.range;\n\t  d3_time.weekOfYear = d3_time.sundayOfYear;\n\t  function d3_locale_timeFormat(locale) {\n\t    var locale_dateTime = locale.dateTime, locale_date = locale.date, locale_time = locale.time, locale_periods = locale.periods, locale_days = locale.days, locale_shortDays = locale.shortDays, locale_months = locale.months, locale_shortMonths = locale.shortMonths;\n\t    function d3_time_format(template) {\n\t      var n = template.length;\n\t      function format(date) {\n\t        var string = [], i = -1, j = 0, c, p, f;\n\t        while (++i < n) {\n\t          if (template.charCodeAt(i) === 37) {\n\t            string.push(template.slice(j, i));\n\t            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\n\t            if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\n\t            string.push(c);\n\t            j = i + 1;\n\t          }\n\t        }\n\t        string.push(template.slice(j, i));\n\t        return string.join(\"\");\n\t      }\n\t      format.parse = function(string) {\n\t        var d = {\n\t          y: 1900,\n\t          m: 0,\n\t          d: 1,\n\t          H: 0,\n\t          M: 0,\n\t          S: 0,\n\t          L: 0,\n\t          Z: null\n\t        }, i = d3_time_parse(d, template, string, 0);\n\t        if (i != string.length) return null;\n\t        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\t        var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();\n\t        if (\"j\" in d) date.setFullYear(d.y, 0, d.j); else if (\"w\" in d && (\"W\" in d || \"U\" in d)) {\n\t          date.setFullYear(d.y, 0, 1);\n\t          date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\n\t        } else date.setFullYear(d.y, d.m, d.d);\n\t        date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);\n\t        return localZ ? date._ : date;\n\t      };\n\t      format.toString = function() {\n\t        return template;\n\t      };\n\t      return format;\n\t    }\n\t    function d3_time_parse(date, template, string, j) {\n\t      var c, p, t, i = 0, n = template.length, m = string.length;\n\t      while (i < n) {\n\t        if (j >= m) return -1;\n\t        c = template.charCodeAt(i++);\n\t        if (c === 37) {\n\t          t = template.charAt(i++);\n\t          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\n\t          if (!p || (j = p(date, string, j)) < 0) return -1;\n\t        } else if (c != string.charCodeAt(j++)) {\n\t          return -1;\n\t        }\n\t      }\n\t      return j;\n\t    }\n\t    d3_time_format.utc = function(template) {\n\t      var local = d3_time_format(template);\n\t      function format(date) {\n\t        try {\n\t          d3_date = d3_date_utc;\n\t          var utc = new d3_date();\n\t          utc._ = date;\n\t          return local(utc);\n\t        } finally {\n\t          d3_date = Date;\n\t        }\n\t      }\n\t      format.parse = function(string) {\n\t        try {\n\t          d3_date = d3_date_utc;\n\t          var date = local.parse(string);\n\t          return date && date._;\n\t        } finally {\n\t          d3_date = Date;\n\t        }\n\t      };\n\t      format.toString = local.toString;\n\t      return format;\n\t    };\n\t    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;\n\t    var d3_time_periodLookup = d3.map(), d3_time_dayRe = d3_time_formatRe(locale_days), d3_time_dayLookup = d3_time_formatLookup(locale_days), d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays), d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays), d3_time_monthRe = d3_time_formatRe(locale_months), d3_time_monthLookup = d3_time_formatLookup(locale_months), d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths), d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);\n\t    locale_periods.forEach(function(p, i) {\n\t      d3_time_periodLookup.set(p.toLowerCase(), i);\n\t    });\n\t    var d3_time_formats = {\n\t      a: function(d) {\n\t        return locale_shortDays[d.getDay()];\n\t      },\n\t      A: function(d) {\n\t        return locale_days[d.getDay()];\n\t      },\n\t      b: function(d) {\n\t        return locale_shortMonths[d.getMonth()];\n\t      },\n\t      B: function(d) {\n\t        return locale_months[d.getMonth()];\n\t      },\n\t      c: d3_time_format(locale_dateTime),\n\t      d: function(d, p) {\n\t        return d3_time_formatPad(d.getDate(), p, 2);\n\t      },\n\t      e: function(d, p) {\n\t        return d3_time_formatPad(d.getDate(), p, 2);\n\t      },\n\t      H: function(d, p) {\n\t        return d3_time_formatPad(d.getHours(), p, 2);\n\t      },\n\t      I: function(d, p) {\n\t        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\n\t      },\n\t      j: function(d, p) {\n\t        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\n\t      },\n\t      L: function(d, p) {\n\t        return d3_time_formatPad(d.getMilliseconds(), p, 3);\n\t      },\n\t      m: function(d, p) {\n\t        return d3_time_formatPad(d.getMonth() + 1, p, 2);\n\t      },\n\t      M: function(d, p) {\n\t        return d3_time_formatPad(d.getMinutes(), p, 2);\n\t      },\n\t      p: function(d) {\n\t        return locale_periods[+(d.getHours() >= 12)];\n\t      },\n\t      S: function(d, p) {\n\t        return d3_time_formatPad(d.getSeconds(), p, 2);\n\t      },\n\t      U: function(d, p) {\n\t        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\n\t      },\n\t      w: function(d) {\n\t        return d.getDay();\n\t      },\n\t      W: function(d, p) {\n\t        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\n\t      },\n\t      x: d3_time_format(locale_date),\n\t      X: d3_time_format(locale_time),\n\t      y: function(d, p) {\n\t        return d3_time_formatPad(d.getFullYear() % 100, p, 2);\n\t      },\n\t      Y: function(d, p) {\n\t        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\n\t      },\n\t      Z: d3_time_zone,\n\t      \"%\": function() {\n\t        return \"%\";\n\t      }\n\t    };\n\t    var d3_time_parsers = {\n\t      a: d3_time_parseWeekdayAbbrev,\n\t      A: d3_time_parseWeekday,\n\t      b: d3_time_parseMonthAbbrev,\n\t      B: d3_time_parseMonth,\n\t      c: d3_time_parseLocaleFull,\n\t      d: d3_time_parseDay,\n\t      e: d3_time_parseDay,\n\t      H: d3_time_parseHour24,\n\t      I: d3_time_parseHour24,\n\t      j: d3_time_parseDayOfYear,\n\t      L: d3_time_parseMilliseconds,\n\t      m: d3_time_parseMonthNumber,\n\t      M: d3_time_parseMinutes,\n\t      p: d3_time_parseAmPm,\n\t      S: d3_time_parseSeconds,\n\t      U: d3_time_parseWeekNumberSunday,\n\t      w: d3_time_parseWeekdayNumber,\n\t      W: d3_time_parseWeekNumberMonday,\n\t      x: d3_time_parseLocaleDate,\n\t      X: d3_time_parseLocaleTime,\n\t      y: d3_time_parseYear,\n\t      Y: d3_time_parseFullYear,\n\t      Z: d3_time_parseZone,\n\t      \"%\": d3_time_parseLiteralPercent\n\t    };\n\t    function d3_time_parseWeekdayAbbrev(date, string, i) {\n\t      d3_time_dayAbbrevRe.lastIndex = 0;\n\t      var n = d3_time_dayAbbrevRe.exec(string.slice(i));\n\t      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t    }\n\t    function d3_time_parseWeekday(date, string, i) {\n\t      d3_time_dayRe.lastIndex = 0;\n\t      var n = d3_time_dayRe.exec(string.slice(i));\n\t      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t    }\n\t    function d3_time_parseMonthAbbrev(date, string, i) {\n\t      d3_time_monthAbbrevRe.lastIndex = 0;\n\t      var n = d3_time_monthAbbrevRe.exec(string.slice(i));\n\t      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t    }\n\t    function d3_time_parseMonth(date, string, i) {\n\t      d3_time_monthRe.lastIndex = 0;\n\t      var n = d3_time_monthRe.exec(string.slice(i));\n\t      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t    }\n\t    function d3_time_parseLocaleFull(date, string, i) {\n\t      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\n\t    }\n\t    function d3_time_parseLocaleDate(date, string, i) {\n\t      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\n\t    }\n\t    function d3_time_parseLocaleTime(date, string, i) {\n\t      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\n\t    }\n\t    function d3_time_parseAmPm(date, string, i) {\n\t      var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());\n\t      return n == null ? -1 : (date.p = n, i);\n\t    }\n\t    return d3_time_format;\n\t  }\n\t  var d3_time_formatPads = {\n\t    \"-\": \"\",\n\t    _: \" \",\n\t    \"0\": \"0\"\n\t  }, d3_time_numberRe = /^\\s*\\d+/, d3_time_percentRe = /^%/;\n\t  function d3_time_formatPad(value, fill, width) {\n\t    var sign = value < 0 ? \"-\" : \"\", string = (sign ? -value : value) + \"\", length = string.length;\n\t    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n\t  }\n\t  function d3_time_formatRe(names) {\n\t    return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\n\t  }\n\t  function d3_time_formatLookup(names) {\n\t    var map = new d3_Map(), i = -1, n = names.length;\n\t    while (++i < n) map.set(names[i].toLowerCase(), i);\n\t    return map;\n\t  }\n\t  function d3_time_parseWeekdayNumber(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 1));\n\t    return n ? (date.w = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseWeekNumberSunday(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i));\n\t    return n ? (date.U = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseWeekNumberMonday(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i));\n\t    return n ? (date.W = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseFullYear(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 4));\n\t    return n ? (date.y = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseYear(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseZone(date, string, i) {\n\t    return /^[+-]\\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, \n\t    i + 5) : -1;\n\t  }\n\t  function d3_time_expandYear(d) {\n\t    return d + (d > 68 ? 1900 : 2e3);\n\t  }\n\t  function d3_time_parseMonthNumber(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseDay(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.d = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseDayOfYear(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n\t    return n ? (date.j = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseHour24(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.H = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseMinutes(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.M = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseSeconds(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.S = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseMilliseconds(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n\t    return n ? (date.L = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_zone(d) {\n\t    var z = d.getTimezoneOffset(), zs = z > 0 ? \"-\" : \"+\", zh = abs(z) / 60 | 0, zm = abs(z) % 60;\n\t    return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\n\t  }\n\t  function d3_time_parseLiteralPercent(date, string, i) {\n\t    d3_time_percentRe.lastIndex = 0;\n\t    var n = d3_time_percentRe.exec(string.slice(i, i + 1));\n\t    return n ? i + n[0].length : -1;\n\t  }\n\t  function d3_time_formatMulti(formats) {\n\t    var n = formats.length, i = -1;\n\t    while (++i < n) formats[i][0] = this(formats[i][0]);\n\t    return function(date) {\n\t      var i = 0, f = formats[i];\n\t      while (!f[1](date)) f = formats[++i];\n\t      return f[0](date);\n\t    };\n\t  }\n\t  d3.locale = function(locale) {\n\t    return {\n\t      numberFormat: d3_locale_numberFormat(locale),\n\t      timeFormat: d3_locale_timeFormat(locale)\n\t    };\n\t  };\n\t  var d3_locale_enUS = d3.locale({\n\t    decimal: \".\",\n\t    thousands: \",\",\n\t    grouping: [ 3 ],\n\t    currency: [ \"$\", \"\" ],\n\t    dateTime: \"%a %b %e %X %Y\",\n\t    date: \"%m/%d/%Y\",\n\t    time: \"%H:%M:%S\",\n\t    periods: [ \"AM\", \"PM\" ],\n\t    days: [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ],\n\t    shortDays: [ \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\" ],\n\t    months: [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ],\n\t    shortMonths: [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ]\n\t  });\n\t  d3.format = d3_locale_enUS.numberFormat;\n\t  d3.geo = {};\n\t  function d3_adder() {}\n\t  d3_adder.prototype = {\n\t    s: 0,\n\t    t: 0,\n\t    add: function(y) {\n\t      d3_adderSum(y, this.t, d3_adderTemp);\n\t      d3_adderSum(d3_adderTemp.s, this.s, this);\n\t      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;\n\t    },\n\t    reset: function() {\n\t      this.s = this.t = 0;\n\t    },\n\t    valueOf: function() {\n\t      return this.s;\n\t    }\n\t  };\n\t  var d3_adderTemp = new d3_adder();\n\t  function d3_adderSum(a, b, o) {\n\t    var x = o.s = a + b, bv = x - a, av = x - bv;\n\t    o.t = a - av + (b - bv);\n\t  }\n\t  d3.geo.stream = function(object, listener) {\n\t    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\n\t      d3_geo_streamObjectType[object.type](object, listener);\n\t    } else {\n\t      d3_geo_streamGeometry(object, listener);\n\t    }\n\t  };\n\t  function d3_geo_streamGeometry(geometry, listener) {\n\t    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\n\t      d3_geo_streamGeometryType[geometry.type](geometry, listener);\n\t    }\n\t  }\n\t  var d3_geo_streamObjectType = {\n\t    Feature: function(feature, listener) {\n\t      d3_geo_streamGeometry(feature.geometry, listener);\n\t    },\n\t    FeatureCollection: function(object, listener) {\n\t      var features = object.features, i = -1, n = features.length;\n\t      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);\n\t    }\n\t  };\n\t  var d3_geo_streamGeometryType = {\n\t    Sphere: function(object, listener) {\n\t      listener.sphere();\n\t    },\n\t    Point: function(object, listener) {\n\t      object = object.coordinates;\n\t      listener.point(object[0], object[1], object[2]);\n\t    },\n\t    MultiPoint: function(object, listener) {\n\t      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);\n\t    },\n\t    LineString: function(object, listener) {\n\t      d3_geo_streamLine(object.coordinates, listener, 0);\n\t    },\n\t    MultiLineString: function(object, listener) {\n\t      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);\n\t    },\n\t    Polygon: function(object, listener) {\n\t      d3_geo_streamPolygon(object.coordinates, listener);\n\t    },\n\t    MultiPolygon: function(object, listener) {\n\t      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);\n\t    },\n\t    GeometryCollection: function(object, listener) {\n\t      var geometries = object.geometries, i = -1, n = geometries.length;\n\t      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);\n\t    }\n\t  };\n\t  function d3_geo_streamLine(coordinates, listener, closed) {\n\t    var i = -1, n = coordinates.length - closed, coordinate;\n\t    listener.lineStart();\n\t    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\n\t    listener.lineEnd();\n\t  }\n\t  function d3_geo_streamPolygon(coordinates, listener) {\n\t    var i = -1, n = coordinates.length;\n\t    listener.polygonStart();\n\t    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);\n\t    listener.polygonEnd();\n\t  }\n\t  d3.geo.area = function(object) {\n\t    d3_geo_areaSum = 0;\n\t    d3.geo.stream(object, d3_geo_area);\n\t    return d3_geo_areaSum;\n\t  };\n\t  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();\n\t  var d3_geo_area = {\n\t    sphere: function() {\n\t      d3_geo_areaSum += 4 * π;\n\t    },\n\t    point: d3_noop,\n\t    lineStart: d3_noop,\n\t    lineEnd: d3_noop,\n\t    polygonStart: function() {\n\t      d3_geo_areaRingSum.reset();\n\t      d3_geo_area.lineStart = d3_geo_areaRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      var area = 2 * d3_geo_areaRingSum;\n\t      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\n\t      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\n\t    }\n\t  };\n\t  function d3_geo_areaRingStart() {\n\t    var λ00, φ00, λ0, cosφ0, sinφ0;\n\t    d3_geo_area.point = function(λ, φ) {\n\t      d3_geo_area.point = nextPoint;\n\t      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), \n\t      sinφ0 = Math.sin(φ);\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      λ *= d3_radians;\n\t      φ = φ * d3_radians / 2 + π / 4;\n\t      var dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(adλ), v = k * sdλ * Math.sin(adλ);\n\t      d3_geo_areaRingSum.add(Math.atan2(v, u));\n\t      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n\t    }\n\t    d3_geo_area.lineEnd = function() {\n\t      nextPoint(λ00, φ00);\n\t    };\n\t  }\n\t  function d3_geo_cartesian(spherical) {\n\t    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);\n\t    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];\n\t  }\n\t  function d3_geo_cartesianDot(a, b) {\n\t    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n\t  }\n\t  function d3_geo_cartesianCross(a, b) {\n\t    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];\n\t  }\n\t  function d3_geo_cartesianAdd(a, b) {\n\t    a[0] += b[0];\n\t    a[1] += b[1];\n\t    a[2] += b[2];\n\t  }\n\t  function d3_geo_cartesianScale(vector, k) {\n\t    return [ vector[0] * k, vector[1] * k, vector[2] * k ];\n\t  }\n\t  function d3_geo_cartesianNormalize(d) {\n\t    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n\t    d[0] /= l;\n\t    d[1] /= l;\n\t    d[2] /= l;\n\t  }\n\t  function d3_geo_spherical(cartesian) {\n\t    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];\n\t  }\n\t  function d3_geo_sphericalEqual(a, b) {\n\t    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\n\t  }\n\t  d3.geo.bounds = function() {\n\t    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\n\t    var bound = {\n\t      point: point,\n\t      lineStart: lineStart,\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() {\n\t        bound.point = ringPoint;\n\t        bound.lineStart = ringStart;\n\t        bound.lineEnd = ringEnd;\n\t        dλSum = 0;\n\t        d3_geo_area.polygonStart();\n\t      },\n\t      polygonEnd: function() {\n\t        d3_geo_area.polygonEnd();\n\t        bound.point = point;\n\t        bound.lineStart = lineStart;\n\t        bound.lineEnd = lineEnd;\n\t        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;\n\t        range[0] = λ0, range[1] = λ1;\n\t      }\n\t    };\n\t    function point(λ, φ) {\n\t      ranges.push(range = [ λ0 = λ, λ1 = λ ]);\n\t      if (φ < φ0) φ0 = φ;\n\t      if (φ > φ1) φ1 = φ;\n\t    }\n\t    function linePoint(λ, φ) {\n\t      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);\n\t      if (p0) {\n\t        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);\n\t        d3_geo_cartesianNormalize(inflection);\n\t        inflection = d3_geo_spherical(inflection);\n\t        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;\n\t        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n\t          var φi = inflection[1] * d3_degrees;\n\t          if (φi > φ1) φ1 = φi;\n\t        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n\t          var φi = -inflection[1] * d3_degrees;\n\t          if (φi < φ0) φ0 = φi;\n\t        } else {\n\t          if (φ < φ0) φ0 = φ;\n\t          if (φ > φ1) φ1 = φ;\n\t        }\n\t        if (antimeridian) {\n\t          if (λ < λ_) {\n\t            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n\t          } else {\n\t            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n\t          }\n\t        } else {\n\t          if (λ1 >= λ0) {\n\t            if (λ < λ0) λ0 = λ;\n\t            if (λ > λ1) λ1 = λ;\n\t          } else {\n\t            if (λ > λ_) {\n\t              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n\t            } else {\n\t              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n\t            }\n\t          }\n\t        }\n\t      } else {\n\t        point(λ, φ);\n\t      }\n\t      p0 = p, λ_ = λ;\n\t    }\n\t    function lineStart() {\n\t      bound.point = linePoint;\n\t    }\n\t    function lineEnd() {\n\t      range[0] = λ0, range[1] = λ1;\n\t      bound.point = point;\n\t      p0 = null;\n\t    }\n\t    function ringPoint(λ, φ) {\n\t      if (p0) {\n\t        var dλ = λ - λ_;\n\t        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\n\t      } else λ__ = λ, φ__ = φ;\n\t      d3_geo_area.point(λ, φ);\n\t      linePoint(λ, φ);\n\t    }\n\t    function ringStart() {\n\t      d3_geo_area.lineStart();\n\t    }\n\t    function ringEnd() {\n\t      ringPoint(λ__, φ__);\n\t      d3_geo_area.lineEnd();\n\t      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\n\t      range[0] = λ0, range[1] = λ1;\n\t      p0 = null;\n\t    }\n\t    function angle(λ0, λ1) {\n\t      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\n\t    }\n\t    function compareRanges(a, b) {\n\t      return a[0] - b[0];\n\t    }\n\t    function withinRange(x, range) {\n\t      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n\t    }\n\t    return function(feature) {\n\t      φ1 = λ1 = -(λ0 = φ0 = Infinity);\n\t      ranges = [];\n\t      d3.geo.stream(feature, bound);\n\t      var n = ranges.length;\n\t      if (n) {\n\t        ranges.sort(compareRanges);\n\t        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {\n\t          b = ranges[i];\n\t          if (withinRange(b[0], a) || withinRange(b[1], a)) {\n\t            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n\t            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n\t          } else {\n\t            merged.push(a = b);\n\t          }\n\t        }\n\t        var best = -Infinity, dλ;\n\t        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\n\t          b = merged[i];\n\t          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\n\t        }\n\t      }\n\t      ranges = range = null;\n\t      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];\n\t    };\n\t  }();\n\t  d3.geo.centroid = function(object) {\n\t    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n\t    d3.geo.stream(object, d3_geo_centroid);\n\t    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;\n\t    if (m < ε2) {\n\t      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\n\t      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\n\t      m = x * x + y * y + z * z;\n\t      if (m < ε2) return [ NaN, NaN ];\n\t    }\n\t    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];\n\t  };\n\t  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\n\t  var d3_geo_centroid = {\n\t    sphere: d3_noop,\n\t    point: d3_geo_centroidPoint,\n\t    lineStart: d3_geo_centroidLineStart,\n\t    lineEnd: d3_geo_centroidLineEnd,\n\t    polygonStart: function() {\n\t      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\n\t    }\n\t  };\n\t  function d3_geo_centroidPoint(λ, φ) {\n\t    λ *= d3_radians;\n\t    var cosφ = Math.cos(φ *= d3_radians);\n\t    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\n\t  }\n\t  function d3_geo_centroidPointXYZ(x, y, z) {\n\t    ++d3_geo_centroidW0;\n\t    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\n\t    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\n\t    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\n\t  }\n\t  function d3_geo_centroidLineStart() {\n\t    var x0, y0, z0;\n\t    d3_geo_centroid.point = function(λ, φ) {\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians);\n\t      x0 = cosφ * Math.cos(λ);\n\t      y0 = cosφ * Math.sin(λ);\n\t      z0 = Math.sin(φ);\n\t      d3_geo_centroid.point = nextPoint;\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n\t      d3_geo_centroidW1 += w;\n\t      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n\t      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n\t      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    }\n\t  }\n\t  function d3_geo_centroidLineEnd() {\n\t    d3_geo_centroid.point = d3_geo_centroidPoint;\n\t  }\n\t  function d3_geo_centroidRingStart() {\n\t    var λ00, φ00, x0, y0, z0;\n\t    d3_geo_centroid.point = function(λ, φ) {\n\t      λ00 = λ, φ00 = φ;\n\t      d3_geo_centroid.point = nextPoint;\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians);\n\t      x0 = cosφ * Math.cos(λ);\n\t      y0 = cosφ * Math.sin(λ);\n\t      z0 = Math.sin(φ);\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    };\n\t    d3_geo_centroid.lineEnd = function() {\n\t      nextPoint(λ00, φ00);\n\t      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\n\t      d3_geo_centroid.point = d3_geo_centroidPoint;\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);\n\t      d3_geo_centroidX2 += v * cx;\n\t      d3_geo_centroidY2 += v * cy;\n\t      d3_geo_centroidZ2 += v * cz;\n\t      d3_geo_centroidW1 += w;\n\t      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n\t      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n\t      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    }\n\t  }\n\t  function d3_true() {\n\t    return true;\n\t  }\n\t  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\n\t    var subject = [], clip = [];\n\t    segments.forEach(function(segment) {\n\t      if ((n = segment.length - 1) <= 0) return;\n\t      var n, p0 = segment[0], p1 = segment[n];\n\t      if (d3_geo_sphericalEqual(p0, p1)) {\n\t        listener.lineStart();\n\t        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);\n\t        listener.lineEnd();\n\t        return;\n\t      }\n\t      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\n\t      a.o = b;\n\t      subject.push(a);\n\t      clip.push(b);\n\t      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\n\t      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\n\t      a.o = b;\n\t      subject.push(a);\n\t      clip.push(b);\n\t    });\n\t    clip.sort(compare);\n\t    d3_geo_clipPolygonLinkCircular(subject);\n\t    d3_geo_clipPolygonLinkCircular(clip);\n\t    if (!subject.length) return;\n\t    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\n\t      clip[i].e = entry = !entry;\n\t    }\n\t    var start = subject[0], points, point;\n\t    while (1) {\n\t      var current = start, isSubject = true;\n\t      while (current.v) if ((current = current.n) === start) return;\n\t      points = current.z;\n\t      listener.lineStart();\n\t      do {\n\t        current.v = current.o.v = true;\n\t        if (current.e) {\n\t          if (isSubject) {\n\t            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);\n\t          } else {\n\t            interpolate(current.x, current.n.x, 1, listener);\n\t          }\n\t          current = current.n;\n\t        } else {\n\t          if (isSubject) {\n\t            points = current.p.z;\n\t            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);\n\t          } else {\n\t            interpolate(current.x, current.p.x, -1, listener);\n\t          }\n\t          current = current.p;\n\t        }\n\t        current = current.o;\n\t        points = current.z;\n\t        isSubject = !isSubject;\n\t      } while (!current.v);\n\t      listener.lineEnd();\n\t    }\n\t  }\n\t  function d3_geo_clipPolygonLinkCircular(array) {\n\t    if (!(n = array.length)) return;\n\t    var n, i = 0, a = array[0], b;\n\t    while (++i < n) {\n\t      a.n = b = array[i];\n\t      b.p = a;\n\t      a = b;\n\t    }\n\t    a.n = b = array[0];\n\t    b.p = a;\n\t  }\n\t  function d3_geo_clipPolygonIntersection(point, points, other, entry) {\n\t    this.x = point;\n\t    this.z = points;\n\t    this.o = other;\n\t    this.e = entry;\n\t    this.v = false;\n\t    this.n = this.p = null;\n\t  }\n\t  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\n\t    return function(rotate, listener) {\n\t      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\n\t      var clip = {\n\t        point: point,\n\t        lineStart: lineStart,\n\t        lineEnd: lineEnd,\n\t        polygonStart: function() {\n\t          clip.point = pointRing;\n\t          clip.lineStart = ringStart;\n\t          clip.lineEnd = ringEnd;\n\t          segments = [];\n\t          polygon = [];\n\t        },\n\t        polygonEnd: function() {\n\t          clip.point = point;\n\t          clip.lineStart = lineStart;\n\t          clip.lineEnd = lineEnd;\n\t          segments = d3.merge(segments);\n\t          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\n\t          if (segments.length) {\n\t            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n\t            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\n\t          } else if (clipStartInside) {\n\t            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n\t            listener.lineStart();\n\t            interpolate(null, null, 1, listener);\n\t            listener.lineEnd();\n\t          }\n\t          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;\n\t          segments = polygon = null;\n\t        },\n\t        sphere: function() {\n\t          listener.polygonStart();\n\t          listener.lineStart();\n\t          interpolate(null, null, 1, listener);\n\t          listener.lineEnd();\n\t          listener.polygonEnd();\n\t        }\n\t      };\n\t      function point(λ, φ) {\n\t        var point = rotate(λ, φ);\n\t        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\n\t      }\n\t      function pointLine(λ, φ) {\n\t        var point = rotate(λ, φ);\n\t        line.point(point[0], point[1]);\n\t      }\n\t      function lineStart() {\n\t        clip.point = pointLine;\n\t        line.lineStart();\n\t      }\n\t      function lineEnd() {\n\t        clip.point = point;\n\t        line.lineEnd();\n\t      }\n\t      var segments;\n\t      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygonStarted = false, polygon, ring;\n\t      function pointRing(λ, φ) {\n\t        ring.push([ λ, φ ]);\n\t        var point = rotate(λ, φ);\n\t        ringListener.point(point[0], point[1]);\n\t      }\n\t      function ringStart() {\n\t        ringListener.lineStart();\n\t        ring = [];\n\t      }\n\t      function ringEnd() {\n\t        pointRing(ring[0][0], ring[0][1]);\n\t        ringListener.lineEnd();\n\t        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;\n\t        ring.pop();\n\t        polygon.push(ring);\n\t        ring = null;\n\t        if (!n) return;\n\t        if (clean & 1) {\n\t          segment = ringSegments[0];\n\t          var n = segment.length - 1, i = -1, point;\n\t          if (n > 0) {\n\t            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n\t            listener.lineStart();\n\t            while (++i < n) listener.point((point = segment[i])[0], point[1]);\n\t            listener.lineEnd();\n\t          }\n\t          return;\n\t        }\n\t        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\t        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\n\t      }\n\t      return clip;\n\t    };\n\t  }\n\t  function d3_geo_clipSegmentLength1(segment) {\n\t    return segment.length > 1;\n\t  }\n\t  function d3_geo_clipBufferListener() {\n\t    var lines = [], line;\n\t    return {\n\t      lineStart: function() {\n\t        lines.push(line = []);\n\t      },\n\t      point: function(λ, φ) {\n\t        line.push([ λ, φ ]);\n\t      },\n\t      lineEnd: d3_noop,\n\t      buffer: function() {\n\t        var buffer = lines;\n\t        lines = [];\n\t        line = null;\n\t        return buffer;\n\t      },\n\t      rejoin: function() {\n\t        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n\t      }\n\t    };\n\t  }\n\t  function d3_geo_clipSort(a, b) {\n\t    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\n\t  }\n\t  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);\n\t  function d3_geo_clipAntimeridianLine(listener) {\n\t    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;\n\t    return {\n\t      lineStart: function() {\n\t        listener.lineStart();\n\t        clean = 1;\n\t      },\n\t      point: function(λ1, φ1) {\n\t        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);\n\t        if (abs(dλ - π) < ε) {\n\t          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\n\t          listener.point(sλ0, φ0);\n\t          listener.lineEnd();\n\t          listener.lineStart();\n\t          listener.point(sλ1, φ0);\n\t          listener.point(λ1, φ0);\n\t          clean = 0;\n\t        } else if (sλ0 !== sλ1 && dλ >= π) {\n\t          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\n\t          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\n\t          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\n\t          listener.point(sλ0, φ0);\n\t          listener.lineEnd();\n\t          listener.lineStart();\n\t          listener.point(sλ1, φ0);\n\t          clean = 0;\n\t        }\n\t        listener.point(λ0 = λ1, φ0 = φ1);\n\t        sλ0 = sλ1;\n\t      },\n\t      lineEnd: function() {\n\t        listener.lineEnd();\n\t        λ0 = φ0 = NaN;\n\t      },\n\t      clean: function() {\n\t        return 2 - clean;\n\t      }\n\t    };\n\t  }\n\t  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\n\t    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);\n\t    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\n\t  }\n\t  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\n\t    var φ;\n\t    if (from == null) {\n\t      φ = direction * halfπ;\n\t      listener.point(-π, φ);\n\t      listener.point(0, φ);\n\t      listener.point(π, φ);\n\t      listener.point(π, 0);\n\t      listener.point(π, -φ);\n\t      listener.point(0, -φ);\n\t      listener.point(-π, -φ);\n\t      listener.point(-π, 0);\n\t      listener.point(-π, φ);\n\t    } else if (abs(from[0] - to[0]) > ε) {\n\t      var s = from[0] < to[0] ? π : -π;\n\t      φ = direction * s / 2;\n\t      listener.point(-s, φ);\n\t      listener.point(0, φ);\n\t      listener.point(s, φ);\n\t    } else {\n\t      listener.point(to[0], to[1]);\n\t    }\n\t  }\n\t  function d3_geo_pointInPolygon(point, polygon) {\n\t    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;\n\t    d3_geo_areaRingSum.reset();\n\t    for (var i = 0, n = polygon.length; i < n; ++i) {\n\t      var ring = polygon[i], m = ring.length;\n\t      if (!m) continue;\n\t      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;\n\t      while (true) {\n\t        if (j === m) j = 0;\n\t        point = ring[j];\n\t        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, antimeridian = adλ > π, k = sinφ0 * sinφ;\n\t        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));\n\t        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;\n\t        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\n\t          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\n\t          d3_geo_cartesianNormalize(arc);\n\t          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\n\t          d3_geo_cartesianNormalize(intersection);\n\t          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\n\t          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\n\t            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\n\t          }\n\t        }\n\t        if (!j++) break;\n\t        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\n\t      }\n\t    }\n\t    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < 0) ^ winding & 1;\n\t  }\n\t  function d3_geo_clipCircle(radius) {\n\t    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\n\t    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);\n\t    function visible(λ, φ) {\n\t      return Math.cos(λ) * Math.cos(φ) > cr;\n\t    }\n\t    function clipLine(listener) {\n\t      var point0, c0, v0, v00, clean;\n\t      return {\n\t        lineStart: function() {\n\t          v00 = v0 = false;\n\t          clean = 1;\n\t        },\n\t        point: function(λ, φ) {\n\t          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\n\t          if (!point0 && (v00 = v0 = v)) listener.lineStart();\n\t          if (v !== v0) {\n\t            point2 = intersect(point0, point1);\n\t            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\n\t              point1[0] += ε;\n\t              point1[1] += ε;\n\t              v = visible(point1[0], point1[1]);\n\t            }\n\t          }\n\t          if (v !== v0) {\n\t            clean = 0;\n\t            if (v) {\n\t              listener.lineStart();\n\t              point2 = intersect(point1, point0);\n\t              listener.point(point2[0], point2[1]);\n\t            } else {\n\t              point2 = intersect(point0, point1);\n\t              listener.point(point2[0], point2[1]);\n\t              listener.lineEnd();\n\t            }\n\t            point0 = point2;\n\t          } else if (notHemisphere && point0 && smallRadius ^ v) {\n\t            var t;\n\t            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n\t              clean = 0;\n\t              if (smallRadius) {\n\t                listener.lineStart();\n\t                listener.point(t[0][0], t[0][1]);\n\t                listener.point(t[1][0], t[1][1]);\n\t                listener.lineEnd();\n\t              } else {\n\t                listener.point(t[1][0], t[1][1]);\n\t                listener.lineEnd();\n\t                listener.lineStart();\n\t                listener.point(t[0][0], t[0][1]);\n\t              }\n\t            }\n\t          }\n\t          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\n\t            listener.point(point1[0], point1[1]);\n\t          }\n\t          point0 = point1, v0 = v, c0 = c;\n\t        },\n\t        lineEnd: function() {\n\t          if (v0) listener.lineEnd();\n\t          point0 = null;\n\t        },\n\t        clean: function() {\n\t          return clean | (v00 && v0) << 1;\n\t        }\n\t      };\n\t    }\n\t    function intersect(a, b, two) {\n\t      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);\n\t      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;\n\t      if (!determinant) return !two && a;\n\t      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);\n\t      d3_geo_cartesianAdd(A, B);\n\t      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\n\t      if (t2 < 0) return;\n\t      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);\n\t      d3_geo_cartesianAdd(q, A);\n\t      q = d3_geo_spherical(q);\n\t      if (!two) return q;\n\t      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;\n\t      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\n\t      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;\n\t      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\n\t      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\n\t        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\n\t        d3_geo_cartesianAdd(q1, A);\n\t        return [ q, d3_geo_spherical(q1) ];\n\t      }\n\t    }\n\t    function code(λ, φ) {\n\t      var r = smallRadius ? radius : π - radius, code = 0;\n\t      if (λ < -r) code |= 1; else if (λ > r) code |= 2;\n\t      if (φ < -r) code |= 4; else if (φ > r) code |= 8;\n\t      return code;\n\t    }\n\t  }\n\t  function d3_geom_clipLine(x0, y0, x1, y1) {\n\t    return function(line) {\n\t      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;\n\t      r = x0 - ax;\n\t      if (!dx && r > 0) return;\n\t      r /= dx;\n\t      if (dx < 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      } else if (dx > 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      }\n\t      r = x1 - ax;\n\t      if (!dx && r < 0) return;\n\t      r /= dx;\n\t      if (dx < 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      } else if (dx > 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      }\n\t      r = y0 - ay;\n\t      if (!dy && r > 0) return;\n\t      r /= dy;\n\t      if (dy < 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      } else if (dy > 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      }\n\t      r = y1 - ay;\n\t      if (!dy && r < 0) return;\n\t      r /= dy;\n\t      if (dy < 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      } else if (dy > 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      }\n\t      if (t0 > 0) line.a = {\n\t        x: ax + t0 * dx,\n\t        y: ay + t0 * dy\n\t      };\n\t      if (t1 < 1) line.b = {\n\t        x: ax + t1 * dx,\n\t        y: ay + t1 * dy\n\t      };\n\t      return line;\n\t    };\n\t  }\n\t  var d3_geo_clipExtentMAX = 1e9;\n\t  d3.geo.clipExtent = function() {\n\t    var x0, y0, x1, y1, stream, clip, clipExtent = {\n\t      stream: function(output) {\n\t        if (stream) stream.valid = false;\n\t        stream = clip(output);\n\t        stream.valid = true;\n\t        return stream;\n\t      },\n\t      extent: function(_) {\n\t        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n\t        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\n\t        if (stream) stream.valid = false, stream = null;\n\t        return clipExtent;\n\t      }\n\t    };\n\t    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);\n\t  };\n\t  function d3_geo_clipExtent(x0, y0, x1, y1) {\n\t    return function(listener) {\n\t      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;\n\t      var clip = {\n\t        point: point,\n\t        lineStart: lineStart,\n\t        lineEnd: lineEnd,\n\t        polygonStart: function() {\n\t          listener = bufferListener;\n\t          segments = [];\n\t          polygon = [];\n\t          clean = true;\n\t        },\n\t        polygonEnd: function() {\n\t          listener = listener_;\n\t          segments = d3.merge(segments);\n\t          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;\n\t          if (inside || visible) {\n\t            listener.polygonStart();\n\t            if (inside) {\n\t              listener.lineStart();\n\t              interpolate(null, null, 1, listener);\n\t              listener.lineEnd();\n\t            }\n\t            if (visible) {\n\t              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\n\t            }\n\t            listener.polygonEnd();\n\t          }\n\t          segments = polygon = ring = null;\n\t        }\n\t      };\n\t      function insidePolygon(p) {\n\t        var wn = 0, n = polygon.length, y = p[1];\n\t        for (var i = 0; i < n; ++i) {\n\t          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\n\t            b = v[j];\n\t            if (a[1] <= y) {\n\t              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;\n\t            } else {\n\t              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;\n\t            }\n\t            a = b;\n\t          }\n\t        }\n\t        return wn !== 0;\n\t      }\n\t      function interpolate(from, to, direction, listener) {\n\t        var a = 0, a1 = 0;\n\t        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\n\t          do {\n\t            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n\t          } while ((a = (a + direction + 4) % 4) !== a1);\n\t        } else {\n\t          listener.point(to[0], to[1]);\n\t        }\n\t      }\n\t      function pointVisible(x, y) {\n\t        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n\t      }\n\t      function point(x, y) {\n\t        if (pointVisible(x, y)) listener.point(x, y);\n\t      }\n\t      var x__, y__, v__, x_, y_, v_, first, clean;\n\t      function lineStart() {\n\t        clip.point = linePoint;\n\t        if (polygon) polygon.push(ring = []);\n\t        first = true;\n\t        v_ = false;\n\t        x_ = y_ = NaN;\n\t      }\n\t      function lineEnd() {\n\t        if (segments) {\n\t          linePoint(x__, y__);\n\t          if (v__ && v_) bufferListener.rejoin();\n\t          segments.push(bufferListener.buffer());\n\t        }\n\t        clip.point = point;\n\t        if (v_) listener.lineEnd();\n\t      }\n\t      function linePoint(x, y) {\n\t        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\n\t        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\n\t        var v = pointVisible(x, y);\n\t        if (polygon) ring.push([ x, y ]);\n\t        if (first) {\n\t          x__ = x, y__ = y, v__ = v;\n\t          first = false;\n\t          if (v) {\n\t            listener.lineStart();\n\t            listener.point(x, y);\n\t          }\n\t        } else {\n\t          if (v && v_) listener.point(x, y); else {\n\t            var l = {\n\t              a: {\n\t                x: x_,\n\t                y: y_\n\t              },\n\t              b: {\n\t                x: x,\n\t                y: y\n\t              }\n\t            };\n\t            if (clipLine(l)) {\n\t              if (!v_) {\n\t                listener.lineStart();\n\t                listener.point(l.a.x, l.a.y);\n\t              }\n\t              listener.point(l.b.x, l.b.y);\n\t              if (!v) listener.lineEnd();\n\t              clean = false;\n\t            } else if (v) {\n\t              listener.lineStart();\n\t              listener.point(x, y);\n\t              clean = false;\n\t            }\n\t          }\n\t        }\n\t        x_ = x, y_ = y, v_ = v;\n\t      }\n\t      return clip;\n\t    };\n\t    function corner(p, direction) {\n\t      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\n\t    }\n\t    function compare(a, b) {\n\t      return comparePoints(a.x, b.x);\n\t    }\n\t    function comparePoints(a, b) {\n\t      var ca = corner(a, 1), cb = corner(b, 1);\n\t      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n\t    }\n\t  }\n\t  function d3_geo_compose(a, b) {\n\t    function compose(x, y) {\n\t      return x = a(x, y), b(x[0], x[1]);\n\t    }\n\t    if (a.invert && b.invert) compose.invert = function(x, y) {\n\t      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n\t    };\n\t    return compose;\n\t  }\n\t  function d3_geo_conic(projectAt) {\n\t    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);\n\t    p.parallels = function(_) {\n\t      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];\n\t      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\n\t    };\n\t    return p;\n\t  }\n\t  function d3_geo_conicEqualArea(φ0, φ1) {\n\t    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;\n\t    function forward(λ, φ) {\n\t      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\n\t      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];\n\t    }\n\t    forward.invert = function(x, y) {\n\t      var ρ0_y = ρ0 - y;\n\t      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];\n\t    };\n\t    return forward;\n\t  }\n\t  (d3.geo.conicEqualArea = function() {\n\t    return d3_geo_conic(d3_geo_conicEqualArea);\n\t  }).raw = d3_geo_conicEqualArea;\n\t  d3.geo.albers = function() {\n\t    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);\n\t  };\n\t  d3.geo.albersUsa = function() {\n\t    var lower48 = d3.geo.albers();\n\t    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);\n\t    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);\n\t    var point, pointStream = {\n\t      point: function(x, y) {\n\t        point = [ x, y ];\n\t      }\n\t    }, lower48Point, alaskaPoint, hawaiiPoint;\n\t    function albersUsa(coordinates) {\n\t      var x = coordinates[0], y = coordinates[1];\n\t      point = null;\n\t      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);\n\t      return point;\n\t    }\n\t    albersUsa.invert = function(coordinates) {\n\t      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;\n\t      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\n\t    };\n\t    albersUsa.stream = function(stream) {\n\t      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);\n\t      return {\n\t        point: function(x, y) {\n\t          lower48Stream.point(x, y);\n\t          alaskaStream.point(x, y);\n\t          hawaiiStream.point(x, y);\n\t        },\n\t        sphere: function() {\n\t          lower48Stream.sphere();\n\t          alaskaStream.sphere();\n\t          hawaiiStream.sphere();\n\t        },\n\t        lineStart: function() {\n\t          lower48Stream.lineStart();\n\t          alaskaStream.lineStart();\n\t          hawaiiStream.lineStart();\n\t        },\n\t        lineEnd: function() {\n\t          lower48Stream.lineEnd();\n\t          alaskaStream.lineEnd();\n\t          hawaiiStream.lineEnd();\n\t        },\n\t        polygonStart: function() {\n\t          lower48Stream.polygonStart();\n\t          alaskaStream.polygonStart();\n\t          hawaiiStream.polygonStart();\n\t        },\n\t        polygonEnd: function() {\n\t          lower48Stream.polygonEnd();\n\t          alaskaStream.polygonEnd();\n\t          hawaiiStream.polygonEnd();\n\t        }\n\t      };\n\t    };\n\t    albersUsa.precision = function(_) {\n\t      if (!arguments.length) return lower48.precision();\n\t      lower48.precision(_);\n\t      alaska.precision(_);\n\t      hawaii.precision(_);\n\t      return albersUsa;\n\t    };\n\t    albersUsa.scale = function(_) {\n\t      if (!arguments.length) return lower48.scale();\n\t      lower48.scale(_);\n\t      alaska.scale(_ * .35);\n\t      hawaii.scale(_);\n\t      return albersUsa.translate(lower48.translate());\n\t    };\n\t    albersUsa.translate = function(_) {\n\t      if (!arguments.length) return lower48.translate();\n\t      var k = lower48.scale(), x = +_[0], y = +_[1];\n\t      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;\n\t      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n\t      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n\t      return albersUsa;\n\t    };\n\t    return albersUsa.scale(1070);\n\t  };\n\t  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {\n\t    point: d3_noop,\n\t    lineStart: d3_noop,\n\t    lineEnd: d3_noop,\n\t    polygonStart: function() {\n\t      d3_geo_pathAreaPolygon = 0;\n\t      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\n\t      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\n\t    }\n\t  };\n\t  function d3_geo_pathAreaRingStart() {\n\t    var x00, y00, x0, y0;\n\t    d3_geo_pathArea.point = function(x, y) {\n\t      d3_geo_pathArea.point = nextPoint;\n\t      x00 = x0 = x, y00 = y0 = y;\n\t    };\n\t    function nextPoint(x, y) {\n\t      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\n\t      x0 = x, y0 = y;\n\t    }\n\t    d3_geo_pathArea.lineEnd = function() {\n\t      nextPoint(x00, y00);\n\t    };\n\t  }\n\t  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\n\t  var d3_geo_pathBounds = {\n\t    point: d3_geo_pathBoundsPoint,\n\t    lineStart: d3_noop,\n\t    lineEnd: d3_noop,\n\t    polygonStart: d3_noop,\n\t    polygonEnd: d3_noop\n\t  };\n\t  function d3_geo_pathBoundsPoint(x, y) {\n\t    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\n\t    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\n\t    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\n\t    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\n\t  }\n\t  function d3_geo_pathBuffer() {\n\t    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];\n\t    var stream = {\n\t      point: point,\n\t      lineStart: function() {\n\t        stream.point = pointLineStart;\n\t      },\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() {\n\t        stream.lineEnd = lineEndPolygon;\n\t      },\n\t      polygonEnd: function() {\n\t        stream.lineEnd = lineEnd;\n\t        stream.point = point;\n\t      },\n\t      pointRadius: function(_) {\n\t        pointCircle = d3_geo_pathBufferCircle(_);\n\t        return stream;\n\t      },\n\t      result: function() {\n\t        if (buffer.length) {\n\t          var result = buffer.join(\"\");\n\t          buffer = [];\n\t          return result;\n\t        }\n\t      }\n\t    };\n\t    function point(x, y) {\n\t      buffer.push(\"M\", x, \",\", y, pointCircle);\n\t    }\n\t    function pointLineStart(x, y) {\n\t      buffer.push(\"M\", x, \",\", y);\n\t      stream.point = pointLine;\n\t    }\n\t    function pointLine(x, y) {\n\t      buffer.push(\"L\", x, \",\", y);\n\t    }\n\t    function lineEnd() {\n\t      stream.point = point;\n\t    }\n\t    function lineEndPolygon() {\n\t      buffer.push(\"Z\");\n\t    }\n\t    return stream;\n\t  }\n\t  function d3_geo_pathBufferCircle(radius) {\n\t    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n\t  }\n\t  var d3_geo_pathCentroid = {\n\t    point: d3_geo_pathCentroidPoint,\n\t    lineStart: d3_geo_pathCentroidLineStart,\n\t    lineEnd: d3_geo_pathCentroidLineEnd,\n\t    polygonStart: function() {\n\t      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n\t      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\n\t      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\n\t    }\n\t  };\n\t  function d3_geo_pathCentroidPoint(x, y) {\n\t    d3_geo_centroidX0 += x;\n\t    d3_geo_centroidY0 += y;\n\t    ++d3_geo_centroidZ0;\n\t  }\n\t  function d3_geo_pathCentroidLineStart() {\n\t    var x0, y0;\n\t    d3_geo_pathCentroid.point = function(x, y) {\n\t      d3_geo_pathCentroid.point = nextPoint;\n\t      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n\t    };\n\t    function nextPoint(x, y) {\n\t      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n\t      d3_geo_centroidX1 += z * (x0 + x) / 2;\n\t      d3_geo_centroidY1 += z * (y0 + y) / 2;\n\t      d3_geo_centroidZ1 += z;\n\t      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n\t    }\n\t  }\n\t  function d3_geo_pathCentroidLineEnd() {\n\t    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n\t  }\n\t  function d3_geo_pathCentroidRingStart() {\n\t    var x00, y00, x0, y0;\n\t    d3_geo_pathCentroid.point = function(x, y) {\n\t      d3_geo_pathCentroid.point = nextPoint;\n\t      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\n\t    };\n\t    function nextPoint(x, y) {\n\t      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n\t      d3_geo_centroidX1 += z * (x0 + x) / 2;\n\t      d3_geo_centroidY1 += z * (y0 + y) / 2;\n\t      d3_geo_centroidZ1 += z;\n\t      z = y0 * x - x0 * y;\n\t      d3_geo_centroidX2 += z * (x0 + x);\n\t      d3_geo_centroidY2 += z * (y0 + y);\n\t      d3_geo_centroidZ2 += z * 3;\n\t      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n\t    }\n\t    d3_geo_pathCentroid.lineEnd = function() {\n\t      nextPoint(x00, y00);\n\t    };\n\t  }\n\t  function d3_geo_pathContext(context) {\n\t    var pointRadius = 4.5;\n\t    var stream = {\n\t      point: point,\n\t      lineStart: function() {\n\t        stream.point = pointLineStart;\n\t      },\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() {\n\t        stream.lineEnd = lineEndPolygon;\n\t      },\n\t      polygonEnd: function() {\n\t        stream.lineEnd = lineEnd;\n\t        stream.point = point;\n\t      },\n\t      pointRadius: function(_) {\n\t        pointRadius = _;\n\t        return stream;\n\t      },\n\t      result: d3_noop\n\t    };\n\t    function point(x, y) {\n\t      context.moveTo(x, y);\n\t      context.arc(x, y, pointRadius, 0, τ);\n\t    }\n\t    function pointLineStart(x, y) {\n\t      context.moveTo(x, y);\n\t      stream.point = pointLine;\n\t    }\n\t    function pointLine(x, y) {\n\t      context.lineTo(x, y);\n\t    }\n\t    function lineEnd() {\n\t      stream.point = point;\n\t    }\n\t    function lineEndPolygon() {\n\t      context.closePath();\n\t    }\n\t    return stream;\n\t  }\n\t  function d3_geo_resample(project) {\n\t    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;\n\t    function resample(stream) {\n\t      return (maxDepth ? resampleRecursive : resampleNone)(stream);\n\t    }\n\t    function resampleNone(stream) {\n\t      return d3_geo_transformPoint(stream, function(x, y) {\n\t        x = project(x, y);\n\t        stream.point(x[0], x[1]);\n\t      });\n\t    }\n\t    function resampleRecursive(stream) {\n\t      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\n\t      var resample = {\n\t        point: point,\n\t        lineStart: lineStart,\n\t        lineEnd: lineEnd,\n\t        polygonStart: function() {\n\t          stream.polygonStart();\n\t          resample.lineStart = ringStart;\n\t        },\n\t        polygonEnd: function() {\n\t          stream.polygonEnd();\n\t          resample.lineStart = lineStart;\n\t        }\n\t      };\n\t      function point(x, y) {\n\t        x = project(x, y);\n\t        stream.point(x[0], x[1]);\n\t      }\n\t      function lineStart() {\n\t        x0 = NaN;\n\t        resample.point = linePoint;\n\t        stream.lineStart();\n\t      }\n\t      function linePoint(λ, φ) {\n\t        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);\n\t        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n\t        stream.point(x0, y0);\n\t      }\n\t      function lineEnd() {\n\t        resample.point = point;\n\t        stream.lineEnd();\n\t      }\n\t      function ringStart() {\n\t        lineStart();\n\t        resample.point = ringPoint;\n\t        resample.lineEnd = ringEnd;\n\t      }\n\t      function ringPoint(λ, φ) {\n\t        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n\t        resample.point = linePoint;\n\t      }\n\t      function ringEnd() {\n\t        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\n\t        resample.lineEnd = lineEnd;\n\t        lineEnd();\n\t      }\n\t      return resample;\n\t    }\n\t    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\n\t      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;\n\t      if (d2 > 4 * δ2 && depth--) {\n\t        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;\n\t        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n\t          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\n\t          stream.point(x2, y2);\n\t          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\n\t        }\n\t      }\n\t    }\n\t    resample.precision = function(_) {\n\t      if (!arguments.length) return Math.sqrt(δ2);\n\t      maxDepth = (δ2 = _ * _) > 0 && 16;\n\t      return resample;\n\t    };\n\t    return resample;\n\t  }\n\t  d3.geo.path = function() {\n\t    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;\n\t    function path(object) {\n\t      if (object) {\n\t        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n\t        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\n\t        d3.geo.stream(object, cacheStream);\n\t      }\n\t      return contextStream.result();\n\t    }\n\t    path.area = function(object) {\n\t      d3_geo_pathAreaSum = 0;\n\t      d3.geo.stream(object, projectStream(d3_geo_pathArea));\n\t      return d3_geo_pathAreaSum;\n\t    };\n\t    path.centroid = function(object) {\n\t      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n\t      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\n\t      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];\n\t    };\n\t    path.bounds = function(object) {\n\t      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\n\t      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\n\t      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];\n\t    };\n\t    path.projection = function(_) {\n\t      if (!arguments.length) return projection;\n\t      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\n\t      return reset();\n\t    };\n\t    path.context = function(_) {\n\t      if (!arguments.length) return context;\n\t      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\n\t      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n\t      return reset();\n\t    };\n\t    path.pointRadius = function(_) {\n\t      if (!arguments.length) return pointRadius;\n\t      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n\t      return path;\n\t    };\n\t    function reset() {\n\t      cacheStream = null;\n\t      return path;\n\t    }\n\t    return path.projection(d3.geo.albersUsa()).context(null);\n\t  };\n\t  function d3_geo_pathProjectStream(project) {\n\t    var resample = d3_geo_resample(function(x, y) {\n\t      return project([ x * d3_degrees, y * d3_degrees ]);\n\t    });\n\t    return function(stream) {\n\t      return d3_geo_projectionRadians(resample(stream));\n\t    };\n\t  }\n\t  d3.geo.transform = function(methods) {\n\t    return {\n\t      stream: function(stream) {\n\t        var transform = new d3_geo_transform(stream);\n\t        for (var k in methods) transform[k] = methods[k];\n\t        return transform;\n\t      }\n\t    };\n\t  };\n\t  function d3_geo_transform(stream) {\n\t    this.stream = stream;\n\t  }\n\t  d3_geo_transform.prototype = {\n\t    point: function(x, y) {\n\t      this.stream.point(x, y);\n\t    },\n\t    sphere: function() {\n\t      this.stream.sphere();\n\t    },\n\t    lineStart: function() {\n\t      this.stream.lineStart();\n\t    },\n\t    lineEnd: function() {\n\t      this.stream.lineEnd();\n\t    },\n\t    polygonStart: function() {\n\t      this.stream.polygonStart();\n\t    },\n\t    polygonEnd: function() {\n\t      this.stream.polygonEnd();\n\t    }\n\t  };\n\t  function d3_geo_transformPoint(stream, point) {\n\t    return {\n\t      point: point,\n\t      sphere: function() {\n\t        stream.sphere();\n\t      },\n\t      lineStart: function() {\n\t        stream.lineStart();\n\t      },\n\t      lineEnd: function() {\n\t        stream.lineEnd();\n\t      },\n\t      polygonStart: function() {\n\t        stream.polygonStart();\n\t      },\n\t      polygonEnd: function() {\n\t        stream.polygonEnd();\n\t      }\n\t    };\n\t  }\n\t  d3.geo.projection = d3_geo_projection;\n\t  d3.geo.projectionMutator = d3_geo_projectionMutator;\n\t  function d3_geo_projection(project) {\n\t    return d3_geo_projectionMutator(function() {\n\t      return project;\n\t    })();\n\t  }\n\t  function d3_geo_projectionMutator(projectAt) {\n\t    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {\n\t      x = project(x, y);\n\t      return [ x[0] * k + δx, δy - x[1] * k ];\n\t    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;\n\t    function projection(point) {\n\t      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\n\t      return [ point[0] * k + δx, δy - point[1] * k ];\n\t    }\n\t    function invert(point) {\n\t      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\n\t      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];\n\t    }\n\t    projection.stream = function(output) {\n\t      if (stream) stream.valid = false;\n\t      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\n\t      stream.valid = true;\n\t      return stream;\n\t    };\n\t    projection.clipAngle = function(_) {\n\t      if (!arguments.length) return clipAngle;\n\t      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\n\t      return invalidate();\n\t    };\n\t    projection.clipExtent = function(_) {\n\t      if (!arguments.length) return clipExtent;\n\t      clipExtent = _;\n\t      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\n\t      return invalidate();\n\t    };\n\t    projection.scale = function(_) {\n\t      if (!arguments.length) return k;\n\t      k = +_;\n\t      return reset();\n\t    };\n\t    projection.translate = function(_) {\n\t      if (!arguments.length) return [ x, y ];\n\t      x = +_[0];\n\t      y = +_[1];\n\t      return reset();\n\t    };\n\t    projection.center = function(_) {\n\t      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];\n\t      λ = _[0] % 360 * d3_radians;\n\t      φ = _[1] % 360 * d3_radians;\n\t      return reset();\n\t    };\n\t    projection.rotate = function(_) {\n\t      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];\n\t      δλ = _[0] % 360 * d3_radians;\n\t      δφ = _[1] % 360 * d3_radians;\n\t      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\n\t      return reset();\n\t    };\n\t    d3.rebind(projection, projectResample, \"precision\");\n\t    function reset() {\n\t      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\n\t      var center = project(λ, φ);\n\t      δx = x - center[0] * k;\n\t      δy = y + center[1] * k;\n\t      return invalidate();\n\t    }\n\t    function invalidate() {\n\t      if (stream) stream.valid = false, stream = null;\n\t      return projection;\n\t    }\n\t    return function() {\n\t      project = projectAt.apply(this, arguments);\n\t      projection.invert = project.invert && invert;\n\t      return reset();\n\t    };\n\t  }\n\t  function d3_geo_projectionRadians(stream) {\n\t    return d3_geo_transformPoint(stream, function(x, y) {\n\t      stream.point(x * d3_radians, y * d3_radians);\n\t    });\n\t  }\n\t  function d3_geo_equirectangular(λ, φ) {\n\t    return [ λ, φ ];\n\t  }\n\t  (d3.geo.equirectangular = function() {\n\t    return d3_geo_projection(d3_geo_equirectangular);\n\t  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\n\t  d3.geo.rotation = function(rotate) {\n\t    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\n\t    function forward(coordinates) {\n\t      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n\t      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n\t    }\n\t    forward.invert = function(coordinates) {\n\t      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n\t      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n\t    };\n\t    return forward;\n\t  };\n\t  function d3_geo_identityRotation(λ, φ) {\n\t    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n\t  }\n\t  d3_geo_identityRotation.invert = d3_geo_equirectangular;\n\t  function d3_geo_rotation(δλ, δφ, δγ) {\n\t    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\n\t  }\n\t  function d3_geo_forwardRotationλ(δλ) {\n\t    return function(λ, φ) {\n\t      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n\t    };\n\t  }\n\t  function d3_geo_rotationλ(δλ) {\n\t    var rotation = d3_geo_forwardRotationλ(δλ);\n\t    rotation.invert = d3_geo_forwardRotationλ(-δλ);\n\t    return rotation;\n\t  }\n\t  function d3_geo_rotationφγ(δφ, δγ) {\n\t    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);\n\t    function rotation(λ, φ) {\n\t      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;\n\t      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];\n\t    }\n\t    rotation.invert = function(λ, φ) {\n\t      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;\n\t      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];\n\t    };\n\t    return rotation;\n\t  }\n\t  d3.geo.circle = function() {\n\t    var origin = [ 0, 0 ], angle, precision = 6, interpolate;\n\t    function circle() {\n\t      var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];\n\t      interpolate(null, null, 1, {\n\t        point: function(x, y) {\n\t          ring.push(x = rotate(x, y));\n\t          x[0] *= d3_degrees, x[1] *= d3_degrees;\n\t        }\n\t      });\n\t      return {\n\t        type: \"Polygon\",\n\t        coordinates: [ ring ]\n\t      };\n\t    }\n\t    circle.origin = function(x) {\n\t      if (!arguments.length) return origin;\n\t      origin = x;\n\t      return circle;\n\t    };\n\t    circle.angle = function(x) {\n\t      if (!arguments.length) return angle;\n\t      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\n\t      return circle;\n\t    };\n\t    circle.precision = function(_) {\n\t      if (!arguments.length) return precision;\n\t      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\n\t      return circle;\n\t    };\n\t    return circle.angle(90);\n\t  };\n\t  function d3_geo_circleInterpolate(radius, precision) {\n\t    var cr = Math.cos(radius), sr = Math.sin(radius);\n\t    return function(from, to, direction, listener) {\n\t      var step = direction * precision;\n\t      if (from != null) {\n\t        from = d3_geo_circleAngle(cr, from);\n\t        to = d3_geo_circleAngle(cr, to);\n\t        if (direction > 0 ? from < to : from > to) from += direction * τ;\n\t      } else {\n\t        from = radius + direction * τ;\n\t        to = radius - .5 * step;\n\t      }\n\t      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\n\t        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);\n\t      }\n\t    };\n\t  }\n\t  function d3_geo_circleAngle(cr, point) {\n\t    var a = d3_geo_cartesian(point);\n\t    a[0] -= cr;\n\t    d3_geo_cartesianNormalize(a);\n\t    var angle = d3_acos(-a[1]);\n\t    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\n\t  }\n\t  d3.geo.distance = function(a, b) {\n\t    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;\n\t    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n\t  };\n\t  d3.geo.graticule = function() {\n\t    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;\n\t    function graticule() {\n\t      return {\n\t        type: \"MultiLineString\",\n\t        coordinates: lines()\n\t      };\n\t    }\n\t    function lines() {\n\t      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {\n\t        return abs(x % DX) > ε;\n\t      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {\n\t        return abs(y % DY) > ε;\n\t      }).map(y));\n\t    }\n\t    graticule.lines = function() {\n\t      return lines().map(function(coordinates) {\n\t        return {\n\t          type: \"LineString\",\n\t          coordinates: coordinates\n\t        };\n\t      });\n\t    };\n\t    graticule.outline = function() {\n\t      return {\n\t        type: \"Polygon\",\n\t        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]\n\t      };\n\t    };\n\t    graticule.extent = function(_) {\n\t      if (!arguments.length) return graticule.minorExtent();\n\t      return graticule.majorExtent(_).minorExtent(_);\n\t    };\n\t    graticule.majorExtent = function(_) {\n\t      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];\n\t      X0 = +_[0][0], X1 = +_[1][0];\n\t      Y0 = +_[0][1], Y1 = +_[1][1];\n\t      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n\t      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n\t      return graticule.precision(precision);\n\t    };\n\t    graticule.minorExtent = function(_) {\n\t      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n\t      x0 = +_[0][0], x1 = +_[1][0];\n\t      y0 = +_[0][1], y1 = +_[1][1];\n\t      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n\t      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n\t      return graticule.precision(precision);\n\t    };\n\t    graticule.step = function(_) {\n\t      if (!arguments.length) return graticule.minorStep();\n\t      return graticule.majorStep(_).minorStep(_);\n\t    };\n\t    graticule.majorStep = function(_) {\n\t      if (!arguments.length) return [ DX, DY ];\n\t      DX = +_[0], DY = +_[1];\n\t      return graticule;\n\t    };\n\t    graticule.minorStep = function(_) {\n\t      if (!arguments.length) return [ dx, dy ];\n\t      dx = +_[0], dy = +_[1];\n\t      return graticule;\n\t    };\n\t    graticule.precision = function(_) {\n\t      if (!arguments.length) return precision;\n\t      precision = +_;\n\t      x = d3_geo_graticuleX(y0, y1, 90);\n\t      y = d3_geo_graticuleY(x0, x1, precision);\n\t      X = d3_geo_graticuleX(Y0, Y1, 90);\n\t      Y = d3_geo_graticuleY(X0, X1, precision);\n\t      return graticule;\n\t    };\n\t    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);\n\t  };\n\t  function d3_geo_graticuleX(y0, y1, dy) {\n\t    var y = d3.range(y0, y1 - ε, dy).concat(y1);\n\t    return function(x) {\n\t      return y.map(function(y) {\n\t        return [ x, y ];\n\t      });\n\t    };\n\t  }\n\t  function d3_geo_graticuleY(x0, x1, dx) {\n\t    var x = d3.range(x0, x1 - ε, dx).concat(x1);\n\t    return function(y) {\n\t      return x.map(function(x) {\n\t        return [ x, y ];\n\t      });\n\t    };\n\t  }\n\t  function d3_source(d) {\n\t    return d.source;\n\t  }\n\t  function d3_target(d) {\n\t    return d.target;\n\t  }\n\t  d3.geo.greatArc = function() {\n\t    var source = d3_source, source_, target = d3_target, target_;\n\t    function greatArc() {\n\t      return {\n\t        type: \"LineString\",\n\t        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]\n\t      };\n\t    }\n\t    greatArc.distance = function() {\n\t      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\n\t    };\n\t    greatArc.source = function(_) {\n\t      if (!arguments.length) return source;\n\t      source = _, source_ = typeof _ === \"function\" ? null : _;\n\t      return greatArc;\n\t    };\n\t    greatArc.target = function(_) {\n\t      if (!arguments.length) return target;\n\t      target = _, target_ = typeof _ === \"function\" ? null : _;\n\t      return greatArc;\n\t    };\n\t    greatArc.precision = function() {\n\t      return arguments.length ? greatArc : 0;\n\t    };\n\t    return greatArc;\n\t  };\n\t  d3.geo.interpolate = function(source, target) {\n\t    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\n\t  };\n\t  function d3_geo_interpolate(x0, y0, x1, y1) {\n\t    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);\n\t    var interpolate = d ? function(t) {\n\t      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;\n\t      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];\n\t    } : function() {\n\t      return [ x0 * d3_degrees, y0 * d3_degrees ];\n\t    };\n\t    interpolate.distance = d;\n\t    return interpolate;\n\t  }\n\t  d3.geo.length = function(object) {\n\t    d3_geo_lengthSum = 0;\n\t    d3.geo.stream(object, d3_geo_length);\n\t    return d3_geo_lengthSum;\n\t  };\n\t  var d3_geo_lengthSum;\n\t  var d3_geo_length = {\n\t    sphere: d3_noop,\n\t    point: d3_noop,\n\t    lineStart: d3_geo_lengthLineStart,\n\t    lineEnd: d3_noop,\n\t    polygonStart: d3_noop,\n\t    polygonEnd: d3_noop\n\t  };\n\t  function d3_geo_lengthLineStart() {\n\t    var λ0, sinφ0, cosφ0;\n\t    d3_geo_length.point = function(λ, φ) {\n\t      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\n\t      d3_geo_length.point = nextPoint;\n\t    };\n\t    d3_geo_length.lineEnd = function() {\n\t      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);\n\t      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\n\t      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\n\t    }\n\t  }\n\t  function d3_geo_azimuthal(scale, angle) {\n\t    function azimuthal(λ, φ) {\n\t      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);\n\t      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];\n\t    }\n\t    azimuthal.invert = function(x, y) {\n\t      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);\n\t      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];\n\t    };\n\t    return azimuthal;\n\t  }\n\t  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {\n\t    return Math.sqrt(2 / (1 + cosλcosφ));\n\t  }, function(ρ) {\n\t    return 2 * Math.asin(ρ / 2);\n\t  });\n\t  (d3.geo.azimuthalEqualArea = function() {\n\t    return d3_geo_projection(d3_geo_azimuthalEqualArea);\n\t  }).raw = d3_geo_azimuthalEqualArea;\n\t  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {\n\t    var c = Math.acos(cosλcosφ);\n\t    return c && c / Math.sin(c);\n\t  }, d3_identity);\n\t  (d3.geo.azimuthalEquidistant = function() {\n\t    return d3_geo_projection(d3_geo_azimuthalEquidistant);\n\t  }).raw = d3_geo_azimuthalEquidistant;\n\t  function d3_geo_conicConformal(φ0, φ1) {\n\t    var cosφ0 = Math.cos(φ0), t = function(φ) {\n\t      return Math.tan(π / 4 + φ / 2);\n\t    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;\n\t    if (!n) return d3_geo_mercator;\n\t    function forward(λ, φ) {\n\t      if (F > 0) {\n\t        if (φ < -halfπ + ε) φ = -halfπ + ε;\n\t      } else {\n\t        if (φ > halfπ - ε) φ = halfπ - ε;\n\t      }\n\t      var ρ = F / Math.pow(t(φ), n);\n\t      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];\n\t    }\n\t    forward.invert = function(x, y) {\n\t      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\n\t      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];\n\t    };\n\t    return forward;\n\t  }\n\t  (d3.geo.conicConformal = function() {\n\t    return d3_geo_conic(d3_geo_conicConformal);\n\t  }).raw = d3_geo_conicConformal;\n\t  function d3_geo_conicEquidistant(φ0, φ1) {\n\t    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;\n\t    if (abs(n) < ε) return d3_geo_equirectangular;\n\t    function forward(λ, φ) {\n\t      var ρ = G - φ;\n\t      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];\n\t    }\n\t    forward.invert = function(x, y) {\n\t      var ρ0_y = G - y;\n\t      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];\n\t    };\n\t    return forward;\n\t  }\n\t  (d3.geo.conicEquidistant = function() {\n\t    return d3_geo_conic(d3_geo_conicEquidistant);\n\t  }).raw = d3_geo_conicEquidistant;\n\t  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {\n\t    return 1 / cosλcosφ;\n\t  }, Math.atan);\n\t  (d3.geo.gnomonic = function() {\n\t    return d3_geo_projection(d3_geo_gnomonic);\n\t  }).raw = d3_geo_gnomonic;\n\t  function d3_geo_mercator(λ, φ) {\n\t    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];\n\t  }\n\t  d3_geo_mercator.invert = function(x, y) {\n\t    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];\n\t  };\n\t  function d3_geo_mercatorProjection(project) {\n\t    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;\n\t    m.scale = function() {\n\t      var v = scale.apply(m, arguments);\n\t      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n\t    };\n\t    m.translate = function() {\n\t      var v = translate.apply(m, arguments);\n\t      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n\t    };\n\t    m.clipExtent = function(_) {\n\t      var v = clipExtent.apply(m, arguments);\n\t      if (v === m) {\n\t        if (clipAuto = _ == null) {\n\t          var k = π * scale(), t = translate();\n\t          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);\n\t        }\n\t      } else if (clipAuto) {\n\t        v = null;\n\t      }\n\t      return v;\n\t    };\n\t    return m.clipExtent(null);\n\t  }\n\t  (d3.geo.mercator = function() {\n\t    return d3_geo_mercatorProjection(d3_geo_mercator);\n\t  }).raw = d3_geo_mercator;\n\t  var d3_geo_orthographic = d3_geo_azimuthal(function() {\n\t    return 1;\n\t  }, Math.asin);\n\t  (d3.geo.orthographic = function() {\n\t    return d3_geo_projection(d3_geo_orthographic);\n\t  }).raw = d3_geo_orthographic;\n\t  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {\n\t    return 1 / (1 + cosλcosφ);\n\t  }, function(ρ) {\n\t    return 2 * Math.atan(ρ);\n\t  });\n\t  (d3.geo.stereographic = function() {\n\t    return d3_geo_projection(d3_geo_stereographic);\n\t  }).raw = d3_geo_stereographic;\n\t  function d3_geo_transverseMercator(λ, φ) {\n\t    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];\n\t  }\n\t  d3_geo_transverseMercator.invert = function(x, y) {\n\t    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];\n\t  };\n\t  (d3.geo.transverseMercator = function() {\n\t    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;\n\t    projection.center = function(_) {\n\t      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ _[1], -_[0] ]);\n\t    };\n\t    projection.rotate = function(_) {\n\t      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(), \n\t      [ _[0], _[1], _[2] - 90 ]);\n\t    };\n\t    return rotate([ 0, 0, 90 ]);\n\t  }).raw = d3_geo_transverseMercator;\n\t  d3.geom = {};\n\t  function d3_geom_pointX(d) {\n\t    return d[0];\n\t  }\n\t  function d3_geom_pointY(d) {\n\t    return d[1];\n\t  }\n\t  d3.geom.hull = function(vertices) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY;\n\t    if (arguments.length) return hull(vertices);\n\t    function hull(data) {\n\t      if (data.length < 3) return [];\n\t      var fx = d3_functor(x), fy = d3_functor(y), i, n = data.length, points = [], flippedPoints = [];\n\t      for (i = 0; i < n; i++) {\n\t        points.push([ +fx.call(this, data[i], i), +fy.call(this, data[i], i), i ]);\n\t      }\n\t      points.sort(d3_geom_hullOrder);\n\t      for (i = 0; i < n; i++) flippedPoints.push([ points[i][0], -points[i][1] ]);\n\t      var upper = d3_geom_hullUpper(points), lower = d3_geom_hullUpper(flippedPoints);\n\t      var skipLeft = lower[0] === upper[0], skipRight = lower[lower.length - 1] === upper[upper.length - 1], polygon = [];\n\t      for (i = upper.length - 1; i >= 0; --i) polygon.push(data[points[upper[i]][2]]);\n\t      for (i = +skipLeft; i < lower.length - skipRight; ++i) polygon.push(data[points[lower[i]][2]]);\n\t      return polygon;\n\t    }\n\t    hull.x = function(_) {\n\t      return arguments.length ? (x = _, hull) : x;\n\t    };\n\t    hull.y = function(_) {\n\t      return arguments.length ? (y = _, hull) : y;\n\t    };\n\t    return hull;\n\t  };\n\t  function d3_geom_hullUpper(points) {\n\t    var n = points.length, hull = [ 0, 1 ], hs = 2;\n\t    for (var i = 2; i < n; i++) {\n\t      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) --hs;\n\t      hull[hs++] = i;\n\t    }\n\t    return hull.slice(0, hs);\n\t  }\n\t  function d3_geom_hullOrder(a, b) {\n\t    return a[0] - b[0] || a[1] - b[1];\n\t  }\n\t  d3.geom.polygon = function(coordinates) {\n\t    d3_subclass(coordinates, d3_geom_polygonPrototype);\n\t    return coordinates;\n\t  };\n\t  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\n\t  d3_geom_polygonPrototype.area = function() {\n\t    var i = -1, n = this.length, a, b = this[n - 1], area = 0;\n\t    while (++i < n) {\n\t      a = b;\n\t      b = this[i];\n\t      area += a[1] * b[0] - a[0] * b[1];\n\t    }\n\t    return area * .5;\n\t  };\n\t  d3_geom_polygonPrototype.centroid = function(k) {\n\t    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;\n\t    if (!arguments.length) k = -1 / (6 * this.area());\n\t    while (++i < n) {\n\t      a = b;\n\t      b = this[i];\n\t      c = a[0] * b[1] - b[0] * a[1];\n\t      x += (a[0] + b[0]) * c;\n\t      y += (a[1] + b[1]) * c;\n\t    }\n\t    return [ x * k, y * k ];\n\t  };\n\t  d3_geom_polygonPrototype.clip = function(subject) {\n\t    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;\n\t    while (++i < n) {\n\t      input = subject.slice();\n\t      subject.length = 0;\n\t      b = this[i];\n\t      c = input[(m = input.length - closed) - 1];\n\t      j = -1;\n\t      while (++j < m) {\n\t        d = input[j];\n\t        if (d3_geom_polygonInside(d, a, b)) {\n\t          if (!d3_geom_polygonInside(c, a, b)) {\n\t            subject.push(d3_geom_polygonIntersect(c, d, a, b));\n\t          }\n\t          subject.push(d);\n\t        } else if (d3_geom_polygonInside(c, a, b)) {\n\t          subject.push(d3_geom_polygonIntersect(c, d, a, b));\n\t        }\n\t        c = d;\n\t      }\n\t      if (closed) subject.push(subject[0]);\n\t      a = b;\n\t    }\n\t    return subject;\n\t  };\n\t  function d3_geom_polygonInside(p, a, b) {\n\t    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n\t  }\n\t  function d3_geom_polygonIntersect(c, d, a, b) {\n\t    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n\t    return [ x1 + ua * x21, y1 + ua * y21 ];\n\t  }\n\t  function d3_geom_polygonClosed(coordinates) {\n\t    var a = coordinates[0], b = coordinates[coordinates.length - 1];\n\t    return !(a[0] - b[0] || a[1] - b[1]);\n\t  }\n\t  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];\n\t  function d3_geom_voronoiBeach() {\n\t    d3_geom_voronoiRedBlackNode(this);\n\t    this.edge = this.site = this.circle = null;\n\t  }\n\t  function d3_geom_voronoiCreateBeach(site) {\n\t    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\n\t    beach.site = site;\n\t    return beach;\n\t  }\n\t  function d3_geom_voronoiDetachBeach(beach) {\n\t    d3_geom_voronoiDetachCircle(beach);\n\t    d3_geom_voronoiBeaches.remove(beach);\n\t    d3_geom_voronoiBeachPool.push(beach);\n\t    d3_geom_voronoiRedBlackNode(beach);\n\t  }\n\t  function d3_geom_voronoiRemoveBeach(beach) {\n\t    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {\n\t      x: x,\n\t      y: y\n\t    }, previous = beach.P, next = beach.N, disappearing = [ beach ];\n\t    d3_geom_voronoiDetachBeach(beach);\n\t    var lArc = previous;\n\t    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\n\t      previous = lArc.P;\n\t      disappearing.unshift(lArc);\n\t      d3_geom_voronoiDetachBeach(lArc);\n\t      lArc = previous;\n\t    }\n\t    disappearing.unshift(lArc);\n\t    d3_geom_voronoiDetachCircle(lArc);\n\t    var rArc = next;\n\t    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\n\t      next = rArc.N;\n\t      disappearing.push(rArc);\n\t      d3_geom_voronoiDetachBeach(rArc);\n\t      rArc = next;\n\t    }\n\t    disappearing.push(rArc);\n\t    d3_geom_voronoiDetachCircle(rArc);\n\t    var nArcs = disappearing.length, iArc;\n\t    for (iArc = 1; iArc < nArcs; ++iArc) {\n\t      rArc = disappearing[iArc];\n\t      lArc = disappearing[iArc - 1];\n\t      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n\t    }\n\t    lArc = disappearing[0];\n\t    rArc = disappearing[nArcs - 1];\n\t    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\n\t    d3_geom_voronoiAttachCircle(lArc);\n\t    d3_geom_voronoiAttachCircle(rArc);\n\t  }\n\t  function d3_geom_voronoiAddBeach(site) {\n\t    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;\n\t    while (node) {\n\t      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\n\t      if (dxl > ε) node = node.L; else {\n\t        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\n\t        if (dxr > ε) {\n\t          if (!node.R) {\n\t            lArc = node;\n\t            break;\n\t          }\n\t          node = node.R;\n\t        } else {\n\t          if (dxl > -ε) {\n\t            lArc = node.P;\n\t            rArc = node;\n\t          } else if (dxr > -ε) {\n\t            lArc = node;\n\t            rArc = node.N;\n\t          } else {\n\t            lArc = rArc = node;\n\t          }\n\t          break;\n\t        }\n\t      }\n\t    }\n\t    var newArc = d3_geom_voronoiCreateBeach(site);\n\t    d3_geom_voronoiBeaches.insert(lArc, newArc);\n\t    if (!lArc && !rArc) return;\n\t    if (lArc === rArc) {\n\t      d3_geom_voronoiDetachCircle(lArc);\n\t      rArc = d3_geom_voronoiCreateBeach(lArc.site);\n\t      d3_geom_voronoiBeaches.insert(newArc, rArc);\n\t      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n\t      d3_geom_voronoiAttachCircle(lArc);\n\t      d3_geom_voronoiAttachCircle(rArc);\n\t      return;\n\t    }\n\t    if (!rArc) {\n\t      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n\t      return;\n\t    }\n\t    d3_geom_voronoiDetachCircle(lArc);\n\t    d3_geom_voronoiDetachCircle(rArc);\n\t    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {\n\t      x: (cy * hb - by * hc) / d + ax,\n\t      y: (bx * hc - cx * hb) / d + ay\n\t    };\n\t    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\n\t    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\n\t    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\n\t    d3_geom_voronoiAttachCircle(lArc);\n\t    d3_geom_voronoiAttachCircle(rArc);\n\t  }\n\t  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\n\t    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;\n\t    if (!pby2) return rfocx;\n\t    var lArc = arc.P;\n\t    if (!lArc) return -Infinity;\n\t    site = lArc.site;\n\t    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;\n\t    if (!plby2) return lfocx;\n\t    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;\n\t    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\t    return (rfocx + lfocx) / 2;\n\t  }\n\t  function d3_geom_voronoiRightBreakPoint(arc, directrix) {\n\t    var rArc = arc.N;\n\t    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\n\t    var site = arc.site;\n\t    return site.y === directrix ? site.x : Infinity;\n\t  }\n\t  function d3_geom_voronoiCell(site) {\n\t    this.site = site;\n\t    this.edges = [];\n\t  }\n\t  d3_geom_voronoiCell.prototype.prepare = function() {\n\t    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;\n\t    while (iHalfEdge--) {\n\t      edge = halfEdges[iHalfEdge].edge;\n\t      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\n\t    }\n\t    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\n\t    return halfEdges.length;\n\t  };\n\t  function d3_geom_voronoiCloseCells(extent) {\n\t    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;\n\t    while (iCell--) {\n\t      cell = cells[iCell];\n\t      if (!cell || !cell.prepare()) continue;\n\t      halfEdges = cell.edges;\n\t      nHalfEdges = halfEdges.length;\n\t      iHalfEdge = 0;\n\t      while (iHalfEdge < nHalfEdges) {\n\t        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\n\t        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\n\t        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\n\t          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\n\t            x: x0,\n\t            y: abs(x2 - x0) < ε ? y2 : y1\n\t          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\n\t            x: abs(y2 - y1) < ε ? x2 : x1,\n\t            y: y1\n\t          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\n\t            x: x1,\n\t            y: abs(x2 - x1) < ε ? y2 : y0\n\t          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\n\t            x: abs(y2 - y0) < ε ? x2 : x0,\n\t            y: y0\n\t          } : null), cell.site, null));\n\t          ++nHalfEdges;\n\t        }\n\t      }\n\t    }\n\t  }\n\t  function d3_geom_voronoiHalfEdgeOrder(a, b) {\n\t    return b.angle - a.angle;\n\t  }\n\t  function d3_geom_voronoiCircle() {\n\t    d3_geom_voronoiRedBlackNode(this);\n\t    this.x = this.y = this.arc = this.site = this.cy = null;\n\t  }\n\t  function d3_geom_voronoiAttachCircle(arc) {\n\t    var lArc = arc.P, rArc = arc.N;\n\t    if (!lArc || !rArc) return;\n\t    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;\n\t    if (lSite === rSite) return;\n\t    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;\n\t    var d = 2 * (ax * cy - ay * cx);\n\t    if (d >= -ε2) return;\n\t    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;\n\t    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\n\t    circle.arc = arc;\n\t    circle.site = cSite;\n\t    circle.x = x + bx;\n\t    circle.y = cy + Math.sqrt(x * x + y * y);\n\t    circle.cy = cy;\n\t    arc.circle = circle;\n\t    var before = null, node = d3_geom_voronoiCircles._;\n\t    while (node) {\n\t      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n\t        if (node.L) node = node.L; else {\n\t          before = node.P;\n\t          break;\n\t        }\n\t      } else {\n\t        if (node.R) node = node.R; else {\n\t          before = node;\n\t          break;\n\t        }\n\t      }\n\t    }\n\t    d3_geom_voronoiCircles.insert(before, circle);\n\t    if (!before) d3_geom_voronoiFirstCircle = circle;\n\t  }\n\t  function d3_geom_voronoiDetachCircle(arc) {\n\t    var circle = arc.circle;\n\t    if (circle) {\n\t      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\n\t      d3_geom_voronoiCircles.remove(circle);\n\t      d3_geom_voronoiCirclePool.push(circle);\n\t      d3_geom_voronoiRedBlackNode(circle);\n\t      arc.circle = null;\n\t    }\n\t  }\n\t  function d3_geom_voronoiClipEdges(extent) {\n\t    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;\n\t    while (i--) {\n\t      e = edges[i];\n\t      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\n\t        e.a = e.b = null;\n\t        edges.splice(i, 1);\n\t      }\n\t    }\n\t  }\n\t  function d3_geom_voronoiConnectEdge(edge, extent) {\n\t    var vb = edge.b;\n\t    if (vb) return true;\n\t    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;\n\t    if (ry === ly) {\n\t      if (fx < x0 || fx >= x1) return;\n\t      if (lx > rx) {\n\t        if (!va) va = {\n\t          x: fx,\n\t          y: y0\n\t        }; else if (va.y >= y1) return;\n\t        vb = {\n\t          x: fx,\n\t          y: y1\n\t        };\n\t      } else {\n\t        if (!va) va = {\n\t          x: fx,\n\t          y: y1\n\t        }; else if (va.y < y0) return;\n\t        vb = {\n\t          x: fx,\n\t          y: y0\n\t        };\n\t      }\n\t    } else {\n\t      fm = (lx - rx) / (ry - ly);\n\t      fb = fy - fm * fx;\n\t      if (fm < -1 || fm > 1) {\n\t        if (lx > rx) {\n\t          if (!va) va = {\n\t            x: (y0 - fb) / fm,\n\t            y: y0\n\t          }; else if (va.y >= y1) return;\n\t          vb = {\n\t            x: (y1 - fb) / fm,\n\t            y: y1\n\t          };\n\t        } else {\n\t          if (!va) va = {\n\t            x: (y1 - fb) / fm,\n\t            y: y1\n\t          }; else if (va.y < y0) return;\n\t          vb = {\n\t            x: (y0 - fb) / fm,\n\t            y: y0\n\t          };\n\t        }\n\t      } else {\n\t        if (ly < ry) {\n\t          if (!va) va = {\n\t            x: x0,\n\t            y: fm * x0 + fb\n\t          }; else if (va.x >= x1) return;\n\t          vb = {\n\t            x: x1,\n\t            y: fm * x1 + fb\n\t          };\n\t        } else {\n\t          if (!va) va = {\n\t            x: x1,\n\t            y: fm * x1 + fb\n\t          }; else if (va.x < x0) return;\n\t          vb = {\n\t            x: x0,\n\t            y: fm * x0 + fb\n\t          };\n\t        }\n\t      }\n\t    }\n\t    edge.a = va;\n\t    edge.b = vb;\n\t    return true;\n\t  }\n\t  function d3_geom_voronoiEdge(lSite, rSite) {\n\t    this.l = lSite;\n\t    this.r = rSite;\n\t    this.a = this.b = null;\n\t  }\n\t  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\n\t    var edge = new d3_geom_voronoiEdge(lSite, rSite);\n\t    d3_geom_voronoiEdges.push(edge);\n\t    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\n\t    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\n\t    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\n\t    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\n\t    return edge;\n\t  }\n\t  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\n\t    var edge = new d3_geom_voronoiEdge(lSite, null);\n\t    edge.a = va;\n\t    edge.b = vb;\n\t    d3_geom_voronoiEdges.push(edge);\n\t    return edge;\n\t  }\n\t  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\n\t    if (!edge.a && !edge.b) {\n\t      edge.a = vertex;\n\t      edge.l = lSite;\n\t      edge.r = rSite;\n\t    } else if (edge.l === rSite) {\n\t      edge.b = vertex;\n\t    } else {\n\t      edge.a = vertex;\n\t    }\n\t  }\n\t  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\n\t    var va = edge.a, vb = edge.b;\n\t    this.edge = edge;\n\t    this.site = lSite;\n\t    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\n\t  }\n\t  d3_geom_voronoiHalfEdge.prototype = {\n\t    start: function() {\n\t      return this.edge.l === this.site ? this.edge.a : this.edge.b;\n\t    },\n\t    end: function() {\n\t      return this.edge.l === this.site ? this.edge.b : this.edge.a;\n\t    }\n\t  };\n\t  function d3_geom_voronoiRedBlackTree() {\n\t    this._ = null;\n\t  }\n\t  function d3_geom_voronoiRedBlackNode(node) {\n\t    node.U = node.C = node.L = node.R = node.P = node.N = null;\n\t  }\n\t  d3_geom_voronoiRedBlackTree.prototype = {\n\t    insert: function(after, node) {\n\t      var parent, grandpa, uncle;\n\t      if (after) {\n\t        node.P = after;\n\t        node.N = after.N;\n\t        if (after.N) after.N.P = node;\n\t        after.N = node;\n\t        if (after.R) {\n\t          after = after.R;\n\t          while (after.L) after = after.L;\n\t          after.L = node;\n\t        } else {\n\t          after.R = node;\n\t        }\n\t        parent = after;\n\t      } else if (this._) {\n\t        after = d3_geom_voronoiRedBlackFirst(this._);\n\t        node.P = null;\n\t        node.N = after;\n\t        after.P = after.L = node;\n\t        parent = after;\n\t      } else {\n\t        node.P = node.N = null;\n\t        this._ = node;\n\t        parent = null;\n\t      }\n\t      node.L = node.R = null;\n\t      node.U = parent;\n\t      node.C = true;\n\t      after = node;\n\t      while (parent && parent.C) {\n\t        grandpa = parent.U;\n\t        if (parent === grandpa.L) {\n\t          uncle = grandpa.R;\n\t          if (uncle && uncle.C) {\n\t            parent.C = uncle.C = false;\n\t            grandpa.C = true;\n\t            after = grandpa;\n\t          } else {\n\t            if (after === parent.R) {\n\t              d3_geom_voronoiRedBlackRotateLeft(this, parent);\n\t              after = parent;\n\t              parent = after.U;\n\t            }\n\t            parent.C = false;\n\t            grandpa.C = true;\n\t            d3_geom_voronoiRedBlackRotateRight(this, grandpa);\n\t          }\n\t        } else {\n\t          uncle = grandpa.L;\n\t          if (uncle && uncle.C) {\n\t            parent.C = uncle.C = false;\n\t            grandpa.C = true;\n\t            after = grandpa;\n\t          } else {\n\t            if (after === parent.L) {\n\t              d3_geom_voronoiRedBlackRotateRight(this, parent);\n\t              after = parent;\n\t              parent = after.U;\n\t            }\n\t            parent.C = false;\n\t            grandpa.C = true;\n\t            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\n\t          }\n\t        }\n\t        parent = after.U;\n\t      }\n\t      this._.C = false;\n\t    },\n\t    remove: function(node) {\n\t      if (node.N) node.N.P = node.P;\n\t      if (node.P) node.P.N = node.N;\n\t      node.N = node.P = null;\n\t      var parent = node.U, sibling, left = node.L, right = node.R, next, red;\n\t      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);\n\t      if (parent) {\n\t        if (parent.L === node) parent.L = next; else parent.R = next;\n\t      } else {\n\t        this._ = next;\n\t      }\n\t      if (left && right) {\n\t        red = next.C;\n\t        next.C = node.C;\n\t        next.L = left;\n\t        left.U = next;\n\t        if (next !== right) {\n\t          parent = next.U;\n\t          next.U = node.U;\n\t          node = next.R;\n\t          parent.L = node;\n\t          next.R = right;\n\t          right.U = next;\n\t        } else {\n\t          next.U = parent;\n\t          parent = next;\n\t          node = next.R;\n\t        }\n\t      } else {\n\t        red = node.C;\n\t        node = next;\n\t      }\n\t      if (node) node.U = parent;\n\t      if (red) return;\n\t      if (node && node.C) {\n\t        node.C = false;\n\t        return;\n\t      }\n\t      do {\n\t        if (node === this._) break;\n\t        if (node === parent.L) {\n\t          sibling = parent.R;\n\t          if (sibling.C) {\n\t            sibling.C = false;\n\t            parent.C = true;\n\t            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n\t            sibling = parent.R;\n\t          }\n\t          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n\t            if (!sibling.R || !sibling.R.C) {\n\t              sibling.L.C = false;\n\t              sibling.C = true;\n\t              d3_geom_voronoiRedBlackRotateRight(this, sibling);\n\t              sibling = parent.R;\n\t            }\n\t            sibling.C = parent.C;\n\t            parent.C = sibling.R.C = false;\n\t            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n\t            node = this._;\n\t            break;\n\t          }\n\t        } else {\n\t          sibling = parent.L;\n\t          if (sibling.C) {\n\t            sibling.C = false;\n\t            parent.C = true;\n\t            d3_geom_voronoiRedBlackRotateRight(this, parent);\n\t            sibling = parent.L;\n\t          }\n\t          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n\t            if (!sibling.L || !sibling.L.C) {\n\t              sibling.R.C = false;\n\t              sibling.C = true;\n\t              d3_geom_voronoiRedBlackRotateLeft(this, sibling);\n\t              sibling = parent.L;\n\t            }\n\t            sibling.C = parent.C;\n\t            parent.C = sibling.L.C = false;\n\t            d3_geom_voronoiRedBlackRotateRight(this, parent);\n\t            node = this._;\n\t            break;\n\t          }\n\t        }\n\t        sibling.C = true;\n\t        node = parent;\n\t        parent = parent.U;\n\t      } while (!node.C);\n\t      if (node) node.C = false;\n\t    }\n\t  };\n\t  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\n\t    var p = node, q = node.R, parent = p.U;\n\t    if (parent) {\n\t      if (parent.L === p) parent.L = q; else parent.R = q;\n\t    } else {\n\t      tree._ = q;\n\t    }\n\t    q.U = parent;\n\t    p.U = q;\n\t    p.R = q.L;\n\t    if (p.R) p.R.U = p;\n\t    q.L = p;\n\t  }\n\t  function d3_geom_voronoiRedBlackRotateRight(tree, node) {\n\t    var p = node, q = node.L, parent = p.U;\n\t    if (parent) {\n\t      if (parent.L === p) parent.L = q; else parent.R = q;\n\t    } else {\n\t      tree._ = q;\n\t    }\n\t    q.U = parent;\n\t    p.U = q;\n\t    p.L = q.R;\n\t    if (p.L) p.L.U = p;\n\t    q.R = p;\n\t  }\n\t  function d3_geom_voronoiRedBlackFirst(node) {\n\t    while (node.L) node = node.L;\n\t    return node;\n\t  }\n\t  function d3_geom_voronoi(sites, bbox) {\n\t    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;\n\t    d3_geom_voronoiEdges = [];\n\t    d3_geom_voronoiCells = new Array(sites.length);\n\t    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\n\t    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\n\t    while (true) {\n\t      circle = d3_geom_voronoiFirstCircle;\n\t      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\n\t        if (site.x !== x0 || site.y !== y0) {\n\t          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\n\t          d3_geom_voronoiAddBeach(site);\n\t          x0 = site.x, y0 = site.y;\n\t        }\n\t        site = sites.pop();\n\t      } else if (circle) {\n\t        d3_geom_voronoiRemoveBeach(circle.arc);\n\t      } else {\n\t        break;\n\t      }\n\t    }\n\t    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\n\t    var diagram = {\n\t      cells: d3_geom_voronoiCells,\n\t      edges: d3_geom_voronoiEdges\n\t    };\n\t    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\n\t    return diagram;\n\t  }\n\t  function d3_geom_voronoiVertexOrder(a, b) {\n\t    return b.y - a.y || b.x - a.x;\n\t  }\n\t  d3.geom.voronoi = function(points) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;\n\t    if (points) return voronoi(points);\n\t    function voronoi(data) {\n\t      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];\n\t      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {\n\t        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {\n\t          var s = e.start();\n\t          return [ s.x, s.y ];\n\t        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];\n\t        polygon.point = data[i];\n\t      });\n\t      return polygons;\n\t    }\n\t    function sites(data) {\n\t      return data.map(function(d, i) {\n\t        return {\n\t          x: Math.round(fx(d, i) / ε) * ε,\n\t          y: Math.round(fy(d, i) / ε) * ε,\n\t          i: i\n\t        };\n\t      });\n\t    }\n\t    voronoi.links = function(data) {\n\t      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {\n\t        return edge.l && edge.r;\n\t      }).map(function(edge) {\n\t        return {\n\t          source: data[edge.l.i],\n\t          target: data[edge.r.i]\n\t        };\n\t      });\n\t    };\n\t    voronoi.triangles = function(data) {\n\t      var triangles = [];\n\t      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {\n\t        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;\n\t        while (++j < m) {\n\t          e0 = e1;\n\t          s0 = s1;\n\t          e1 = edges[j].edge;\n\t          s1 = e1.l === site ? e1.r : e1.l;\n\t          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\n\t            triangles.push([ data[i], data[s0.i], data[s1.i] ]);\n\t          }\n\t        }\n\t      });\n\t      return triangles;\n\t    };\n\t    voronoi.x = function(_) {\n\t      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\n\t    };\n\t    voronoi.y = function(_) {\n\t      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\n\t    };\n\t    voronoi.clipExtent = function(_) {\n\t      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\n\t      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\n\t      return voronoi;\n\t    };\n\t    voronoi.size = function(_) {\n\t      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\n\t      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);\n\t    };\n\t    return voronoi;\n\t  };\n\t  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];\n\t  function d3_geom_voronoiTriangleArea(a, b, c) {\n\t    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\n\t  }\n\t  d3.geom.delaunay = function(vertices) {\n\t    return d3.geom.voronoi().triangles(vertices);\n\t  };\n\t  d3.geom.quadtree = function(points, x1, y1, x2, y2) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY, compat;\n\t    if (compat = arguments.length) {\n\t      x = d3_geom_quadtreeCompatX;\n\t      y = d3_geom_quadtreeCompatY;\n\t      if (compat === 3) {\n\t        y2 = y1;\n\t        x2 = x1;\n\t        y1 = x1 = 0;\n\t      }\n\t      return quadtree(points);\n\t    }\n\t    function quadtree(data) {\n\t      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;\n\t      if (x1 != null) {\n\t        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\n\t      } else {\n\t        x2_ = y2_ = -(x1_ = y1_ = Infinity);\n\t        xs = [], ys = [];\n\t        n = data.length;\n\t        if (compat) for (i = 0; i < n; ++i) {\n\t          d = data[i];\n\t          if (d.x < x1_) x1_ = d.x;\n\t          if (d.y < y1_) y1_ = d.y;\n\t          if (d.x > x2_) x2_ = d.x;\n\t          if (d.y > y2_) y2_ = d.y;\n\t          xs.push(d.x);\n\t          ys.push(d.y);\n\t        } else for (i = 0; i < n; ++i) {\n\t          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);\n\t          if (x_ < x1_) x1_ = x_;\n\t          if (y_ < y1_) y1_ = y_;\n\t          if (x_ > x2_) x2_ = x_;\n\t          if (y_ > y2_) y2_ = y_;\n\t          xs.push(x_);\n\t          ys.push(y_);\n\t        }\n\t      }\n\t      var dx = x2_ - x1_, dy = y2_ - y1_;\n\t      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;\n\t      function insert(n, d, x, y, x1, y1, x2, y2) {\n\t        if (isNaN(x) || isNaN(y)) return;\n\t        if (n.leaf) {\n\t          var nx = n.x, ny = n.y;\n\t          if (nx != null) {\n\t            if (abs(nx - x) + abs(ny - y) < .01) {\n\t              insertChild(n, d, x, y, x1, y1, x2, y2);\n\t            } else {\n\t              var nPoint = n.point;\n\t              n.x = n.y = n.point = null;\n\t              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n\t              insertChild(n, d, x, y, x1, y1, x2, y2);\n\t            }\n\t          } else {\n\t            n.x = x, n.y = y, n.point = d;\n\t          }\n\t        } else {\n\t          insertChild(n, d, x, y, x1, y1, x2, y2);\n\t        }\n\t      }\n\t      function insertChild(n, d, x, y, x1, y1, x2, y2) {\n\t        var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, right = x >= sx, bottom = y >= sy, i = (bottom << 1) + right;\n\t        n.leaf = false;\n\t        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\n\t        if (right) x1 = sx; else x2 = sx;\n\t        if (bottom) y1 = sy; else y2 = sy;\n\t        insert(n, d, x, y, x1, y1, x2, y2);\n\t      }\n\t      var root = d3_geom_quadtreeNode();\n\t      root.add = function(d) {\n\t        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\n\t      };\n\t      root.visit = function(f) {\n\t        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\n\t      };\n\t      i = -1;\n\t      if (x1 == null) {\n\t        while (++i < n) {\n\t          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n\t        }\n\t        --i;\n\t      } else data.forEach(root.add);\n\t      xs = ys = data = d = null;\n\t      return root;\n\t    }\n\t    quadtree.x = function(_) {\n\t      return arguments.length ? (x = _, quadtree) : x;\n\t    };\n\t    quadtree.y = function(_) {\n\t      return arguments.length ? (y = _, quadtree) : y;\n\t    };\n\t    quadtree.extent = function(_) {\n\t      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];\n\t      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], \n\t      y2 = +_[1][1];\n\t      return quadtree;\n\t    };\n\t    quadtree.size = function(_) {\n\t      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];\n\t      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\n\t      return quadtree;\n\t    };\n\t    return quadtree;\n\t  };\n\t  function d3_geom_quadtreeCompatX(d) {\n\t    return d.x;\n\t  }\n\t  function d3_geom_quadtreeCompatY(d) {\n\t    return d.y;\n\t  }\n\t  function d3_geom_quadtreeNode() {\n\t    return {\n\t      leaf: true,\n\t      nodes: [],\n\t      point: null,\n\t      x: null,\n\t      y: null\n\t    };\n\t  }\n\t  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\n\t    if (!f(node, x1, y1, x2, y2)) {\n\t      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;\n\t      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\n\t      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\n\t      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\n\t      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\n\t    }\n\t  }\n\t  d3.interpolateRgb = d3_interpolateRgb;\n\t  function d3_interpolateRgb(a, b) {\n\t    a = d3.rgb(a);\n\t    b = d3.rgb(b);\n\t    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;\n\t    return function(t) {\n\t      return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\n\t    };\n\t  }\n\t  d3.interpolateObject = d3_interpolateObject;\n\t  function d3_interpolateObject(a, b) {\n\t    var i = {}, c = {}, k;\n\t    for (k in a) {\n\t      if (k in b) {\n\t        i[k] = d3_interpolate(a[k], b[k]);\n\t      } else {\n\t        c[k] = a[k];\n\t      }\n\t    }\n\t    for (k in b) {\n\t      if (!(k in a)) {\n\t        c[k] = b[k];\n\t      }\n\t    }\n\t    return function(t) {\n\t      for (k in i) c[k] = i[k](t);\n\t      return c;\n\t    };\n\t  }\n\t  d3.interpolateNumber = d3_interpolateNumber;\n\t  function d3_interpolateNumber(a, b) {\n\t    a = +a, b = +b;\n\t    return function(t) {\n\t      return a * (1 - t) + b * t;\n\t    };\n\t  }\n\t  d3.interpolateString = d3_interpolateString;\n\t  function d3_interpolateString(a, b) {\n\t    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0, am, bm, bs, i = -1, s = [], q = [];\n\t    a = a + \"\", b = b + \"\";\n\t    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {\n\t      if ((bs = bm.index) > bi) {\n\t        bs = b.slice(bi, bs);\n\t        if (s[i]) s[i] += bs; else s[++i] = bs;\n\t      }\n\t      if ((am = am[0]) === (bm = bm[0])) {\n\t        if (s[i]) s[i] += bm; else s[++i] = bm;\n\t      } else {\n\t        s[++i] = null;\n\t        q.push({\n\t          i: i,\n\t          x: d3_interpolateNumber(am, bm)\n\t        });\n\t      }\n\t      bi = d3_interpolate_numberB.lastIndex;\n\t    }\n\t    if (bi < b.length) {\n\t      bs = b.slice(bi);\n\t      if (s[i]) s[i] += bs; else s[++i] = bs;\n\t    }\n\t    return s.length < 2 ? q[0] ? (b = q[0].x, function(t) {\n\t      return b(t) + \"\";\n\t    }) : function() {\n\t      return b;\n\t    } : (b = q.length, function(t) {\n\t      for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n\t      return s.join(\"\");\n\t    });\n\t  }\n\t  var d3_interpolate_numberA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g, d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, \"g\");\n\t  d3.interpolate = d3_interpolate;\n\t  function d3_interpolate(a, b) {\n\t    var i = d3.interpolators.length, f;\n\t    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;\n\t    return f;\n\t  }\n\t  d3.interpolators = [ function(a, b) {\n\t    var t = typeof b;\n\t    return (t === \"string\" ? d3_rgb_names.has(b) || /^(#|rgb\\(|hsl\\()/.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === \"object\" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);\n\t  } ];\n\t  d3.interpolateArray = d3_interpolateArray;\n\t  function d3_interpolateArray(a, b) {\n\t    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;\n\t    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));\n\t    for (;i < na; ++i) c[i] = a[i];\n\t    for (;i < nb; ++i) c[i] = b[i];\n\t    return function(t) {\n\t      for (i = 0; i < n0; ++i) c[i] = x[i](t);\n\t      return c;\n\t    };\n\t  }\n\t  var d3_ease_default = function() {\n\t    return d3_identity;\n\t  };\n\t  var d3_ease = d3.map({\n\t    linear: d3_ease_default,\n\t    poly: d3_ease_poly,\n\t    quad: function() {\n\t      return d3_ease_quad;\n\t    },\n\t    cubic: function() {\n\t      return d3_ease_cubic;\n\t    },\n\t    sin: function() {\n\t      return d3_ease_sin;\n\t    },\n\t    exp: function() {\n\t      return d3_ease_exp;\n\t    },\n\t    circle: function() {\n\t      return d3_ease_circle;\n\t    },\n\t    elastic: d3_ease_elastic,\n\t    back: d3_ease_back,\n\t    bounce: function() {\n\t      return d3_ease_bounce;\n\t    }\n\t  });\n\t  var d3_ease_mode = d3.map({\n\t    \"in\": d3_identity,\n\t    out: d3_ease_reverse,\n\t    \"in-out\": d3_ease_reflect,\n\t    \"out-in\": function(f) {\n\t      return d3_ease_reflect(d3_ease_reverse(f));\n\t    }\n\t  });\n\t  d3.ease = function(name) {\n\t    var i = name.indexOf(\"-\"), t = i >= 0 ? name.slice(0, i) : name, m = i >= 0 ? name.slice(i + 1) : \"in\";\n\t    t = d3_ease.get(t) || d3_ease_default;\n\t    m = d3_ease_mode.get(m) || d3_identity;\n\t    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\n\t  };\n\t  function d3_ease_clamp(f) {\n\t    return function(t) {\n\t      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\n\t    };\n\t  }\n\t  function d3_ease_reverse(f) {\n\t    return function(t) {\n\t      return 1 - f(1 - t);\n\t    };\n\t  }\n\t  function d3_ease_reflect(f) {\n\t    return function(t) {\n\t      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\n\t    };\n\t  }\n\t  function d3_ease_quad(t) {\n\t    return t * t;\n\t  }\n\t  function d3_ease_cubic(t) {\n\t    return t * t * t;\n\t  }\n\t  function d3_ease_cubicInOut(t) {\n\t    if (t <= 0) return 0;\n\t    if (t >= 1) return 1;\n\t    var t2 = t * t, t3 = t2 * t;\n\t    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\n\t  }\n\t  function d3_ease_poly(e) {\n\t    return function(t) {\n\t      return Math.pow(t, e);\n\t    };\n\t  }\n\t  function d3_ease_sin(t) {\n\t    return 1 - Math.cos(t * halfπ);\n\t  }\n\t  function d3_ease_exp(t) {\n\t    return Math.pow(2, 10 * (t - 1));\n\t  }\n\t  function d3_ease_circle(t) {\n\t    return 1 - Math.sqrt(1 - t * t);\n\t  }\n\t  function d3_ease_elastic(a, p) {\n\t    var s;\n\t    if (arguments.length < 2) p = .45;\n\t    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;\n\t    return function(t) {\n\t      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\n\t    };\n\t  }\n\t  function d3_ease_back(s) {\n\t    if (!s) s = 1.70158;\n\t    return function(t) {\n\t      return t * t * ((s + 1) * t - s);\n\t    };\n\t  }\n\t  function d3_ease_bounce(t) {\n\t    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n\t  }\n\t  d3.interpolateHcl = d3_interpolateHcl;\n\t  function d3_interpolateHcl(a, b) {\n\t    a = d3.hcl(a);\n\t    b = d3.hcl(b);\n\t    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;\n\t    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\n\t    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n\t    return function(t) {\n\t      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\n\t    };\n\t  }\n\t  d3.interpolateHsl = d3_interpolateHsl;\n\t  function d3_interpolateHsl(a, b) {\n\t    a = d3.hsl(a);\n\t    b = d3.hsl(b);\n\t    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;\n\t    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\n\t    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n\t    return function(t) {\n\t      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\n\t    };\n\t  }\n\t  d3.interpolateLab = d3_interpolateLab;\n\t  function d3_interpolateLab(a, b) {\n\t    a = d3.lab(a);\n\t    b = d3.lab(b);\n\t    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;\n\t    return function(t) {\n\t      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\n\t    };\n\t  }\n\t  d3.interpolateRound = d3_interpolateRound;\n\t  function d3_interpolateRound(a, b) {\n\t    b -= a;\n\t    return function(t) {\n\t      return Math.round(a + b * t);\n\t    };\n\t  }\n\t  d3.transform = function(string) {\n\t    var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\n\t    return (d3.transform = function(string) {\n\t      if (string != null) {\n\t        g.setAttribute(\"transform\", string);\n\t        var t = g.transform.baseVal.consolidate();\n\t      }\n\t      return new d3_transform(t ? t.matrix : d3_transformIdentity);\n\t    })(string);\n\t  };\n\t  function d3_transform(m) {\n\t    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\n\t    if (r0[0] * r1[1] < r1[0] * r0[1]) {\n\t      r0[0] *= -1;\n\t      r0[1] *= -1;\n\t      kx *= -1;\n\t      kz *= -1;\n\t    }\n\t    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\n\t    this.translate = [ m.e, m.f ];\n\t    this.scale = [ kx, ky ];\n\t    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\n\t  }\n\t  d3_transform.prototype.toString = function() {\n\t    return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\n\t  };\n\t  function d3_transformDot(a, b) {\n\t    return a[0] * b[0] + a[1] * b[1];\n\t  }\n\t  function d3_transformNormalize(a) {\n\t    var k = Math.sqrt(d3_transformDot(a, a));\n\t    if (k) {\n\t      a[0] /= k;\n\t      a[1] /= k;\n\t    }\n\t    return k;\n\t  }\n\t  function d3_transformCombine(a, b, k) {\n\t    a[0] += k * b[0];\n\t    a[1] += k * b[1];\n\t    return a;\n\t  }\n\t  var d3_transformIdentity = {\n\t    a: 1,\n\t    b: 0,\n\t    c: 0,\n\t    d: 1,\n\t    e: 0,\n\t    f: 0\n\t  };\n\t  d3.interpolateTransform = d3_interpolateTransform;\n\t  function d3_interpolateTransform(a, b) {\n\t    var s = [], q = [], n, A = d3.transform(a), B = d3.transform(b), ta = A.translate, tb = B.translate, ra = A.rotate, rb = B.rotate, wa = A.skew, wb = B.skew, ka = A.scale, kb = B.scale;\n\t    if (ta[0] != tb[0] || ta[1] != tb[1]) {\n\t      s.push(\"translate(\", null, \",\", null, \")\");\n\t      q.push({\n\t        i: 1,\n\t        x: d3_interpolateNumber(ta[0], tb[0])\n\t      }, {\n\t        i: 3,\n\t        x: d3_interpolateNumber(ta[1], tb[1])\n\t      });\n\t    } else if (tb[0] || tb[1]) {\n\t      s.push(\"translate(\" + tb + \")\");\n\t    } else {\n\t      s.push(\"\");\n\t    }\n\t    if (ra != rb) {\n\t      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;\n\t      q.push({\n\t        i: s.push(s.pop() + \"rotate(\", null, \")\") - 2,\n\t        x: d3_interpolateNumber(ra, rb)\n\t      });\n\t    } else if (rb) {\n\t      s.push(s.pop() + \"rotate(\" + rb + \")\");\n\t    }\n\t    if (wa != wb) {\n\t      q.push({\n\t        i: s.push(s.pop() + \"skewX(\", null, \")\") - 2,\n\t        x: d3_interpolateNumber(wa, wb)\n\t      });\n\t    } else if (wb) {\n\t      s.push(s.pop() + \"skewX(\" + wb + \")\");\n\t    }\n\t    if (ka[0] != kb[0] || ka[1] != kb[1]) {\n\t      n = s.push(s.pop() + \"scale(\", null, \",\", null, \")\");\n\t      q.push({\n\t        i: n - 4,\n\t        x: d3_interpolateNumber(ka[0], kb[0])\n\t      }, {\n\t        i: n - 2,\n\t        x: d3_interpolateNumber(ka[1], kb[1])\n\t      });\n\t    } else if (kb[0] != 1 || kb[1] != 1) {\n\t      s.push(s.pop() + \"scale(\" + kb + \")\");\n\t    }\n\t    n = q.length;\n\t    return function(t) {\n\t      var i = -1, o;\n\t      while (++i < n) s[(o = q[i]).i] = o.x(t);\n\t      return s.join(\"\");\n\t    };\n\t  }\n\t  function d3_uninterpolateNumber(a, b) {\n\t    b = (b -= a = +a) || 1 / b;\n\t    return function(x) {\n\t      return (x - a) / b;\n\t    };\n\t  }\n\t  function d3_uninterpolateClamp(a, b) {\n\t    b = (b -= a = +a) || 1 / b;\n\t    return function(x) {\n\t      return Math.max(0, Math.min(1, (x - a) / b));\n\t    };\n\t  }\n\t  d3.layout = {};\n\t  d3.layout.bundle = function() {\n\t    return function(links) {\n\t      var paths = [], i = -1, n = links.length;\n\t      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));\n\t      return paths;\n\t    };\n\t  };\n\t  function d3_layout_bundlePath(link) {\n\t    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];\n\t    while (start !== lca) {\n\t      start = start.parent;\n\t      points.push(start);\n\t    }\n\t    var k = points.length;\n\t    while (end !== lca) {\n\t      points.splice(k, 0, end);\n\t      end = end.parent;\n\t    }\n\t    return points;\n\t  }\n\t  function d3_layout_bundleAncestors(node) {\n\t    var ancestors = [], parent = node.parent;\n\t    while (parent != null) {\n\t      ancestors.push(node);\n\t      node = parent;\n\t      parent = parent.parent;\n\t    }\n\t    ancestors.push(node);\n\t    return ancestors;\n\t  }\n\t  function d3_layout_bundleLeastCommonAncestor(a, b) {\n\t    if (a === b) return a;\n\t    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;\n\t    while (aNode === bNode) {\n\t      sharedNode = aNode;\n\t      aNode = aNodes.pop();\n\t      bNode = bNodes.pop();\n\t    }\n\t    return sharedNode;\n\t  }\n\t  d3.layout.chord = function() {\n\t    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;\n\t    function relayout() {\n\t      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;\n\t      chords = [];\n\t      groups = [];\n\t      k = 0, i = -1;\n\t      while (++i < n) {\n\t        x = 0, j = -1;\n\t        while (++j < n) {\n\t          x += matrix[i][j];\n\t        }\n\t        groupSums.push(x);\n\t        subgroupIndex.push(d3.range(n));\n\t        k += x;\n\t      }\n\t      if (sortGroups) {\n\t        groupIndex.sort(function(a, b) {\n\t          return sortGroups(groupSums[a], groupSums[b]);\n\t        });\n\t      }\n\t      if (sortSubgroups) {\n\t        subgroupIndex.forEach(function(d, i) {\n\t          d.sort(function(a, b) {\n\t            return sortSubgroups(matrix[i][a], matrix[i][b]);\n\t          });\n\t        });\n\t      }\n\t      k = (τ - padding * n) / k;\n\t      x = 0, i = -1;\n\t      while (++i < n) {\n\t        x0 = x, j = -1;\n\t        while (++j < n) {\n\t          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;\n\t          subgroups[di + \"-\" + dj] = {\n\t            index: di,\n\t            subindex: dj,\n\t            startAngle: a0,\n\t            endAngle: a1,\n\t            value: v\n\t          };\n\t        }\n\t        groups[di] = {\n\t          index: di,\n\t          startAngle: x0,\n\t          endAngle: x,\n\t          value: (x - x0) / k\n\t        };\n\t        x += padding;\n\t      }\n\t      i = -1;\n\t      while (++i < n) {\n\t        j = i - 1;\n\t        while (++j < n) {\n\t          var source = subgroups[i + \"-\" + j], target = subgroups[j + \"-\" + i];\n\t          if (source.value || target.value) {\n\t            chords.push(source.value < target.value ? {\n\t              source: target,\n\t              target: source\n\t            } : {\n\t              source: source,\n\t              target: target\n\t            });\n\t          }\n\t        }\n\t      }\n\t      if (sortChords) resort();\n\t    }\n\t    function resort() {\n\t      chords.sort(function(a, b) {\n\t        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n\t      });\n\t    }\n\t    chord.matrix = function(x) {\n\t      if (!arguments.length) return matrix;\n\t      n = (matrix = x) && matrix.length;\n\t      chords = groups = null;\n\t      return chord;\n\t    };\n\t    chord.padding = function(x) {\n\t      if (!arguments.length) return padding;\n\t      padding = x;\n\t      chords = groups = null;\n\t      return chord;\n\t    };\n\t    chord.sortGroups = function(x) {\n\t      if (!arguments.length) return sortGroups;\n\t      sortGroups = x;\n\t      chords = groups = null;\n\t      return chord;\n\t    };\n\t    chord.sortSubgroups = function(x) {\n\t      if (!arguments.length) return sortSubgroups;\n\t      sortSubgroups = x;\n\t      chords = null;\n\t      return chord;\n\t    };\n\t    chord.sortChords = function(x) {\n\t      if (!arguments.length) return sortChords;\n\t      sortChords = x;\n\t      if (chords) resort();\n\t      return chord;\n\t    };\n\t    chord.chords = function() {\n\t      if (!chords) relayout();\n\t      return chords;\n\t    };\n\t    chord.groups = function() {\n\t      if (!groups) relayout();\n\t      return groups;\n\t    };\n\t    return chord;\n\t  };\n\t  d3.layout.force = function() {\n\t    var force = {}, event = d3.dispatch(\"start\", \"tick\", \"end\"), size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, chargeDistance2 = d3_layout_forceChargeDistance2, gravity = .1, theta2 = .64, nodes = [], links = [], distances, strengths, charges;\n\t    function repulse(node) {\n\t      return function(quad, x1, _, x2) {\n\t        if (quad.point !== node) {\n\t          var dx = quad.cx - node.x, dy = quad.cy - node.y, dw = x2 - x1, dn = dx * dx + dy * dy;\n\t          if (dw * dw / theta2 < dn) {\n\t            if (dn < chargeDistance2) {\n\t              var k = quad.charge / dn;\n\t              node.px -= dx * k;\n\t              node.py -= dy * k;\n\t            }\n\t            return true;\n\t          }\n\t          if (quad.point && dn && dn < chargeDistance2) {\n\t            var k = quad.pointCharge / dn;\n\t            node.px -= dx * k;\n\t            node.py -= dy * k;\n\t          }\n\t        }\n\t        return !quad.charge;\n\t      };\n\t    }\n\t    force.tick = function() {\n\t      if ((alpha *= .99) < .005) {\n\t        event.end({\n\t          type: \"end\",\n\t          alpha: alpha = 0\n\t        });\n\t        return true;\n\t      }\n\t      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;\n\t      for (i = 0; i < m; ++i) {\n\t        o = links[i];\n\t        s = o.source;\n\t        t = o.target;\n\t        x = t.x - s.x;\n\t        y = t.y - s.y;\n\t        if (l = x * x + y * y) {\n\t          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n\t          x *= l;\n\t          y *= l;\n\t          t.x -= x * (k = s.weight / (t.weight + s.weight));\n\t          t.y -= y * k;\n\t          s.x += x * (k = 1 - k);\n\t          s.y += y * k;\n\t        }\n\t      }\n\t      if (k = alpha * gravity) {\n\t        x = size[0] / 2;\n\t        y = size[1] / 2;\n\t        i = -1;\n\t        if (k) while (++i < n) {\n\t          o = nodes[i];\n\t          o.x += (x - o.x) * k;\n\t          o.y += (y - o.y) * k;\n\t        }\n\t      }\n\t      if (charge) {\n\t        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n\t        i = -1;\n\t        while (++i < n) {\n\t          if (!(o = nodes[i]).fixed) {\n\t            q.visit(repulse(o));\n\t          }\n\t        }\n\t      }\n\t      i = -1;\n\t      while (++i < n) {\n\t        o = nodes[i];\n\t        if (o.fixed) {\n\t          o.x = o.px;\n\t          o.y = o.py;\n\t        } else {\n\t          o.x -= (o.px - (o.px = o.x)) * friction;\n\t          o.y -= (o.py - (o.py = o.y)) * friction;\n\t        }\n\t      }\n\t      event.tick({\n\t        type: \"tick\",\n\t        alpha: alpha\n\t      });\n\t    };\n\t    force.nodes = function(x) {\n\t      if (!arguments.length) return nodes;\n\t      nodes = x;\n\t      return force;\n\t    };\n\t    force.links = function(x) {\n\t      if (!arguments.length) return links;\n\t      links = x;\n\t      return force;\n\t    };\n\t    force.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = x;\n\t      return force;\n\t    };\n\t    force.linkDistance = function(x) {\n\t      if (!arguments.length) return linkDistance;\n\t      linkDistance = typeof x === \"function\" ? x : +x;\n\t      return force;\n\t    };\n\t    force.distance = force.linkDistance;\n\t    force.linkStrength = function(x) {\n\t      if (!arguments.length) return linkStrength;\n\t      linkStrength = typeof x === \"function\" ? x : +x;\n\t      return force;\n\t    };\n\t    force.friction = function(x) {\n\t      if (!arguments.length) return friction;\n\t      friction = +x;\n\t      return force;\n\t    };\n\t    force.charge = function(x) {\n\t      if (!arguments.length) return charge;\n\t      charge = typeof x === \"function\" ? x : +x;\n\t      return force;\n\t    };\n\t    force.chargeDistance = function(x) {\n\t      if (!arguments.length) return Math.sqrt(chargeDistance2);\n\t      chargeDistance2 = x * x;\n\t      return force;\n\t    };\n\t    force.gravity = function(x) {\n\t      if (!arguments.length) return gravity;\n\t      gravity = +x;\n\t      return force;\n\t    };\n\t    force.theta = function(x) {\n\t      if (!arguments.length) return Math.sqrt(theta2);\n\t      theta2 = x * x;\n\t      return force;\n\t    };\n\t    force.alpha = function(x) {\n\t      if (!arguments.length) return alpha;\n\t      x = +x;\n\t      if (alpha) {\n\t        if (x > 0) alpha = x; else alpha = 0;\n\t      } else if (x > 0) {\n\t        event.start({\n\t          type: \"start\",\n\t          alpha: alpha = x\n\t        });\n\t        d3.timer(force.tick);\n\t      }\n\t      return force;\n\t    };\n\t    force.start = function() {\n\t      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;\n\t      for (i = 0; i < n; ++i) {\n\t        (o = nodes[i]).index = i;\n\t        o.weight = 0;\n\t      }\n\t      for (i = 0; i < m; ++i) {\n\t        o = links[i];\n\t        if (typeof o.source == \"number\") o.source = nodes[o.source];\n\t        if (typeof o.target == \"number\") o.target = nodes[o.target];\n\t        ++o.source.weight;\n\t        ++o.target.weight;\n\t      }\n\t      for (i = 0; i < n; ++i) {\n\t        o = nodes[i];\n\t        if (isNaN(o.x)) o.x = position(\"x\", w);\n\t        if (isNaN(o.y)) o.y = position(\"y\", h);\n\t        if (isNaN(o.px)) o.px = o.x;\n\t        if (isNaN(o.py)) o.py = o.y;\n\t      }\n\t      distances = [];\n\t      if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;\n\t      strengths = [];\n\t      if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;\n\t      charges = [];\n\t      if (typeof charge === \"function\") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;\n\t      function position(dimension, size) {\n\t        if (!neighbors) {\n\t          neighbors = new Array(n);\n\t          for (j = 0; j < n; ++j) {\n\t            neighbors[j] = [];\n\t          }\n\t          for (j = 0; j < m; ++j) {\n\t            var o = links[j];\n\t            neighbors[o.source.index].push(o.target);\n\t            neighbors[o.target.index].push(o.source);\n\t          }\n\t        }\n\t        var candidates = neighbors[i], j = -1, m = candidates.length, x;\n\t        while (++j < m) if (!isNaN(x = candidates[j][dimension])) return x;\n\t        return Math.random() * size;\n\t      }\n\t      return force.resume();\n\t    };\n\t    force.resume = function() {\n\t      return force.alpha(.1);\n\t    };\n\t    force.stop = function() {\n\t      return force.alpha(0);\n\t    };\n\t    force.drag = function() {\n\t      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\n\t      if (!arguments.length) return drag;\n\t      this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\n\t    };\n\t    function dragmove(d) {\n\t      d.px = d3.event.x, d.py = d3.event.y;\n\t      force.resume();\n\t    }\n\t    return d3.rebind(force, event, \"on\");\n\t  };\n\t  function d3_layout_forceDragstart(d) {\n\t    d.fixed |= 2;\n\t  }\n\t  function d3_layout_forceDragend(d) {\n\t    d.fixed &= ~6;\n\t  }\n\t  function d3_layout_forceMouseover(d) {\n\t    d.fixed |= 4;\n\t    d.px = d.x, d.py = d.y;\n\t  }\n\t  function d3_layout_forceMouseout(d) {\n\t    d.fixed &= ~4;\n\t  }\n\t  function d3_layout_forceAccumulate(quad, alpha, charges) {\n\t    var cx = 0, cy = 0;\n\t    quad.charge = 0;\n\t    if (!quad.leaf) {\n\t      var nodes = quad.nodes, n = nodes.length, i = -1, c;\n\t      while (++i < n) {\n\t        c = nodes[i];\n\t        if (c == null) continue;\n\t        d3_layout_forceAccumulate(c, alpha, charges);\n\t        quad.charge += c.charge;\n\t        cx += c.charge * c.cx;\n\t        cy += c.charge * c.cy;\n\t      }\n\t    }\n\t    if (quad.point) {\n\t      if (!quad.leaf) {\n\t        quad.point.x += Math.random() - .5;\n\t        quad.point.y += Math.random() - .5;\n\t      }\n\t      var k = alpha * charges[quad.point.index];\n\t      quad.charge += quad.pointCharge = k;\n\t      cx += k * quad.point.x;\n\t      cy += k * quad.point.y;\n\t    }\n\t    quad.cx = cx / quad.charge;\n\t    quad.cy = cy / quad.charge;\n\t  }\n\t  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1, d3_layout_forceChargeDistance2 = Infinity;\n\t  d3.layout.hierarchy = function() {\n\t    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;\n\t    function hierarchy(root) {\n\t      var stack = [ root ], nodes = [], node;\n\t      root.depth = 0;\n\t      while ((node = stack.pop()) != null) {\n\t        nodes.push(node);\n\t        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {\n\t          var n, childs, child;\n\t          while (--n >= 0) {\n\t            stack.push(child = childs[n]);\n\t            child.parent = node;\n\t            child.depth = node.depth + 1;\n\t          }\n\t          if (value) node.value = 0;\n\t          node.children = childs;\n\t        } else {\n\t          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;\n\t          delete node.children;\n\t        }\n\t      }\n\t      d3_layout_hierarchyVisitAfter(root, function(node) {\n\t        var childs, parent;\n\t        if (sort && (childs = node.children)) childs.sort(sort);\n\t        if (value && (parent = node.parent)) parent.value += node.value;\n\t      });\n\t      return nodes;\n\t    }\n\t    hierarchy.sort = function(x) {\n\t      if (!arguments.length) return sort;\n\t      sort = x;\n\t      return hierarchy;\n\t    };\n\t    hierarchy.children = function(x) {\n\t      if (!arguments.length) return children;\n\t      children = x;\n\t      return hierarchy;\n\t    };\n\t    hierarchy.value = function(x) {\n\t      if (!arguments.length) return value;\n\t      value = x;\n\t      return hierarchy;\n\t    };\n\t    hierarchy.revalue = function(root) {\n\t      if (value) {\n\t        d3_layout_hierarchyVisitBefore(root, function(node) {\n\t          if (node.children) node.value = 0;\n\t        });\n\t        d3_layout_hierarchyVisitAfter(root, function(node) {\n\t          var parent;\n\t          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;\n\t          if (parent = node.parent) parent.value += node.value;\n\t        });\n\t      }\n\t      return root;\n\t    };\n\t    return hierarchy;\n\t  };\n\t  function d3_layout_hierarchyRebind(object, hierarchy) {\n\t    d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n\t    object.nodes = object;\n\t    object.links = d3_layout_hierarchyLinks;\n\t    return object;\n\t  }\n\t  function d3_layout_hierarchyVisitBefore(node, callback) {\n\t    var nodes = [ node ];\n\t    while ((node = nodes.pop()) != null) {\n\t      callback(node);\n\t      if ((children = node.children) && (n = children.length)) {\n\t        var n, children;\n\t        while (--n >= 0) nodes.push(children[n]);\n\t      }\n\t    }\n\t  }\n\t  function d3_layout_hierarchyVisitAfter(node, callback) {\n\t    var nodes = [ node ], nodes2 = [];\n\t    while ((node = nodes.pop()) != null) {\n\t      nodes2.push(node);\n\t      if ((children = node.children) && (n = children.length)) {\n\t        var i = -1, n, children;\n\t        while (++i < n) nodes.push(children[i]);\n\t      }\n\t    }\n\t    while ((node = nodes2.pop()) != null) {\n\t      callback(node);\n\t    }\n\t  }\n\t  function d3_layout_hierarchyChildren(d) {\n\t    return d.children;\n\t  }\n\t  function d3_layout_hierarchyValue(d) {\n\t    return d.value;\n\t  }\n\t  function d3_layout_hierarchySort(a, b) {\n\t    return b.value - a.value;\n\t  }\n\t  function d3_layout_hierarchyLinks(nodes) {\n\t    return d3.merge(nodes.map(function(parent) {\n\t      return (parent.children || []).map(function(child) {\n\t        return {\n\t          source: parent,\n\t          target: child\n\t        };\n\t      });\n\t    }));\n\t  }\n\t  d3.layout.partition = function() {\n\t    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];\n\t    function position(node, x, dx, dy) {\n\t      var children = node.children;\n\t      node.x = x;\n\t      node.y = node.depth * dy;\n\t      node.dx = dx;\n\t      node.dy = dy;\n\t      if (children && (n = children.length)) {\n\t        var i = -1, n, c, d;\n\t        dx = node.value ? dx / node.value : 0;\n\t        while (++i < n) {\n\t          position(c = children[i], x, d = c.value * dx, dy);\n\t          x += d;\n\t        }\n\t      }\n\t    }\n\t    function depth(node) {\n\t      var children = node.children, d = 0;\n\t      if (children && (n = children.length)) {\n\t        var i = -1, n;\n\t        while (++i < n) d = Math.max(d, depth(children[i]));\n\t      }\n\t      return 1 + d;\n\t    }\n\t    function partition(d, i) {\n\t      var nodes = hierarchy.call(this, d, i);\n\t      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\n\t      return nodes;\n\t    }\n\t    partition.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = x;\n\t      return partition;\n\t    };\n\t    return d3_layout_hierarchyRebind(partition, hierarchy);\n\t  };\n\t  d3.layout.pie = function() {\n\t    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ;\n\t    function pie(data) {\n\t      var values = data.map(function(d, i) {\n\t        return +value.call(pie, d, i);\n\t      });\n\t      var a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle);\n\t      var k = ((typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a) / d3.sum(values);\n\t      var index = d3.range(data.length);\n\t      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {\n\t        return values[j] - values[i];\n\t      } : function(i, j) {\n\t        return sort(data[i], data[j]);\n\t      });\n\t      var arcs = [];\n\t      index.forEach(function(i) {\n\t        var d;\n\t        arcs[i] = {\n\t          data: data[i],\n\t          value: d = values[i],\n\t          startAngle: a,\n\t          endAngle: a += d * k\n\t        };\n\t      });\n\t      return arcs;\n\t    }\n\t    pie.value = function(x) {\n\t      if (!arguments.length) return value;\n\t      value = x;\n\t      return pie;\n\t    };\n\t    pie.sort = function(x) {\n\t      if (!arguments.length) return sort;\n\t      sort = x;\n\t      return pie;\n\t    };\n\t    pie.startAngle = function(x) {\n\t      if (!arguments.length) return startAngle;\n\t      startAngle = x;\n\t      return pie;\n\t    };\n\t    pie.endAngle = function(x) {\n\t      if (!arguments.length) return endAngle;\n\t      endAngle = x;\n\t      return pie;\n\t    };\n\t    return pie;\n\t  };\n\t  var d3_layout_pieSortByValue = {};\n\t  d3.layout.stack = function() {\n\t    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;\n\t    function stack(data, index) {\n\t      if (!(n = data.length)) return data;\n\t      var series = data.map(function(d, i) {\n\t        return values.call(stack, d, i);\n\t      });\n\t      var points = series.map(function(d) {\n\t        return d.map(function(v, i) {\n\t          return [ x.call(stack, v, i), y.call(stack, v, i) ];\n\t        });\n\t      });\n\t      var orders = order.call(stack, points, index);\n\t      series = d3.permute(series, orders);\n\t      points = d3.permute(points, orders);\n\t      var offsets = offset.call(stack, points, index);\n\t      var m = series[0].length, n, i, j, o;\n\t      for (j = 0; j < m; ++j) {\n\t        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\n\t        for (i = 1; i < n; ++i) {\n\t          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\n\t        }\n\t      }\n\t      return data;\n\t    }\n\t    stack.values = function(x) {\n\t      if (!arguments.length) return values;\n\t      values = x;\n\t      return stack;\n\t    };\n\t    stack.order = function(x) {\n\t      if (!arguments.length) return order;\n\t      order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\n\t      return stack;\n\t    };\n\t    stack.offset = function(x) {\n\t      if (!arguments.length) return offset;\n\t      offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\n\t      return stack;\n\t    };\n\t    stack.x = function(z) {\n\t      if (!arguments.length) return x;\n\t      x = z;\n\t      return stack;\n\t    };\n\t    stack.y = function(z) {\n\t      if (!arguments.length) return y;\n\t      y = z;\n\t      return stack;\n\t    };\n\t    stack.out = function(z) {\n\t      if (!arguments.length) return out;\n\t      out = z;\n\t      return stack;\n\t    };\n\t    return stack;\n\t  };\n\t  function d3_layout_stackX(d) {\n\t    return d.x;\n\t  }\n\t  function d3_layout_stackY(d) {\n\t    return d.y;\n\t  }\n\t  function d3_layout_stackOut(d, y0, y) {\n\t    d.y0 = y0;\n\t    d.y = y;\n\t  }\n\t  var d3_layout_stackOrders = d3.map({\n\t    \"inside-out\": function(data) {\n\t      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {\n\t        return max[a] - max[b];\n\t      }), top = 0, bottom = 0, tops = [], bottoms = [];\n\t      for (i = 0; i < n; ++i) {\n\t        j = index[i];\n\t        if (top < bottom) {\n\t          top += sums[j];\n\t          tops.push(j);\n\t        } else {\n\t          bottom += sums[j];\n\t          bottoms.push(j);\n\t        }\n\t      }\n\t      return bottoms.reverse().concat(tops);\n\t    },\n\t    reverse: function(data) {\n\t      return d3.range(data.length).reverse();\n\t    },\n\t    \"default\": d3_layout_stackOrderDefault\n\t  });\n\t  var d3_layout_stackOffsets = d3.map({\n\t    silhouette: function(data) {\n\t      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];\n\t      for (j = 0; j < m; ++j) {\n\t        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n\t        if (o > max) max = o;\n\t        sums.push(o);\n\t      }\n\t      for (j = 0; j < m; ++j) {\n\t        y0[j] = (max - sums[j]) / 2;\n\t      }\n\t      return y0;\n\t    },\n\t    wiggle: function(data) {\n\t      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];\n\t      y0[0] = o = o0 = 0;\n\t      for (j = 1; j < m; ++j) {\n\t        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];\n\t        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\n\t          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\n\t            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\n\t          }\n\t          s2 += s3 * data[i][j][1];\n\t        }\n\t        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\n\t        if (o < o0) o0 = o;\n\t      }\n\t      for (j = 0; j < m; ++j) y0[j] -= o0;\n\t      return y0;\n\t    },\n\t    expand: function(data) {\n\t      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];\n\t      for (j = 0; j < m; ++j) {\n\t        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n\t        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;\n\t      }\n\t      for (j = 0; j < m; ++j) y0[j] = 0;\n\t      return y0;\n\t    },\n\t    zero: d3_layout_stackOffsetZero\n\t  });\n\t  function d3_layout_stackOrderDefault(data) {\n\t    return d3.range(data.length);\n\t  }\n\t  function d3_layout_stackOffsetZero(data) {\n\t    var j = -1, m = data[0].length, y0 = [];\n\t    while (++j < m) y0[j] = 0;\n\t    return y0;\n\t  }\n\t  function d3_layout_stackMaxIndex(array) {\n\t    var i = 1, j = 0, v = array[0][1], k, n = array.length;\n\t    for (;i < n; ++i) {\n\t      if ((k = array[i][1]) > v) {\n\t        j = i;\n\t        v = k;\n\t      }\n\t    }\n\t    return j;\n\t  }\n\t  function d3_layout_stackReduceSum(d) {\n\t    return d.reduce(d3_layout_stackSum, 0);\n\t  }\n\t  function d3_layout_stackSum(p, d) {\n\t    return p + d[1];\n\t  }\n\t  d3.layout.histogram = function() {\n\t    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;\n\t    function histogram(data, i) {\n\t      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;\n\t      while (++i < m) {\n\t        bin = bins[i] = [];\n\t        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\n\t        bin.y = 0;\n\t      }\n\t      if (m > 0) {\n\t        i = -1;\n\t        while (++i < n) {\n\t          x = values[i];\n\t          if (x >= range[0] && x <= range[1]) {\n\t            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\n\t            bin.y += k;\n\t            bin.push(data[i]);\n\t          }\n\t        }\n\t      }\n\t      return bins;\n\t    }\n\t    histogram.value = function(x) {\n\t      if (!arguments.length) return valuer;\n\t      valuer = x;\n\t      return histogram;\n\t    };\n\t    histogram.range = function(x) {\n\t      if (!arguments.length) return ranger;\n\t      ranger = d3_functor(x);\n\t      return histogram;\n\t    };\n\t    histogram.bins = function(x) {\n\t      if (!arguments.length) return binner;\n\t      binner = typeof x === \"number\" ? function(range) {\n\t        return d3_layout_histogramBinFixed(range, x);\n\t      } : d3_functor(x);\n\t      return histogram;\n\t    };\n\t    histogram.frequency = function(x) {\n\t      if (!arguments.length) return frequency;\n\t      frequency = !!x;\n\t      return histogram;\n\t    };\n\t    return histogram;\n\t  };\n\t  function d3_layout_histogramBinSturges(range, values) {\n\t    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\n\t  }\n\t  function d3_layout_histogramBinFixed(range, n) {\n\t    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];\n\t    while (++x <= n) f[x] = m * x + b;\n\t    return f;\n\t  }\n\t  function d3_layout_histogramRange(values) {\n\t    return [ d3.min(values), d3.max(values) ];\n\t  }\n\t  d3.layout.pack = function() {\n\t    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;\n\t    function pack(d, i) {\n\t      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function() {\n\t        return radius;\n\t      };\n\t      root.x = root.y = 0;\n\t      d3_layout_hierarchyVisitAfter(root, function(d) {\n\t        d.r = +r(d.value);\n\t      });\n\t      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n\t      if (padding) {\n\t        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\n\t        d3_layout_hierarchyVisitAfter(root, function(d) {\n\t          d.r += dr;\n\t        });\n\t        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n\t        d3_layout_hierarchyVisitAfter(root, function(d) {\n\t          d.r -= dr;\n\t        });\n\t      }\n\t      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\n\t      return nodes;\n\t    }\n\t    pack.size = function(_) {\n\t      if (!arguments.length) return size;\n\t      size = _;\n\t      return pack;\n\t    };\n\t    pack.radius = function(_) {\n\t      if (!arguments.length) return radius;\n\t      radius = _ == null || typeof _ === \"function\" ? _ : +_;\n\t      return pack;\n\t    };\n\t    pack.padding = function(_) {\n\t      if (!arguments.length) return padding;\n\t      padding = +_;\n\t      return pack;\n\t    };\n\t    return d3_layout_hierarchyRebind(pack, hierarchy);\n\t  };\n\t  function d3_layout_packSort(a, b) {\n\t    return a.value - b.value;\n\t  }\n\t  function d3_layout_packInsert(a, b) {\n\t    var c = a._pack_next;\n\t    a._pack_next = b;\n\t    b._pack_prev = a;\n\t    b._pack_next = c;\n\t    c._pack_prev = b;\n\t  }\n\t  function d3_layout_packSplice(a, b) {\n\t    a._pack_next = b;\n\t    b._pack_prev = a;\n\t  }\n\t  function d3_layout_packIntersects(a, b) {\n\t    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;\n\t    return .999 * dr * dr > dx * dx + dy * dy;\n\t  }\n\t  function d3_layout_packSiblings(node) {\n\t    if (!(nodes = node.children) || !(n = nodes.length)) return;\n\t    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;\n\t    function bound(node) {\n\t      xMin = Math.min(node.x - node.r, xMin);\n\t      xMax = Math.max(node.x + node.r, xMax);\n\t      yMin = Math.min(node.y - node.r, yMin);\n\t      yMax = Math.max(node.y + node.r, yMax);\n\t    }\n\t    nodes.forEach(d3_layout_packLink);\n\t    a = nodes[0];\n\t    a.x = -a.r;\n\t    a.y = 0;\n\t    bound(a);\n\t    if (n > 1) {\n\t      b = nodes[1];\n\t      b.x = b.r;\n\t      b.y = 0;\n\t      bound(b);\n\t      if (n > 2) {\n\t        c = nodes[2];\n\t        d3_layout_packPlace(a, b, c);\n\t        bound(c);\n\t        d3_layout_packInsert(a, c);\n\t        a._pack_prev = c;\n\t        d3_layout_packInsert(c, b);\n\t        b = a._pack_next;\n\t        for (i = 3; i < n; i++) {\n\t          d3_layout_packPlace(a, b, c = nodes[i]);\n\t          var isect = 0, s1 = 1, s2 = 1;\n\t          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\n\t            if (d3_layout_packIntersects(j, c)) {\n\t              isect = 1;\n\t              break;\n\t            }\n\t          }\n\t          if (isect == 1) {\n\t            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\n\t              if (d3_layout_packIntersects(k, c)) {\n\t                break;\n\t              }\n\t            }\n\t          }\n\t          if (isect) {\n\t            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);\n\t            i--;\n\t          } else {\n\t            d3_layout_packInsert(a, c);\n\t            b = c;\n\t            bound(c);\n\t          }\n\t        }\n\t      }\n\t    }\n\t    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;\n\t    for (i = 0; i < n; i++) {\n\t      c = nodes[i];\n\t      c.x -= cx;\n\t      c.y -= cy;\n\t      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\n\t    }\n\t    node.r = cr;\n\t    nodes.forEach(d3_layout_packUnlink);\n\t  }\n\t  function d3_layout_packLink(node) {\n\t    node._pack_next = node._pack_prev = node;\n\t  }\n\t  function d3_layout_packUnlink(node) {\n\t    delete node._pack_next;\n\t    delete node._pack_prev;\n\t  }\n\t  function d3_layout_packTransform(node, x, y, k) {\n\t    var children = node.children;\n\t    node.x = x += k * node.x;\n\t    node.y = y += k * node.y;\n\t    node.r *= k;\n\t    if (children) {\n\t      var i = -1, n = children.length;\n\t      while (++i < n) d3_layout_packTransform(children[i], x, y, k);\n\t    }\n\t  }\n\t  function d3_layout_packPlace(a, b, c) {\n\t    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;\n\t    if (db && (dx || dy)) {\n\t      var da = b.r + c.r, dc = dx * dx + dy * dy;\n\t      da *= da;\n\t      db *= db;\n\t      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n\t      c.x = a.x + x * dx + y * dy;\n\t      c.y = a.y + x * dy - y * dx;\n\t    } else {\n\t      c.x = a.x + db;\n\t      c.y = a.y;\n\t    }\n\t  }\n\t  d3.layout.tree = function() {\n\t    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = null;\n\t    function tree(d, i) {\n\t      var nodes = hierarchy.call(this, d, i), root0 = nodes[0], root1 = wrapTree(root0);\n\t      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;\n\t      d3_layout_hierarchyVisitBefore(root1, secondWalk);\n\t      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode); else {\n\t        var left = root0, right = root0, bottom = root0;\n\t        d3_layout_hierarchyVisitBefore(root0, function(node) {\n\t          if (node.x < left.x) left = node;\n\t          if (node.x > right.x) right = node;\n\t          if (node.depth > bottom.depth) bottom = node;\n\t        });\n\t        var tx = separation(left, right) / 2 - left.x, kx = size[0] / (right.x + separation(right, left) / 2 + tx), ky = size[1] / (bottom.depth || 1);\n\t        d3_layout_hierarchyVisitBefore(root0, function(node) {\n\t          node.x = (node.x + tx) * kx;\n\t          node.y = node.depth * ky;\n\t        });\n\t      }\n\t      return nodes;\n\t    }\n\t    function wrapTree(root0) {\n\t      var root1 = {\n\t        A: null,\n\t        children: [ root0 ]\n\t      }, queue = [ root1 ], node1;\n\t      while ((node1 = queue.pop()) != null) {\n\t        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {\n\t          queue.push((children[i] = child = {\n\t            _: children[i],\n\t            parent: node1,\n\t            children: (child = children[i].children) && child.slice() || [],\n\t            A: null,\n\t            a: null,\n\t            z: 0,\n\t            m: 0,\n\t            c: 0,\n\t            s: 0,\n\t            t: null,\n\t            i: i\n\t          }).a = child);\n\t        }\n\t      }\n\t      return root1.children[0];\n\t    }\n\t    function firstWalk(v) {\n\t      var children = v.children, siblings = v.parent.children, w = v.i ? siblings[v.i - 1] : null;\n\t      if (children.length) {\n\t        d3_layout_treeShift(v);\n\t        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n\t        if (w) {\n\t          v.z = w.z + separation(v._, w._);\n\t          v.m = v.z - midpoint;\n\t        } else {\n\t          v.z = midpoint;\n\t        }\n\t      } else if (w) {\n\t        v.z = w.z + separation(v._, w._);\n\t      }\n\t      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n\t    }\n\t    function secondWalk(v) {\n\t      v._.x = v.z + v.parent.m;\n\t      v.m += v.parent.m;\n\t    }\n\t    function apportion(v, w, ancestor) {\n\t      if (w) {\n\t        var vip = v, vop = v, vim = w, vom = vip.parent.children[0], sip = vip.m, sop = vop.m, sim = vim.m, som = vom.m, shift;\n\t        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\n\t          vom = d3_layout_treeLeft(vom);\n\t          vop = d3_layout_treeRight(vop);\n\t          vop.a = v;\n\t          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n\t          if (shift > 0) {\n\t            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);\n\t            sip += shift;\n\t            sop += shift;\n\t          }\n\t          sim += vim.m;\n\t          sip += vip.m;\n\t          som += vom.m;\n\t          sop += vop.m;\n\t        }\n\t        if (vim && !d3_layout_treeRight(vop)) {\n\t          vop.t = vim;\n\t          vop.m += sim - sop;\n\t        }\n\t        if (vip && !d3_layout_treeLeft(vom)) {\n\t          vom.t = vip;\n\t          vom.m += sip - som;\n\t          ancestor = v;\n\t        }\n\t      }\n\t      return ancestor;\n\t    }\n\t    function sizeNode(node) {\n\t      node.x *= size[0];\n\t      node.y = node.depth * size[1];\n\t    }\n\t    tree.separation = function(x) {\n\t      if (!arguments.length) return separation;\n\t      separation = x;\n\t      return tree;\n\t    };\n\t    tree.size = function(x) {\n\t      if (!arguments.length) return nodeSize ? null : size;\n\t      nodeSize = (size = x) == null ? sizeNode : null;\n\t      return tree;\n\t    };\n\t    tree.nodeSize = function(x) {\n\t      if (!arguments.length) return nodeSize ? size : null;\n\t      nodeSize = (size = x) == null ? null : sizeNode;\n\t      return tree;\n\t    };\n\t    return d3_layout_hierarchyRebind(tree, hierarchy);\n\t  };\n\t  function d3_layout_treeSeparation(a, b) {\n\t    return a.parent == b.parent ? 1 : 2;\n\t  }\n\t  function d3_layout_treeLeft(v) {\n\t    var children = v.children;\n\t    return children.length ? children[0] : v.t;\n\t  }\n\t  function d3_layout_treeRight(v) {\n\t    var children = v.children, n;\n\t    return (n = children.length) ? children[n - 1] : v.t;\n\t  }\n\t  function d3_layout_treeMove(wm, wp, shift) {\n\t    var change = shift / (wp.i - wm.i);\n\t    wp.c -= change;\n\t    wp.s += shift;\n\t    wm.c += change;\n\t    wp.z += shift;\n\t    wp.m += shift;\n\t  }\n\t  function d3_layout_treeShift(v) {\n\t    var shift = 0, change = 0, children = v.children, i = children.length, w;\n\t    while (--i >= 0) {\n\t      w = children[i];\n\t      w.z += shift;\n\t      w.m += shift;\n\t      shift += w.s + (change += w.c);\n\t    }\n\t  }\n\t  function d3_layout_treeAncestor(vim, v, ancestor) {\n\t    return vim.a.parent === v.parent ? vim.a : ancestor;\n\t  }\n\t  d3.layout.cluster = function() {\n\t    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\n\t    function cluster(d, i) {\n\t      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;\n\t      d3_layout_hierarchyVisitAfter(root, function(node) {\n\t        var children = node.children;\n\t        if (children && children.length) {\n\t          node.x = d3_layout_clusterX(children);\n\t          node.y = d3_layout_clusterY(children);\n\t        } else {\n\t          node.x = previousNode ? x += separation(node, previousNode) : 0;\n\t          node.y = 0;\n\t          previousNode = node;\n\t        }\n\t      });\n\t      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;\n\t      d3_layout_hierarchyVisitAfter(root, nodeSize ? function(node) {\n\t        node.x = (node.x - root.x) * size[0];\n\t        node.y = (root.y - node.y) * size[1];\n\t      } : function(node) {\n\t        node.x = (node.x - x0) / (x1 - x0) * size[0];\n\t        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\n\t      });\n\t      return nodes;\n\t    }\n\t    cluster.separation = function(x) {\n\t      if (!arguments.length) return separation;\n\t      separation = x;\n\t      return cluster;\n\t    };\n\t    cluster.size = function(x) {\n\t      if (!arguments.length) return nodeSize ? null : size;\n\t      nodeSize = (size = x) == null;\n\t      return cluster;\n\t    };\n\t    cluster.nodeSize = function(x) {\n\t      if (!arguments.length) return nodeSize ? size : null;\n\t      nodeSize = (size = x) != null;\n\t      return cluster;\n\t    };\n\t    return d3_layout_hierarchyRebind(cluster, hierarchy);\n\t  };\n\t  function d3_layout_clusterY(children) {\n\t    return 1 + d3.max(children, function(child) {\n\t      return child.y;\n\t    });\n\t  }\n\t  function d3_layout_clusterX(children) {\n\t    return children.reduce(function(x, child) {\n\t      return x + child.x;\n\t    }, 0) / children.length;\n\t  }\n\t  function d3_layout_clusterLeft(node) {\n\t    var children = node.children;\n\t    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\n\t  }\n\t  function d3_layout_clusterRight(node) {\n\t    var children = node.children, n;\n\t    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\n\t  }\n\t  d3.layout.treemap = function() {\n\t    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = \"squarify\", ratio = .5 * (1 + Math.sqrt(5));\n\t    function scale(children, k) {\n\t      var i = -1, n = children.length, child, area;\n\t      while (++i < n) {\n\t        area = (child = children[i]).value * (k < 0 ? 0 : k);\n\t        child.area = isNaN(area) || area <= 0 ? 0 : area;\n\t      }\n\t    }\n\t    function squarify(node) {\n\t      var children = node.children;\n\t      if (children && children.length) {\n\t        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;\n\t        scale(remaining, rect.dx * rect.dy / node.value);\n\t        row.area = 0;\n\t        while ((n = remaining.length) > 0) {\n\t          row.push(child = remaining[n - 1]);\n\t          row.area += child.area;\n\t          if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\n\t            remaining.pop();\n\t            best = score;\n\t          } else {\n\t            row.area -= row.pop().area;\n\t            position(row, u, rect, false);\n\t            u = Math.min(rect.dx, rect.dy);\n\t            row.length = row.area = 0;\n\t            best = Infinity;\n\t          }\n\t        }\n\t        if (row.length) {\n\t          position(row, u, rect, true);\n\t          row.length = row.area = 0;\n\t        }\n\t        children.forEach(squarify);\n\t      }\n\t    }\n\t    function stickify(node) {\n\t      var children = node.children;\n\t      if (children && children.length) {\n\t        var rect = pad(node), remaining = children.slice(), child, row = [];\n\t        scale(remaining, rect.dx * rect.dy / node.value);\n\t        row.area = 0;\n\t        while (child = remaining.pop()) {\n\t          row.push(child);\n\t          row.area += child.area;\n\t          if (child.z != null) {\n\t            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\n\t            row.length = row.area = 0;\n\t          }\n\t        }\n\t        children.forEach(stickify);\n\t      }\n\t    }\n\t    function worst(row, u) {\n\t      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;\n\t      while (++i < n) {\n\t        if (!(r = row[i].area)) continue;\n\t        if (r < rmin) rmin = r;\n\t        if (r > rmax) rmax = r;\n\t      }\n\t      s *= s;\n\t      u *= u;\n\t      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\n\t    }\n\t    function position(row, u, rect, flush) {\n\t      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;\n\t      if (u == rect.dx) {\n\t        if (flush || v > rect.dy) v = rect.dy;\n\t        while (++i < n) {\n\t          o = row[i];\n\t          o.x = x;\n\t          o.y = y;\n\t          o.dy = v;\n\t          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\n\t        }\n\t        o.z = true;\n\t        o.dx += rect.x + rect.dx - x;\n\t        rect.y += v;\n\t        rect.dy -= v;\n\t      } else {\n\t        if (flush || v > rect.dx) v = rect.dx;\n\t        while (++i < n) {\n\t          o = row[i];\n\t          o.x = x;\n\t          o.y = y;\n\t          o.dx = v;\n\t          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\n\t        }\n\t        o.z = false;\n\t        o.dy += rect.y + rect.dy - y;\n\t        rect.x += v;\n\t        rect.dx -= v;\n\t      }\n\t    }\n\t    function treemap(d) {\n\t      var nodes = stickies || hierarchy(d), root = nodes[0];\n\t      root.x = 0;\n\t      root.y = 0;\n\t      root.dx = size[0];\n\t      root.dy = size[1];\n\t      if (stickies) hierarchy.revalue(root);\n\t      scale([ root ], root.dx * root.dy / root.value);\n\t      (stickies ? stickify : squarify)(root);\n\t      if (sticky) stickies = nodes;\n\t      return nodes;\n\t    }\n\t    treemap.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = x;\n\t      return treemap;\n\t    };\n\t    treemap.padding = function(x) {\n\t      if (!arguments.length) return padding;\n\t      function padFunction(node) {\n\t        var p = x.call(treemap, node, node.depth);\n\t        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [ p, p, p, p ] : p);\n\t      }\n\t      function padConstant(node) {\n\t        return d3_layout_treemapPad(node, x);\n\t      }\n\t      var type;\n\t      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [ x, x, x, x ], \n\t      padConstant) : padConstant;\n\t      return treemap;\n\t    };\n\t    treemap.round = function(x) {\n\t      if (!arguments.length) return round != Number;\n\t      round = x ? Math.round : Number;\n\t      return treemap;\n\t    };\n\t    treemap.sticky = function(x) {\n\t      if (!arguments.length) return sticky;\n\t      sticky = x;\n\t      stickies = null;\n\t      return treemap;\n\t    };\n\t    treemap.ratio = function(x) {\n\t      if (!arguments.length) return ratio;\n\t      ratio = x;\n\t      return treemap;\n\t    };\n\t    treemap.mode = function(x) {\n\t      if (!arguments.length) return mode;\n\t      mode = x + \"\";\n\t      return treemap;\n\t    };\n\t    return d3_layout_hierarchyRebind(treemap, hierarchy);\n\t  };\n\t  function d3_layout_treemapPadNull(node) {\n\t    return {\n\t      x: node.x,\n\t      y: node.y,\n\t      dx: node.dx,\n\t      dy: node.dy\n\t    };\n\t  }\n\t  function d3_layout_treemapPad(node, padding) {\n\t    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];\n\t    if (dx < 0) {\n\t      x += dx / 2;\n\t      dx = 0;\n\t    }\n\t    if (dy < 0) {\n\t      y += dy / 2;\n\t      dy = 0;\n\t    }\n\t    return {\n\t      x: x,\n\t      y: y,\n\t      dx: dx,\n\t      dy: dy\n\t    };\n\t  }\n\t  d3.random = {\n\t    normal: function(µ, σ) {\n\t      var n = arguments.length;\n\t      if (n < 2) σ = 1;\n\t      if (n < 1) µ = 0;\n\t      return function() {\n\t        var x, y, r;\n\t        do {\n\t          x = Math.random() * 2 - 1;\n\t          y = Math.random() * 2 - 1;\n\t          r = x * x + y * y;\n\t        } while (!r || r > 1);\n\t        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\n\t      };\n\t    },\n\t    logNormal: function() {\n\t      var random = d3.random.normal.apply(d3, arguments);\n\t      return function() {\n\t        return Math.exp(random());\n\t      };\n\t    },\n\t    bates: function(m) {\n\t      var random = d3.random.irwinHall(m);\n\t      return function() {\n\t        return random() / m;\n\t      };\n\t    },\n\t    irwinHall: function(m) {\n\t      return function() {\n\t        for (var s = 0, j = 0; j < m; j++) s += Math.random();\n\t        return s;\n\t      };\n\t    }\n\t  };\n\t  d3.scale = {};\n\t  function d3_scaleExtent(domain) {\n\t    var start = domain[0], stop = domain[domain.length - 1];\n\t    return start < stop ? [ start, stop ] : [ stop, start ];\n\t  }\n\t  function d3_scaleRange(scale) {\n\t    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n\t  }\n\t  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\n\t    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);\n\t    return function(x) {\n\t      return i(u(x));\n\t    };\n\t  }\n\t  function d3_scale_nice(domain, nice) {\n\t    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;\n\t    if (x1 < x0) {\n\t      dx = i0, i0 = i1, i1 = dx;\n\t      dx = x0, x0 = x1, x1 = dx;\n\t    }\n\t    domain[i0] = nice.floor(x0);\n\t    domain[i1] = nice.ceil(x1);\n\t    return domain;\n\t  }\n\t  function d3_scale_niceStep(step) {\n\t    return step ? {\n\t      floor: function(x) {\n\t        return Math.floor(x / step) * step;\n\t      },\n\t      ceil: function(x) {\n\t        return Math.ceil(x / step) * step;\n\t      }\n\t    } : d3_scale_niceIdentity;\n\t  }\n\t  var d3_scale_niceIdentity = {\n\t    floor: d3_identity,\n\t    ceil: d3_identity\n\t  };\n\t  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\n\t    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;\n\t    if (domain[k] < domain[0]) {\n\t      domain = domain.slice().reverse();\n\t      range = range.slice().reverse();\n\t    }\n\t    while (++j <= k) {\n\t      u.push(uninterpolate(domain[j - 1], domain[j]));\n\t      i.push(interpolate(range[j - 1], range[j]));\n\t    }\n\t    return function(x) {\n\t      var j = d3.bisect(domain, x, 1, k) - 1;\n\t      return i[j](u[j](x));\n\t    };\n\t  }\n\t  d3.scale.linear = function() {\n\t    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);\n\t  };\n\t  function d3_scale_linear(domain, range, interpolate, clamp) {\n\t    var output, input;\n\t    function rescale() {\n\t      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\n\t      output = linear(domain, range, uninterpolate, interpolate);\n\t      input = linear(range, domain, uninterpolate, d3_interpolate);\n\t      return scale;\n\t    }\n\t    function scale(x) {\n\t      return output(x);\n\t    }\n\t    scale.invert = function(y) {\n\t      return input(y);\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = x.map(Number);\n\t      return rescale();\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      return rescale();\n\t    };\n\t    scale.rangeRound = function(x) {\n\t      return scale.range(x).interpolate(d3_interpolateRound);\n\t    };\n\t    scale.clamp = function(x) {\n\t      if (!arguments.length) return clamp;\n\t      clamp = x;\n\t      return rescale();\n\t    };\n\t    scale.interpolate = function(x) {\n\t      if (!arguments.length) return interpolate;\n\t      interpolate = x;\n\t      return rescale();\n\t    };\n\t    scale.ticks = function(m) {\n\t      return d3_scale_linearTicks(domain, m);\n\t    };\n\t    scale.tickFormat = function(m, format) {\n\t      return d3_scale_linearTickFormat(domain, m, format);\n\t    };\n\t    scale.nice = function(m) {\n\t      d3_scale_linearNice(domain, m);\n\t      return rescale();\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_linear(domain, range, interpolate, clamp);\n\t    };\n\t    return rescale();\n\t  }\n\t  function d3_scale_linearRebind(scale, linear) {\n\t    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n\t  }\n\t  function d3_scale_linearNice(domain, m) {\n\t    return d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n\t  }\n\t  function d3_scale_linearTickRange(domain, m) {\n\t    if (m == null) m = 10;\n\t    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;\n\t    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;\n\t    extent[0] = Math.ceil(extent[0] / step) * step;\n\t    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\n\t    extent[2] = step;\n\t    return extent;\n\t  }\n\t  function d3_scale_linearTicks(domain, m) {\n\t    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\n\t  }\n\t  function d3_scale_linearTickFormat(domain, m, format) {\n\t    var range = d3_scale_linearTickRange(domain, m);\n\t    if (format) {\n\t      var match = d3_format_re.exec(format);\n\t      match.shift();\n\t      if (match[8] === \"s\") {\n\t        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));\n\t        if (!match[7]) match[7] = \".\" + d3_scale_linearPrecision(prefix.scale(range[2]));\n\t        match[8] = \"f\";\n\t        format = d3.format(match.join(\"\"));\n\t        return function(d) {\n\t          return format(prefix.scale(d)) + prefix.symbol;\n\t        };\n\t      }\n\t      if (!match[7]) match[7] = \".\" + d3_scale_linearFormatPrecision(match[8], range);\n\t      format = match.join(\"\");\n\t    } else {\n\t      format = \",.\" + d3_scale_linearPrecision(range[2]) + \"f\";\n\t    }\n\t    return d3.format(format);\n\t  }\n\t  var d3_scale_linearFormatSignificant = {\n\t    s: 1,\n\t    g: 1,\n\t    p: 1,\n\t    r: 1,\n\t    e: 1\n\t  };\n\t  function d3_scale_linearPrecision(value) {\n\t    return -Math.floor(Math.log(value) / Math.LN10 + .01);\n\t  }\n\t  function d3_scale_linearFormatPrecision(type, range) {\n\t    var p = d3_scale_linearPrecision(range[2]);\n\t    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== \"e\") : p - (type === \"%\") * 2;\n\t  }\n\t  d3.scale.log = function() {\n\t    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);\n\t  };\n\t  function d3_scale_log(linear, base, positive, domain) {\n\t    function log(x) {\n\t      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\n\t    }\n\t    function pow(x) {\n\t      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\n\t    }\n\t    function scale(x) {\n\t      return linear(log(x));\n\t    }\n\t    scale.invert = function(x) {\n\t      return pow(linear.invert(x));\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      positive = x[0] >= 0;\n\t      linear.domain((domain = x.map(Number)).map(log));\n\t      return scale;\n\t    };\n\t    scale.base = function(_) {\n\t      if (!arguments.length) return base;\n\t      base = +_;\n\t      linear.domain(domain.map(log));\n\t      return scale;\n\t    };\n\t    scale.nice = function() {\n\t      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\n\t      linear.domain(niced);\n\t      domain = niced.map(pow);\n\t      return scale;\n\t    };\n\t    scale.ticks = function() {\n\t      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;\n\t      if (isFinite(j - i)) {\n\t        if (positive) {\n\t          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);\n\t          ticks.push(pow(i));\n\t        } else {\n\t          ticks.push(pow(i));\n\t          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);\n\t        }\n\t        for (i = 0; ticks[i] < u; i++) {}\n\t        for (j = ticks.length; ticks[j - 1] > v; j--) {}\n\t        ticks = ticks.slice(i, j);\n\t      }\n\t      return ticks;\n\t    };\n\t    scale.tickFormat = function(n, format) {\n\t      if (!arguments.length) return d3_scale_logFormat;\n\t      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== \"function\") format = d3.format(format);\n\t      var k = Math.max(.1, n / scale.ticks().length), f = positive ? (e = 1e-12, Math.ceil) : (e = -1e-12, \n\t      Math.floor), e;\n\t      return function(d) {\n\t        return d / pow(f(log(d) + e)) <= k ? format(d) : \"\";\n\t      };\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_log(linear.copy(), base, positive, domain);\n\t    };\n\t    return d3_scale_linearRebind(scale, linear);\n\t  }\n\t  var d3_scale_logFormat = d3.format(\".0e\"), d3_scale_logNiceNegative = {\n\t    floor: function(x) {\n\t      return -Math.ceil(-x);\n\t    },\n\t    ceil: function(x) {\n\t      return -Math.floor(-x);\n\t    }\n\t  };\n\t  d3.scale.pow = function() {\n\t    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);\n\t  };\n\t  function d3_scale_pow(linear, exponent, domain) {\n\t    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);\n\t    function scale(x) {\n\t      return linear(powp(x));\n\t    }\n\t    scale.invert = function(x) {\n\t      return powb(linear.invert(x));\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      linear.domain((domain = x.map(Number)).map(powp));\n\t      return scale;\n\t    };\n\t    scale.ticks = function(m) {\n\t      return d3_scale_linearTicks(domain, m);\n\t    };\n\t    scale.tickFormat = function(m, format) {\n\t      return d3_scale_linearTickFormat(domain, m, format);\n\t    };\n\t    scale.nice = function(m) {\n\t      return scale.domain(d3_scale_linearNice(domain, m));\n\t    };\n\t    scale.exponent = function(x) {\n\t      if (!arguments.length) return exponent;\n\t      powp = d3_scale_powPow(exponent = x);\n\t      powb = d3_scale_powPow(1 / exponent);\n\t      linear.domain(domain.map(powp));\n\t      return scale;\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_pow(linear.copy(), exponent, domain);\n\t    };\n\t    return d3_scale_linearRebind(scale, linear);\n\t  }\n\t  function d3_scale_powPow(e) {\n\t    return function(x) {\n\t      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\n\t    };\n\t  }\n\t  d3.scale.sqrt = function() {\n\t    return d3.scale.pow().exponent(.5);\n\t  };\n\t  d3.scale.ordinal = function() {\n\t    return d3_scale_ordinal([], {\n\t      t: \"range\",\n\t      a: [ [] ]\n\t    });\n\t  };\n\t  function d3_scale_ordinal(domain, ranger) {\n\t    var index, range, rangeBand;\n\t    function scale(x) {\n\t      return range[((index.get(x) || (ranger.t === \"range\" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];\n\t    }\n\t    function steps(start, step) {\n\t      return d3.range(domain.length).map(function(i) {\n\t        return start + step * i;\n\t      });\n\t    }\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = [];\n\t      index = new d3_Map();\n\t      var i = -1, n = x.length, xi;\n\t      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\n\t      return scale[ranger.t].apply(scale, ranger.a);\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      rangeBand = 0;\n\t      ranger = {\n\t        t: \"range\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangePoints = function(x, padding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      var start = x[0], stop = x[1], step = (stop - start) / (Math.max(1, domain.length - 1) + padding);\n\t      range = steps(domain.length < 2 ? (start + stop) / 2 : start + step * padding / 2, step);\n\t      rangeBand = 0;\n\t      ranger = {\n\t        t: \"rangePoints\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeBands = function(x, padding, outerPadding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      if (arguments.length < 3) outerPadding = padding;\n\t      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);\n\t      range = steps(start + step * outerPadding, step);\n\t      if (reverse) range.reverse();\n\t      rangeBand = step * (1 - padding);\n\t      ranger = {\n\t        t: \"rangeBands\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeRoundBands = function(x, padding, outerPadding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      if (arguments.length < 3) outerPadding = padding;\n\t      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding)), error = stop - start - (domain.length - padding) * step;\n\t      range = steps(start + Math.round(error / 2), step);\n\t      if (reverse) range.reverse();\n\t      rangeBand = Math.round(step * (1 - padding));\n\t      ranger = {\n\t        t: \"rangeRoundBands\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeBand = function() {\n\t      return rangeBand;\n\t    };\n\t    scale.rangeExtent = function() {\n\t      return d3_scaleExtent(ranger.a[0]);\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_ordinal(domain, ranger);\n\t    };\n\t    return scale.domain(domain);\n\t  }\n\t  d3.scale.category10 = function() {\n\t    return d3.scale.ordinal().range(d3_category10);\n\t  };\n\t  d3.scale.category20 = function() {\n\t    return d3.scale.ordinal().range(d3_category20);\n\t  };\n\t  d3.scale.category20b = function() {\n\t    return d3.scale.ordinal().range(d3_category20b);\n\t  };\n\t  d3.scale.category20c = function() {\n\t    return d3.scale.ordinal().range(d3_category20c);\n\t  };\n\t  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);\n\t  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);\n\t  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);\n\t  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);\n\t  d3.scale.quantile = function() {\n\t    return d3_scale_quantile([], []);\n\t  };\n\t  function d3_scale_quantile(domain, range) {\n\t    var thresholds;\n\t    function rescale() {\n\t      var k = 0, q = range.length;\n\t      thresholds = [];\n\t      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);\n\t      return scale;\n\t    }\n\t    function scale(x) {\n\t      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\n\t    }\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);\n\t      return rescale();\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      return rescale();\n\t    };\n\t    scale.quantiles = function() {\n\t      return thresholds;\n\t    };\n\t    scale.invertExtent = function(y) {\n\t      y = range.indexOf(y);\n\t      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_quantile(domain, range);\n\t    };\n\t    return rescale();\n\t  }\n\t  d3.scale.quantize = function() {\n\t    return d3_scale_quantize(0, 1, [ 0, 1 ]);\n\t  };\n\t  function d3_scale_quantize(x0, x1, range) {\n\t    var kx, i;\n\t    function scale(x) {\n\t      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\n\t    }\n\t    function rescale() {\n\t      kx = range.length / (x1 - x0);\n\t      i = range.length - 1;\n\t      return scale;\n\t    }\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return [ x0, x1 ];\n\t      x0 = +x[0];\n\t      x1 = +x[x.length - 1];\n\t      return rescale();\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      return rescale();\n\t    };\n\t    scale.invertExtent = function(y) {\n\t      y = range.indexOf(y);\n\t      y = y < 0 ? NaN : y / kx + x0;\n\t      return [ y, y + 1 / kx ];\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_quantize(x0, x1, range);\n\t    };\n\t    return rescale();\n\t  }\n\t  d3.scale.threshold = function() {\n\t    return d3_scale_threshold([ .5 ], [ 0, 1 ]);\n\t  };\n\t  function d3_scale_threshold(domain, range) {\n\t    function scale(x) {\n\t      if (x <= x) return range[d3.bisect(domain, x)];\n\t    }\n\t    scale.domain = function(_) {\n\t      if (!arguments.length) return domain;\n\t      domain = _;\n\t      return scale;\n\t    };\n\t    scale.range = function(_) {\n\t      if (!arguments.length) return range;\n\t      range = _;\n\t      return scale;\n\t    };\n\t    scale.invertExtent = function(y) {\n\t      y = range.indexOf(y);\n\t      return [ domain[y - 1], domain[y] ];\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_threshold(domain, range);\n\t    };\n\t    return scale;\n\t  }\n\t  d3.scale.identity = function() {\n\t    return d3_scale_identity([ 0, 1 ]);\n\t  };\n\t  function d3_scale_identity(domain) {\n\t    function identity(x) {\n\t      return +x;\n\t    }\n\t    identity.invert = identity;\n\t    identity.domain = identity.range = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = x.map(identity);\n\t      return identity;\n\t    };\n\t    identity.ticks = function(m) {\n\t      return d3_scale_linearTicks(domain, m);\n\t    };\n\t    identity.tickFormat = function(m, format) {\n\t      return d3_scale_linearTickFormat(domain, m, format);\n\t    };\n\t    identity.copy = function() {\n\t      return d3_scale_identity(domain);\n\t    };\n\t    return identity;\n\t  }\n\t  d3.svg = {};\n\t  d3.svg.arc = function() {\n\t    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n\t    function arc() {\n\t      var r0 = innerRadius.apply(this, arguments), r1 = outerRadius.apply(this, arguments), a0 = startAngle.apply(this, arguments) + d3_svg_arcOffset, a1 = endAngle.apply(this, arguments) + d3_svg_arcOffset, da = (a1 < a0 && (da = a0, \n\t      a0 = a1, a1 = da), a1 - a0), df = da < π ? \"0\" : \"1\", c0 = Math.cos(a0), s0 = Math.sin(a0), c1 = Math.cos(a1), s1 = Math.sin(a1);\n\t      return da >= d3_svg_arcMax ? r0 ? \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,1 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,1 0,\" + r1 + \"M0,\" + r0 + \"A\" + r0 + \",\" + r0 + \" 0 1,0 0,\" + -r0 + \"A\" + r0 + \",\" + r0 + \" 0 1,0 0,\" + r0 + \"Z\" : \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,1 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,1 0,\" + r1 + \"Z\" : r0 ? \"M\" + r1 * c0 + \",\" + r1 * s0 + \"A\" + r1 + \",\" + r1 + \" 0 \" + df + \",1 \" + r1 * c1 + \",\" + r1 * s1 + \"L\" + r0 * c1 + \",\" + r0 * s1 + \"A\" + r0 + \",\" + r0 + \" 0 \" + df + \",0 \" + r0 * c0 + \",\" + r0 * s0 + \"Z\" : \"M\" + r1 * c0 + \",\" + r1 * s0 + \"A\" + r1 + \",\" + r1 + \" 0 \" + df + \",1 \" + r1 * c1 + \",\" + r1 * s1 + \"L0,0\" + \"Z\";\n\t    }\n\t    arc.innerRadius = function(v) {\n\t      if (!arguments.length) return innerRadius;\n\t      innerRadius = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.outerRadius = function(v) {\n\t      if (!arguments.length) return outerRadius;\n\t      outerRadius = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.startAngle = function(v) {\n\t      if (!arguments.length) return startAngle;\n\t      startAngle = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.endAngle = function(v) {\n\t      if (!arguments.length) return endAngle;\n\t      endAngle = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.centroid = function() {\n\t      var r = (innerRadius.apply(this, arguments) + outerRadius.apply(this, arguments)) / 2, a = (startAngle.apply(this, arguments) + endAngle.apply(this, arguments)) / 2 + d3_svg_arcOffset;\n\t      return [ Math.cos(a) * r, Math.sin(a) * r ];\n\t    };\n\t    return arc;\n\t  };\n\t  var d3_svg_arcOffset = -halfπ, d3_svg_arcMax = τ - ε;\n\t  function d3_svg_arcInnerRadius(d) {\n\t    return d.innerRadius;\n\t  }\n\t  function d3_svg_arcOuterRadius(d) {\n\t    return d.outerRadius;\n\t  }\n\t  function d3_svg_arcStartAngle(d) {\n\t    return d.startAngle;\n\t  }\n\t  function d3_svg_arcEndAngle(d) {\n\t    return d.endAngle;\n\t  }\n\t  function d3_svg_line(projection) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;\n\t    function line(data) {\n\t      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);\n\t      function segment() {\n\t        segments.push(\"M\", interpolate(projection(points), tension));\n\t      }\n\t      while (++i < n) {\n\t        if (defined.call(this, d = data[i], i)) {\n\t          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);\n\t        } else if (points.length) {\n\t          segment();\n\t          points = [];\n\t        }\n\t      }\n\t      if (points.length) segment();\n\t      return segments.length ? segments.join(\"\") : null;\n\t    }\n\t    line.x = function(_) {\n\t      if (!arguments.length) return x;\n\t      x = _;\n\t      return line;\n\t    };\n\t    line.y = function(_) {\n\t      if (!arguments.length) return y;\n\t      y = _;\n\t      return line;\n\t    };\n\t    line.defined = function(_) {\n\t      if (!arguments.length) return defined;\n\t      defined = _;\n\t      return line;\n\t    };\n\t    line.interpolate = function(_) {\n\t      if (!arguments.length) return interpolateKey;\n\t      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n\t      return line;\n\t    };\n\t    line.tension = function(_) {\n\t      if (!arguments.length) return tension;\n\t      tension = _;\n\t      return line;\n\t    };\n\t    return line;\n\t  }\n\t  d3.svg.line = function() {\n\t    return d3_svg_line(d3_identity);\n\t  };\n\t  var d3_svg_lineInterpolators = d3.map({\n\t    linear: d3_svg_lineLinear,\n\t    \"linear-closed\": d3_svg_lineLinearClosed,\n\t    step: d3_svg_lineStep,\n\t    \"step-before\": d3_svg_lineStepBefore,\n\t    \"step-after\": d3_svg_lineStepAfter,\n\t    basis: d3_svg_lineBasis,\n\t    \"basis-open\": d3_svg_lineBasisOpen,\n\t    \"basis-closed\": d3_svg_lineBasisClosed,\n\t    bundle: d3_svg_lineBundle,\n\t    cardinal: d3_svg_lineCardinal,\n\t    \"cardinal-open\": d3_svg_lineCardinalOpen,\n\t    \"cardinal-closed\": d3_svg_lineCardinalClosed,\n\t    monotone: d3_svg_lineMonotone\n\t  });\n\t  d3_svg_lineInterpolators.forEach(function(key, value) {\n\t    value.key = key;\n\t    value.closed = /-closed$/.test(key);\n\t  });\n\t  function d3_svg_lineLinear(points) {\n\t    return points.join(\"L\");\n\t  }\n\t  function d3_svg_lineLinearClosed(points) {\n\t    return d3_svg_lineLinear(points) + \"Z\";\n\t  }\n\t  function d3_svg_lineStep(points) {\n\t    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n\t    while (++i < n) path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\n\t    if (n > 1) path.push(\"H\", p[0]);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineStepBefore(points) {\n\t    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n\t    while (++i < n) path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineStepAfter(points) {\n\t    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n\t    while (++i < n) path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineCardinalOpen(points, tension) {\n\t    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, points.length - 1), d3_svg_lineCardinalTangents(points, tension));\n\t  }\n\t  function d3_svg_lineCardinalClosed(points, tension) {\n\t    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), \n\t    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));\n\t  }\n\t  function d3_svg_lineCardinal(points, tension) {\n\t    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\n\t  }\n\t  function d3_svg_lineHermite(points, tangents) {\n\t    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\n\t      return d3_svg_lineLinear(points);\n\t    }\n\t    var quad = points.length != tangents.length, path = \"\", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;\n\t    if (quad) {\n\t      path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\n\t      p0 = points[1];\n\t      pi = 2;\n\t    }\n\t    if (tangents.length > 1) {\n\t      t = tangents[1];\n\t      p = points[pi];\n\t      pi++;\n\t      path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n\t      for (var i = 2; i < tangents.length; i++, pi++) {\n\t        p = points[pi];\n\t        t = tangents[i];\n\t        path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n\t      }\n\t    }\n\t    if (quad) {\n\t      var lp = points[pi];\n\t      path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\n\t    }\n\t    return path;\n\t  }\n\t  function d3_svg_lineCardinalTangents(points, tension) {\n\t    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;\n\t    while (++i < n) {\n\t      p0 = p1;\n\t      p1 = p2;\n\t      p2 = points[i];\n\t      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);\n\t    }\n\t    return tangents;\n\t  }\n\t  function d3_svg_lineBasis(points) {\n\t    if (points.length < 3) return d3_svg_lineLinear(points);\n\t    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n\t    points.push(points[n - 1]);\n\t    while (++i <= n) {\n\t      pi = points[i];\n\t      px.shift();\n\t      px.push(pi[0]);\n\t      py.shift();\n\t      py.push(pi[1]);\n\t      d3_svg_lineBasisBezier(path, px, py);\n\t    }\n\t    points.pop();\n\t    path.push(\"L\", pi);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineBasisOpen(points) {\n\t    if (points.length < 4) return d3_svg_lineLinear(points);\n\t    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];\n\t    while (++i < 3) {\n\t      pi = points[i];\n\t      px.push(pi[0]);\n\t      py.push(pi[1]);\n\t    }\n\t    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\n\t    --i;\n\t    while (++i < n) {\n\t      pi = points[i];\n\t      px.shift();\n\t      px.push(pi[0]);\n\t      py.shift();\n\t      py.push(pi[1]);\n\t      d3_svg_lineBasisBezier(path, px, py);\n\t    }\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineBasisClosed(points) {\n\t    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];\n\t    while (++i < 4) {\n\t      pi = points[i % n];\n\t      px.push(pi[0]);\n\t      py.push(pi[1]);\n\t    }\n\t    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n\t    --i;\n\t    while (++i < m) {\n\t      pi = points[i % n];\n\t      px.shift();\n\t      px.push(pi[0]);\n\t      py.shift();\n\t      py.push(pi[1]);\n\t      d3_svg_lineBasisBezier(path, px, py);\n\t    }\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineBundle(points, tension) {\n\t    var n = points.length - 1;\n\t    if (n) {\n\t      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;\n\t      while (++i <= n) {\n\t        p = points[i];\n\t        t = i / n;\n\t        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\n\t        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\n\t      }\n\t    }\n\t    return d3_svg_lineBasis(points);\n\t  }\n\t  function d3_svg_lineDot4(a, b) {\n\t    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n\t  }\n\t  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];\n\t  function d3_svg_lineBasisBezier(path, x, y) {\n\t    path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\n\t  }\n\t  function d3_svg_lineSlope(p0, p1) {\n\t    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\n\t  }\n\t  function d3_svg_lineFiniteDifferences(points) {\n\t    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);\n\t    while (++i < j) {\n\t      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\n\t    }\n\t    m[i] = d;\n\t    return m;\n\t  }\n\t  function d3_svg_lineMonotoneTangents(points) {\n\t    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;\n\t    while (++i < j) {\n\t      d = d3_svg_lineSlope(points[i], points[i + 1]);\n\t      if (abs(d) < ε) {\n\t        m[i] = m[i + 1] = 0;\n\t      } else {\n\t        a = m[i] / d;\n\t        b = m[i + 1] / d;\n\t        s = a * a + b * b;\n\t        if (s > 9) {\n\t          s = d * 3 / Math.sqrt(s);\n\t          m[i] = s * a;\n\t          m[i + 1] = s * b;\n\t        }\n\t      }\n\t    }\n\t    i = -1;\n\t    while (++i <= j) {\n\t      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\n\t      tangents.push([ s || 0, m[i] * s || 0 ]);\n\t    }\n\t    return tangents;\n\t  }\n\t  function d3_svg_lineMonotone(points) {\n\t    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\n\t  }\n\t  d3.svg.line.radial = function() {\n\t    var line = d3_svg_line(d3_svg_lineRadial);\n\t    line.radius = line.x, delete line.x;\n\t    line.angle = line.y, delete line.y;\n\t    return line;\n\t  };\n\t  function d3_svg_lineRadial(points) {\n\t    var point, i = -1, n = points.length, r, a;\n\t    while (++i < n) {\n\t      point = points[i];\n\t      r = point[0];\n\t      a = point[1] + d3_svg_arcOffset;\n\t      point[0] = r * Math.cos(a);\n\t      point[1] = r * Math.sin(a);\n\t    }\n\t    return points;\n\t  }\n\t  function d3_svg_area(projection) {\n\t    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = \"L\", tension = .7;\n\t    function area(data) {\n\t      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {\n\t        return x;\n\t      } : d3_functor(x1), fy1 = y0 === y1 ? function() {\n\t        return y;\n\t      } : d3_functor(y1), x, y;\n\t      function segment() {\n\t        segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\n\t      }\n\t      while (++i < n) {\n\t        if (defined.call(this, d = data[i], i)) {\n\t          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);\n\t          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);\n\t        } else if (points0.length) {\n\t          segment();\n\t          points0 = [];\n\t          points1 = [];\n\t        }\n\t      }\n\t      if (points0.length) segment();\n\t      return segments.length ? segments.join(\"\") : null;\n\t    }\n\t    area.x = function(_) {\n\t      if (!arguments.length) return x1;\n\t      x0 = x1 = _;\n\t      return area;\n\t    };\n\t    area.x0 = function(_) {\n\t      if (!arguments.length) return x0;\n\t      x0 = _;\n\t      return area;\n\t    };\n\t    area.x1 = function(_) {\n\t      if (!arguments.length) return x1;\n\t      x1 = _;\n\t      return area;\n\t    };\n\t    area.y = function(_) {\n\t      if (!arguments.length) return y1;\n\t      y0 = y1 = _;\n\t      return area;\n\t    };\n\t    area.y0 = function(_) {\n\t      if (!arguments.length) return y0;\n\t      y0 = _;\n\t      return area;\n\t    };\n\t    area.y1 = function(_) {\n\t      if (!arguments.length) return y1;\n\t      y1 = _;\n\t      return area;\n\t    };\n\t    area.defined = function(_) {\n\t      if (!arguments.length) return defined;\n\t      defined = _;\n\t      return area;\n\t    };\n\t    area.interpolate = function(_) {\n\t      if (!arguments.length) return interpolateKey;\n\t      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n\t      interpolateReverse = interpolate.reverse || interpolate;\n\t      L = interpolate.closed ? \"M\" : \"L\";\n\t      return area;\n\t    };\n\t    area.tension = function(_) {\n\t      if (!arguments.length) return tension;\n\t      tension = _;\n\t      return area;\n\t    };\n\t    return area;\n\t  }\n\t  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\n\t  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\n\t  d3.svg.area = function() {\n\t    return d3_svg_area(d3_identity);\n\t  };\n\t  d3.svg.area.radial = function() {\n\t    var area = d3_svg_area(d3_svg_lineRadial);\n\t    area.radius = area.x, delete area.x;\n\t    area.innerRadius = area.x0, delete area.x0;\n\t    area.outerRadius = area.x1, delete area.x1;\n\t    area.angle = area.y, delete area.y;\n\t    area.startAngle = area.y0, delete area.y0;\n\t    area.endAngle = area.y1, delete area.y1;\n\t    return area;\n\t  };\n\t  d3.svg.chord = function() {\n\t    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n\t    function chord(d, i) {\n\t      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);\n\t      return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\n\t    }\n\t    function subgroup(self, f, d, i) {\n\t      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) + d3_svg_arcOffset, a1 = endAngle.call(self, subgroup, i) + d3_svg_arcOffset;\n\t      return {\n\t        r: r,\n\t        a0: a0,\n\t        a1: a1,\n\t        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],\n\t        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]\n\t      };\n\t    }\n\t    function equals(a, b) {\n\t      return a.a0 == b.a0 && a.a1 == b.a1;\n\t    }\n\t    function arc(r, p, a) {\n\t      return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\n\t    }\n\t    function curve(r0, p0, r1, p1) {\n\t      return \"Q 0,0 \" + p1;\n\t    }\n\t    chord.radius = function(v) {\n\t      if (!arguments.length) return radius;\n\t      radius = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.source = function(v) {\n\t      if (!arguments.length) return source;\n\t      source = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.target = function(v) {\n\t      if (!arguments.length) return target;\n\t      target = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.startAngle = function(v) {\n\t      if (!arguments.length) return startAngle;\n\t      startAngle = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.endAngle = function(v) {\n\t      if (!arguments.length) return endAngle;\n\t      endAngle = d3_functor(v);\n\t      return chord;\n\t    };\n\t    return chord;\n\t  };\n\t  function d3_svg_chordRadius(d) {\n\t    return d.radius;\n\t  }\n\t  d3.svg.diagonal = function() {\n\t    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;\n\t    function diagonal(d, i) {\n\t      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {\n\t        x: p0.x,\n\t        y: m\n\t      }, {\n\t        x: p3.x,\n\t        y: m\n\t      }, p3 ];\n\t      p = p.map(projection);\n\t      return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\n\t    }\n\t    diagonal.source = function(x) {\n\t      if (!arguments.length) return source;\n\t      source = d3_functor(x);\n\t      return diagonal;\n\t    };\n\t    diagonal.target = function(x) {\n\t      if (!arguments.length) return target;\n\t      target = d3_functor(x);\n\t      return diagonal;\n\t    };\n\t    diagonal.projection = function(x) {\n\t      if (!arguments.length) return projection;\n\t      projection = x;\n\t      return diagonal;\n\t    };\n\t    return diagonal;\n\t  };\n\t  function d3_svg_diagonalProjection(d) {\n\t    return [ d.x, d.y ];\n\t  }\n\t  d3.svg.diagonal.radial = function() {\n\t    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;\n\t    diagonal.projection = function(x) {\n\t      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\n\t    };\n\t    return diagonal;\n\t  };\n\t  function d3_svg_diagonalRadialProjection(projection) {\n\t    return function() {\n\t      var d = projection.apply(this, arguments), r = d[0], a = d[1] + d3_svg_arcOffset;\n\t      return [ r * Math.cos(a), r * Math.sin(a) ];\n\t    };\n\t  }\n\t  d3.svg.symbol = function() {\n\t    var type = d3_svg_symbolType, size = d3_svg_symbolSize;\n\t    function symbol(d, i) {\n\t      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\n\t    }\n\t    symbol.type = function(x) {\n\t      if (!arguments.length) return type;\n\t      type = d3_functor(x);\n\t      return symbol;\n\t    };\n\t    symbol.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = d3_functor(x);\n\t      return symbol;\n\t    };\n\t    return symbol;\n\t  };\n\t  function d3_svg_symbolSize() {\n\t    return 64;\n\t  }\n\t  function d3_svg_symbolType() {\n\t    return \"circle\";\n\t  }\n\t  function d3_svg_symbolCircle(size) {\n\t    var r = Math.sqrt(size / π);\n\t    return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\n\t  }\n\t  var d3_svg_symbols = d3.map({\n\t    circle: d3_svg_symbolCircle,\n\t    cross: function(size) {\n\t      var r = Math.sqrt(size / 5) / 2;\n\t      return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\n\t    },\n\t    diamond: function(size) {\n\t      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;\n\t      return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\n\t    },\n\t    square: function(size) {\n\t      var r = Math.sqrt(size) / 2;\n\t      return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\n\t    },\n\t    \"triangle-down\": function(size) {\n\t      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n\t      return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\n\t    },\n\t    \"triangle-up\": function(size) {\n\t      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n\t      return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\n\t    }\n\t  });\n\t  d3.svg.symbolTypes = d3_svg_symbols.keys();\n\t  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\n\t  function d3_transition(groups, id) {\n\t    d3_subclass(groups, d3_transitionPrototype);\n\t    groups.id = id;\n\t    return groups;\n\t  }\n\t  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;\n\t  d3_transitionPrototype.call = d3_selectionPrototype.call;\n\t  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\n\t  d3_transitionPrototype.node = d3_selectionPrototype.node;\n\t  d3_transitionPrototype.size = d3_selectionPrototype.size;\n\t  d3.transition = function(selection) {\n\t    return arguments.length ? d3_transitionInheritId ? selection.transition() : selection : d3_selectionRoot.transition();\n\t  };\n\t  d3.transition.prototype = d3_transitionPrototype;\n\t  d3_transitionPrototype.select = function(selector) {\n\t    var id = this.id, subgroups = [], subgroup, subnode, node;\n\t    selector = d3_selection_selector(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\n\t          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n\t          d3_transitionNode(subnode, i, id, node.__transition__[id]);\n\t          subgroup.push(subnode);\n\t        } else {\n\t          subgroup.push(null);\n\t        }\n\t      }\n\t    }\n\t    return d3_transition(subgroups, id);\n\t  };\n\t  d3_transitionPrototype.selectAll = function(selector) {\n\t    var id = this.id, subgroups = [], subgroup, subnodes, node, subnode, transition;\n\t    selector = d3_selection_selectorAll(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          transition = node.__transition__[id];\n\t          subnodes = selector.call(node, node.__data__, i, j);\n\t          subgroups.push(subgroup = []);\n\t          for (var k = -1, o = subnodes.length; ++k < o; ) {\n\t            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, id, transition);\n\t            subgroup.push(subnode);\n\t          }\n\t        }\n\t      }\n\t    }\n\t    return d3_transition(subgroups, id);\n\t  };\n\t  d3_transitionPrototype.filter = function(filter) {\n\t    var subgroups = [], subgroup, group, node;\n\t    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n\t        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n\t          subgroup.push(node);\n\t        }\n\t      }\n\t    }\n\t    return d3_transition(subgroups, this.id);\n\t  };\n\t  d3_transitionPrototype.tween = function(name, tween) {\n\t    var id = this.id;\n\t    if (arguments.length < 2) return this.node().__transition__[id].tween.get(name);\n\t    return d3_selection_each(this, tween == null ? function(node) {\n\t      node.__transition__[id].tween.remove(name);\n\t    } : function(node) {\n\t      node.__transition__[id].tween.set(name, tween);\n\t    });\n\t  };\n\t  function d3_transition_tween(groups, name, value, tween) {\n\t    var id = groups.id;\n\t    return d3_selection_each(groups, typeof value === \"function\" ? function(node, i, j) {\n\t      node.__transition__[id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\n\t    } : (value = tween(value), function(node) {\n\t      node.__transition__[id].tween.set(name, value);\n\t    }));\n\t  }\n\t  d3_transitionPrototype.attr = function(nameNS, value) {\n\t    if (arguments.length < 2) {\n\t      for (value in nameNS) this.attr(value, nameNS[value]);\n\t      return this;\n\t    }\n\t    var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);\n\t    function attrNull() {\n\t      this.removeAttribute(name);\n\t    }\n\t    function attrNullNS() {\n\t      this.removeAttributeNS(name.space, name.local);\n\t    }\n\t    function attrTween(b) {\n\t      return b == null ? attrNull : (b += \"\", function() {\n\t        var a = this.getAttribute(name), i;\n\t        return a !== b && (i = interpolate(a, b), function(t) {\n\t          this.setAttribute(name, i(t));\n\t        });\n\t      });\n\t    }\n\t    function attrTweenNS(b) {\n\t      return b == null ? attrNullNS : (b += \"\", function() {\n\t        var a = this.getAttributeNS(name.space, name.local), i;\n\t        return a !== b && (i = interpolate(a, b), function(t) {\n\t          this.setAttributeNS(name.space, name.local, i(t));\n\t        });\n\t      });\n\t    }\n\t    return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\n\t  };\n\t  d3_transitionPrototype.attrTween = function(nameNS, tween) {\n\t    var name = d3.ns.qualify(nameNS);\n\t    function attrTween(d, i) {\n\t      var f = tween.call(this, d, i, this.getAttribute(name));\n\t      return f && function(t) {\n\t        this.setAttribute(name, f(t));\n\t      };\n\t    }\n\t    function attrTweenNS(d, i) {\n\t      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\n\t      return f && function(t) {\n\t        this.setAttributeNS(name.space, name.local, f(t));\n\t      };\n\t    }\n\t    return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\n\t  };\n\t  d3_transitionPrototype.style = function(name, value, priority) {\n\t    var n = arguments.length;\n\t    if (n < 3) {\n\t      if (typeof name !== \"string\") {\n\t        if (n < 2) value = \"\";\n\t        for (priority in name) this.style(priority, name[priority], value);\n\t        return this;\n\t      }\n\t      priority = \"\";\n\t    }\n\t    function styleNull() {\n\t      this.style.removeProperty(name);\n\t    }\n\t    function styleString(b) {\n\t      return b == null ? styleNull : (b += \"\", function() {\n\t        var a = d3_window.getComputedStyle(this, null).getPropertyValue(name), i;\n\t        return a !== b && (i = d3_interpolate(a, b), function(t) {\n\t          this.style.setProperty(name, i(t), priority);\n\t        });\n\t      });\n\t    }\n\t    return d3_transition_tween(this, \"style.\" + name, value, styleString);\n\t  };\n\t  d3_transitionPrototype.styleTween = function(name, tween, priority) {\n\t    if (arguments.length < 3) priority = \"\";\n\t    function styleTween(d, i) {\n\t      var f = tween.call(this, d, i, d3_window.getComputedStyle(this, null).getPropertyValue(name));\n\t      return f && function(t) {\n\t        this.style.setProperty(name, f(t), priority);\n\t      };\n\t    }\n\t    return this.tween(\"style.\" + name, styleTween);\n\t  };\n\t  d3_transitionPrototype.text = function(value) {\n\t    return d3_transition_tween(this, \"text\", value, d3_transition_text);\n\t  };\n\t  function d3_transition_text(b) {\n\t    if (b == null) b = \"\";\n\t    return function() {\n\t      this.textContent = b;\n\t    };\n\t  }\n\t  d3_transitionPrototype.remove = function() {\n\t    return this.each(\"end.transition\", function() {\n\t      var p;\n\t      if (this.__transition__.count < 2 && (p = this.parentNode)) p.removeChild(this);\n\t    });\n\t  };\n\t  d3_transitionPrototype.ease = function(value) {\n\t    var id = this.id;\n\t    if (arguments.length < 1) return this.node().__transition__[id].ease;\n\t    if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\n\t    return d3_selection_each(this, function(node) {\n\t      node.__transition__[id].ease = value;\n\t    });\n\t  };\n\t  d3_transitionPrototype.delay = function(value) {\n\t    var id = this.id;\n\t    if (arguments.length < 1) return this.node().__transition__[id].delay;\n\t    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n\t      node.__transition__[id].delay = +value.call(node, node.__data__, i, j);\n\t    } : (value = +value, function(node) {\n\t      node.__transition__[id].delay = value;\n\t    }));\n\t  };\n\t  d3_transitionPrototype.duration = function(value) {\n\t    var id = this.id;\n\t    if (arguments.length < 1) return this.node().__transition__[id].duration;\n\t    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n\t      node.__transition__[id].duration = Math.max(1, value.call(node, node.__data__, i, j));\n\t    } : (value = Math.max(1, value), function(node) {\n\t      node.__transition__[id].duration = value;\n\t    }));\n\t  };\n\t  d3_transitionPrototype.each = function(type, listener) {\n\t    var id = this.id;\n\t    if (arguments.length < 2) {\n\t      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;\n\t      d3_transitionInheritId = id;\n\t      d3_selection_each(this, function(node, i, j) {\n\t        d3_transitionInherit = node.__transition__[id];\n\t        type.call(node, node.__data__, i, j);\n\t      });\n\t      d3_transitionInherit = inherit;\n\t      d3_transitionInheritId = inheritId;\n\t    } else {\n\t      d3_selection_each(this, function(node) {\n\t        var transition = node.__transition__[id];\n\t        (transition.event || (transition.event = d3.dispatch(\"start\", \"end\"))).on(type, listener);\n\t      });\n\t    }\n\t    return this;\n\t  };\n\t  d3_transitionPrototype.transition = function() {\n\t    var id0 = this.id, id1 = ++d3_transitionId, subgroups = [], subgroup, group, node, transition;\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n\t        if (node = group[i]) {\n\t          transition = Object.create(node.__transition__[id0]);\n\t          transition.delay += transition.duration;\n\t          d3_transitionNode(node, i, id1, transition);\n\t        }\n\t        subgroup.push(node);\n\t      }\n\t    }\n\t    return d3_transition(subgroups, id1);\n\t  };\n\t  function d3_transitionNode(node, i, id, inherit) {\n\t    var lock = node.__transition__ || (node.__transition__ = {\n\t      active: 0,\n\t      count: 0\n\t    }), transition = lock[id];\n\t    if (!transition) {\n\t      var time = inherit.time;\n\t      transition = lock[id] = {\n\t        tween: new d3_Map(),\n\t        time: time,\n\t        ease: inherit.ease,\n\t        delay: inherit.delay,\n\t        duration: inherit.duration\n\t      };\n\t      ++lock.count;\n\t      d3.timer(function(elapsed) {\n\t        var d = node.__data__, ease = transition.ease, delay = transition.delay, duration = transition.duration, timer = d3_timer_active, tweened = [];\n\t        timer.t = delay + time;\n\t        if (delay <= elapsed) return start(elapsed - delay);\n\t        timer.c = start;\n\t        function start(elapsed) {\n\t          if (lock.active > id) return stop();\n\t          lock.active = id;\n\t          transition.event && transition.event.start.call(node, d, i);\n\t          transition.tween.forEach(function(key, value) {\n\t            if (value = value.call(node, d, i)) {\n\t              tweened.push(value);\n\t            }\n\t          });\n\t          d3.timer(function() {\n\t            timer.c = tick(elapsed || 1) ? d3_true : tick;\n\t            return 1;\n\t          }, 0, time);\n\t        }\n\t        function tick(elapsed) {\n\t          if (lock.active !== id) return stop();\n\t          var t = elapsed / duration, e = ease(t), n = tweened.length;\n\t          while (n > 0) {\n\t            tweened[--n].call(node, e);\n\t          }\n\t          if (t >= 1) {\n\t            transition.event && transition.event.end.call(node, d, i);\n\t            return stop();\n\t          }\n\t        }\n\t        function stop() {\n\t          if (--lock.count) delete lock[id]; else delete node.__transition__;\n\t          return 1;\n\t        }\n\t      }, 0, time);\n\t    }\n\t  }\n\t  d3.svg.axis = function() {\n\t    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;\n\t    function axis(g) {\n\t      g.each(function() {\n\t        var g = d3.select(this);\n\t        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();\n\t        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(\".tick\").data(ticks, scale1), tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", ε), tickExit = d3.transition(tick.exit()).style(\"opacity\", ε).remove(), tickUpdate = d3.transition(tick.order()).style(\"opacity\", 1), tickSpacing = Math.max(innerTickSize, 0) + tickPadding, tickTransform;\n\t        var range = d3_scaleRange(scale1), path = g.selectAll(\".domain\").data([ 0 ]), pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), \n\t        d3.transition(path));\n\t        tickEnter.append(\"line\");\n\t        tickEnter.append(\"text\");\n\t        var lineEnter = tickEnter.select(\"line\"), lineUpdate = tickUpdate.select(\"line\"), text = tick.select(\"text\").text(tickFormat), textEnter = tickEnter.select(\"text\"), textUpdate = tickUpdate.select(\"text\"), sign = orient === \"top\" || orient === \"left\" ? -1 : 1, x1, x2, y1, y2;\n\t        if (orient === \"bottom\" || orient === \"top\") {\n\t          tickTransform = d3_svg_axisX, x1 = \"x\", y1 = \"y\", x2 = \"x2\", y2 = \"y2\";\n\t          text.attr(\"dy\", sign < 0 ? \"0em\" : \".71em\").style(\"text-anchor\", \"middle\");\n\t          pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + sign * outerTickSize + \"V0H\" + range[1] + \"V\" + sign * outerTickSize);\n\t        } else {\n\t          tickTransform = d3_svg_axisY, x1 = \"y\", y1 = \"x\", x2 = \"y2\", y2 = \"x2\";\n\t          text.attr(\"dy\", \".32em\").style(\"text-anchor\", sign < 0 ? \"end\" : \"start\");\n\t          pathUpdate.attr(\"d\", \"M\" + sign * outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + sign * outerTickSize);\n\t        }\n\t        lineEnter.attr(y2, sign * innerTickSize);\n\t        textEnter.attr(y1, sign * tickSpacing);\n\t        lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);\n\t        textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);\n\t        if (scale1.rangeBand) {\n\t          var x = scale1, dx = x.rangeBand() / 2;\n\t          scale0 = scale1 = function(d) {\n\t            return x(d) + dx;\n\t          };\n\t        } else if (scale0.rangeBand) {\n\t          scale0 = scale1;\n\t        } else {\n\t          tickExit.call(tickTransform, scale1, scale0);\n\t        }\n\t        tickEnter.call(tickTransform, scale0, scale1);\n\t        tickUpdate.call(tickTransform, scale1, scale1);\n\t      });\n\t    }\n\t    axis.scale = function(x) {\n\t      if (!arguments.length) return scale;\n\t      scale = x;\n\t      return axis;\n\t    };\n\t    axis.orient = function(x) {\n\t      if (!arguments.length) return orient;\n\t      orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\n\t      return axis;\n\t    };\n\t    axis.ticks = function() {\n\t      if (!arguments.length) return tickArguments_;\n\t      tickArguments_ = arguments;\n\t      return axis;\n\t    };\n\t    axis.tickValues = function(x) {\n\t      if (!arguments.length) return tickValues;\n\t      tickValues = x;\n\t      return axis;\n\t    };\n\t    axis.tickFormat = function(x) {\n\t      if (!arguments.length) return tickFormat_;\n\t      tickFormat_ = x;\n\t      return axis;\n\t    };\n\t    axis.tickSize = function(x) {\n\t      var n = arguments.length;\n\t      if (!n) return innerTickSize;\n\t      innerTickSize = +x;\n\t      outerTickSize = +arguments[n - 1];\n\t      return axis;\n\t    };\n\t    axis.innerTickSize = function(x) {\n\t      if (!arguments.length) return innerTickSize;\n\t      innerTickSize = +x;\n\t      return axis;\n\t    };\n\t    axis.outerTickSize = function(x) {\n\t      if (!arguments.length) return outerTickSize;\n\t      outerTickSize = +x;\n\t      return axis;\n\t    };\n\t    axis.tickPadding = function(x) {\n\t      if (!arguments.length) return tickPadding;\n\t      tickPadding = +x;\n\t      return axis;\n\t    };\n\t    axis.tickSubdivide = function() {\n\t      return arguments.length && axis;\n\t    };\n\t    return axis;\n\t  };\n\t  var d3_svg_axisDefaultOrient = \"bottom\", d3_svg_axisOrients = {\n\t    top: 1,\n\t    right: 1,\n\t    bottom: 1,\n\t    left: 1\n\t  };\n\t  function d3_svg_axisX(selection, x0, x1) {\n\t    selection.attr(\"transform\", function(d) {\n\t      var v0 = x0(d);\n\t      return \"translate(\" + (isFinite(v0) ? v0 : x1(d)) + \",0)\";\n\t    });\n\t  }\n\t  function d3_svg_axisY(selection, y0, y1) {\n\t    selection.attr(\"transform\", function(d) {\n\t      var v0 = y0(d);\n\t      return \"translate(0,\" + (isFinite(v0) ? v0 : y1(d)) + \")\";\n\t    });\n\t  }\n\t  d3.svg.brush = function() {\n\t    var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];\n\t    function brush(g) {\n\t      g.each(function() {\n\t        var g = d3.select(this).style(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\n\t        var background = g.selectAll(\".background\").data([ 0 ]);\n\t        background.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\n\t        g.selectAll(\".extent\").data([ 0 ]).enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\n\t        var resize = g.selectAll(\".resize\").data(resizes, d3_identity);\n\t        resize.exit().remove();\n\t        resize.enter().append(\"g\").attr(\"class\", function(d) {\n\t          return \"resize \" + d;\n\t        }).style(\"cursor\", function(d) {\n\t          return d3_svg_brushCursor[d];\n\t        }).append(\"rect\").attr(\"x\", function(d) {\n\t          return /[ew]$/.test(d) ? -3 : null;\n\t        }).attr(\"y\", function(d) {\n\t          return /^[ns]/.test(d) ? -3 : null;\n\t        }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\n\t        resize.style(\"display\", brush.empty() ? \"none\" : null);\n\t        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;\n\t        if (x) {\n\t          range = d3_scaleRange(x);\n\t          backgroundUpdate.attr(\"x\", range[0]).attr(\"width\", range[1] - range[0]);\n\t          redrawX(gUpdate);\n\t        }\n\t        if (y) {\n\t          range = d3_scaleRange(y);\n\t          backgroundUpdate.attr(\"y\", range[0]).attr(\"height\", range[1] - range[0]);\n\t          redrawY(gUpdate);\n\t        }\n\t        redraw(gUpdate);\n\t      });\n\t    }\n\t    brush.event = function(g) {\n\t      g.each(function() {\n\t        var event_ = event.of(this, arguments), extent1 = {\n\t          x: xExtent,\n\t          y: yExtent,\n\t          i: xExtentDomain,\n\t          j: yExtentDomain\n\t        }, extent0 = this.__chart__ || extent1;\n\t        this.__chart__ = extent1;\n\t        if (d3_transitionInheritId) {\n\t          d3.select(this).transition().each(\"start.brush\", function() {\n\t            xExtentDomain = extent0.i;\n\t            yExtentDomain = extent0.j;\n\t            xExtent = extent0.x;\n\t            yExtent = extent0.y;\n\t            event_({\n\t              type: \"brushstart\"\n\t            });\n\t          }).tween(\"brush:brush\", function() {\n\t            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);\n\t            xExtentDomain = yExtentDomain = null;\n\t            return function(t) {\n\t              xExtent = extent1.x = xi(t);\n\t              yExtent = extent1.y = yi(t);\n\t              event_({\n\t                type: \"brush\",\n\t                mode: \"resize\"\n\t              });\n\t            };\n\t          }).each(\"end.brush\", function() {\n\t            xExtentDomain = extent1.i;\n\t            yExtentDomain = extent1.j;\n\t            event_({\n\t              type: \"brush\",\n\t              mode: \"resize\"\n\t            });\n\t            event_({\n\t              type: \"brushend\"\n\t            });\n\t          });\n\t        } else {\n\t          event_({\n\t            type: \"brushstart\"\n\t          });\n\t          event_({\n\t            type: \"brush\",\n\t            mode: \"resize\"\n\t          });\n\t          event_({\n\t            type: \"brushend\"\n\t          });\n\t        }\n\t      });\n\t    };\n\t    function redraw(g) {\n\t      g.selectAll(\".resize\").attr(\"transform\", function(d) {\n\t        return \"translate(\" + xExtent[+/e$/.test(d)] + \",\" + yExtent[+/^s/.test(d)] + \")\";\n\t      });\n\t    }\n\t    function redrawX(g) {\n\t      g.select(\".extent\").attr(\"x\", xExtent[0]);\n\t      g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", xExtent[1] - xExtent[0]);\n\t    }\n\t    function redrawY(g) {\n\t      g.select(\".extent\").attr(\"y\", yExtent[0]);\n\t      g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", yExtent[1] - yExtent[0]);\n\t    }\n\t    function brushstart() {\n\t      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed(\"extent\"), dragRestore = d3_event_dragSuppress(), center, origin = d3.mouse(target), offset;\n\t      var w = d3.select(d3_window).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\n\t      if (d3.event.changedTouches) {\n\t        w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\n\t      } else {\n\t        w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\n\t      }\n\t      g.interrupt().selectAll(\"*\").interrupt();\n\t      if (dragging) {\n\t        origin[0] = xExtent[0] - origin[0];\n\t        origin[1] = yExtent[0] - origin[1];\n\t      } else if (resizing) {\n\t        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);\n\t        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];\n\t        origin[0] = xExtent[ex];\n\t        origin[1] = yExtent[ey];\n\t      } else if (d3.event.altKey) center = origin.slice();\n\t      g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\n\t      d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\n\t      event_({\n\t        type: \"brushstart\"\n\t      });\n\t      brushmove();\n\t      function keydown() {\n\t        if (d3.event.keyCode == 32) {\n\t          if (!dragging) {\n\t            center = null;\n\t            origin[0] -= xExtent[1];\n\t            origin[1] -= yExtent[1];\n\t            dragging = 2;\n\t          }\n\t          d3_eventPreventDefault();\n\t        }\n\t      }\n\t      function keyup() {\n\t        if (d3.event.keyCode == 32 && dragging == 2) {\n\t          origin[0] += xExtent[1];\n\t          origin[1] += yExtent[1];\n\t          dragging = 0;\n\t          d3_eventPreventDefault();\n\t        }\n\t      }\n\t      function brushmove() {\n\t        var point = d3.mouse(target), moved = false;\n\t        if (offset) {\n\t          point[0] += offset[0];\n\t          point[1] += offset[1];\n\t        }\n\t        if (!dragging) {\n\t          if (d3.event.altKey) {\n\t            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];\n\t            origin[0] = xExtent[+(point[0] < center[0])];\n\t            origin[1] = yExtent[+(point[1] < center[1])];\n\t          } else center = null;\n\t        }\n\t        if (resizingX && move1(point, x, 0)) {\n\t          redrawX(g);\n\t          moved = true;\n\t        }\n\t        if (resizingY && move1(point, y, 1)) {\n\t          redrawY(g);\n\t          moved = true;\n\t        }\n\t        if (moved) {\n\t          redraw(g);\n\t          event_({\n\t            type: \"brush\",\n\t            mode: dragging ? \"move\" : \"resize\"\n\t          });\n\t        }\n\t      }\n\t      function move1(point, scale, i) {\n\t        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;\n\t        if (dragging) {\n\t          r0 -= position;\n\t          r1 -= size + position;\n\t        }\n\t        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\n\t        if (dragging) {\n\t          max = (min += position) + size;\n\t        } else {\n\t          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\n\t          if (position < min) {\n\t            max = min;\n\t            min = position;\n\t          } else {\n\t            max = position;\n\t          }\n\t        }\n\t        if (extent[0] != min || extent[1] != max) {\n\t          if (i) yExtentDomain = null; else xExtentDomain = null;\n\t          extent[0] = min;\n\t          extent[1] = max;\n\t          return true;\n\t        }\n\t      }\n\t      function brushend() {\n\t        brushmove();\n\t        g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\n\t        d3.select(\"body\").style(\"cursor\", null);\n\t        w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\n\t        dragRestore();\n\t        event_({\n\t          type: \"brushend\"\n\t        });\n\t      }\n\t    }\n\t    brush.x = function(z) {\n\t      if (!arguments.length) return x;\n\t      x = z;\n\t      resizes = d3_svg_brushResizes[!x << 1 | !y];\n\t      return brush;\n\t    };\n\t    brush.y = function(z) {\n\t      if (!arguments.length) return y;\n\t      y = z;\n\t      resizes = d3_svg_brushResizes[!x << 1 | !y];\n\t      return brush;\n\t    };\n\t    brush.clamp = function(z) {\n\t      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;\n\t      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;\n\t      return brush;\n\t    };\n\t    brush.extent = function(z) {\n\t      var x0, x1, y0, y1, t;\n\t      if (!arguments.length) {\n\t        if (x) {\n\t          if (xExtentDomain) {\n\t            x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n\t          } else {\n\t            x0 = xExtent[0], x1 = xExtent[1];\n\t            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n\t            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n\t          }\n\t        }\n\t        if (y) {\n\t          if (yExtentDomain) {\n\t            y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n\t          } else {\n\t            y0 = yExtent[0], y1 = yExtent[1];\n\t            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n\t            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n\t          }\n\t        }\n\t        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];\n\t      }\n\t      if (x) {\n\t        x0 = z[0], x1 = z[1];\n\t        if (y) x0 = x0[0], x1 = x1[0];\n\t        xExtentDomain = [ x0, x1 ];\n\t        if (x.invert) x0 = x(x0), x1 = x(x1);\n\t        if (x1 < x0) t = x0, x0 = x1, x1 = t;\n\t        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];\n\t      }\n\t      if (y) {\n\t        y0 = z[0], y1 = z[1];\n\t        if (x) y0 = y0[1], y1 = y1[1];\n\t        yExtentDomain = [ y0, y1 ];\n\t        if (y.invert) y0 = y(y0), y1 = y(y1);\n\t        if (y1 < y0) t = y0, y0 = y1, y1 = t;\n\t        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];\n\t      }\n\t      return brush;\n\t    };\n\t    brush.clear = function() {\n\t      if (!brush.empty()) {\n\t        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];\n\t        xExtentDomain = yExtentDomain = null;\n\t      }\n\t      return brush;\n\t    };\n\t    brush.empty = function() {\n\t      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\n\t    };\n\t    return d3.rebind(brush, event, \"on\");\n\t  };\n\t  var d3_svg_brushCursor = {\n\t    n: \"ns-resize\",\n\t    e: \"ew-resize\",\n\t    s: \"ns-resize\",\n\t    w: \"ew-resize\",\n\t    nw: \"nwse-resize\",\n\t    ne: \"nesw-resize\",\n\t    se: \"nwse-resize\",\n\t    sw: \"nesw-resize\"\n\t  };\n\t  var d3_svg_brushResizes = [ [ \"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\" ], [ \"e\", \"w\" ], [ \"n\", \"s\" ], [] ];\n\t  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;\n\t  var d3_time_formatUtc = d3_time_format.utc;\n\t  var d3_time_formatIso = d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n\t  d3_time_format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\n\t  function d3_time_formatIsoNative(date) {\n\t    return date.toISOString();\n\t  }\n\t  d3_time_formatIsoNative.parse = function(string) {\n\t    var date = new Date(string);\n\t    return isNaN(date) ? null : date;\n\t  };\n\t  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\n\t  d3_time.second = d3_time_interval(function(date) {\n\t    return new d3_date(Math.floor(date / 1e3) * 1e3);\n\t  }, function(date, offset) {\n\t    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\n\t  }, function(date) {\n\t    return date.getSeconds();\n\t  });\n\t  d3_time.seconds = d3_time.second.range;\n\t  d3_time.seconds.utc = d3_time.second.utc.range;\n\t  d3_time.minute = d3_time_interval(function(date) {\n\t    return new d3_date(Math.floor(date / 6e4) * 6e4);\n\t  }, function(date, offset) {\n\t    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\n\t  }, function(date) {\n\t    return date.getMinutes();\n\t  });\n\t  d3_time.minutes = d3_time.minute.range;\n\t  d3_time.minutes.utc = d3_time.minute.utc.range;\n\t  d3_time.hour = d3_time_interval(function(date) {\n\t    var timezone = date.getTimezoneOffset() / 60;\n\t    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\n\t  }, function(date, offset) {\n\t    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\n\t  }, function(date) {\n\t    return date.getHours();\n\t  });\n\t  d3_time.hours = d3_time.hour.range;\n\t  d3_time.hours.utc = d3_time.hour.utc.range;\n\t  d3_time.month = d3_time_interval(function(date) {\n\t    date = d3_time.day(date);\n\t    date.setDate(1);\n\t    return date;\n\t  }, function(date, offset) {\n\t    date.setMonth(date.getMonth() + offset);\n\t  }, function(date) {\n\t    return date.getMonth();\n\t  });\n\t  d3_time.months = d3_time.month.range;\n\t  d3_time.months.utc = d3_time.month.utc.range;\n\t  function d3_time_scale(linear, methods, format) {\n\t    function scale(x) {\n\t      return linear(x);\n\t    }\n\t    scale.invert = function(x) {\n\t      return d3_time_scaleDate(linear.invert(x));\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\n\t      linear.domain(x);\n\t      return scale;\n\t    };\n\t    function tickMethod(extent, count) {\n\t      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);\n\t      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {\n\t        return d / 31536e6;\n\t      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\n\t    }\n\t    scale.nice = function(interval, skip) {\n\t      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" && tickMethod(extent, interval);\n\t      if (method) interval = method[0], skip = method[1];\n\t      function skipped(date) {\n\t        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\n\t      }\n\t      return scale.domain(d3_scale_nice(domain, skip > 1 ? {\n\t        floor: function(date) {\n\t          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);\n\t          return date;\n\t        },\n\t        ceil: function(date) {\n\t          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);\n\t          return date;\n\t        }\n\t      } : interval));\n\t    };\n\t    scale.ticks = function(interval, skip) {\n\t      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" ? tickMethod(extent, interval) : !interval.range && [ {\n\t        range: interval\n\t      }, skip ];\n\t      if (method) interval = method[0], skip = method[1];\n\t      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\n\t    };\n\t    scale.tickFormat = function() {\n\t      return format;\n\t    };\n\t    scale.copy = function() {\n\t      return d3_time_scale(linear.copy(), methods, format);\n\t    };\n\t    return d3_scale_linearRebind(scale, linear);\n\t  }\n\t  function d3_time_scaleDate(t) {\n\t    return new Date(t);\n\t  }\n\t  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];\n\t  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];\n\t  var d3_time_scaleLocalFormat = d3_time_format.multi([ [ \".%L\", function(d) {\n\t    return d.getMilliseconds();\n\t  } ], [ \":%S\", function(d) {\n\t    return d.getSeconds();\n\t  } ], [ \"%I:%M\", function(d) {\n\t    return d.getMinutes();\n\t  } ], [ \"%I %p\", function(d) {\n\t    return d.getHours();\n\t  } ], [ \"%a %d\", function(d) {\n\t    return d.getDay() && d.getDate() != 1;\n\t  } ], [ \"%b %d\", function(d) {\n\t    return d.getDate() != 1;\n\t  } ], [ \"%B\", function(d) {\n\t    return d.getMonth();\n\t  } ], [ \"%Y\", d3_true ] ]);\n\t  var d3_time_scaleMilliseconds = {\n\t    range: function(start, stop, step) {\n\t      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);\n\t    },\n\t    floor: d3_identity,\n\t    ceil: d3_identity\n\t  };\n\t  d3_time_scaleLocalMethods.year = d3_time.year;\n\t  d3_time.scale = function() {\n\t    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\n\t  };\n\t  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function(m) {\n\t    return [ m[0].utc, m[1] ];\n\t  });\n\t  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([ [ \".%L\", function(d) {\n\t    return d.getUTCMilliseconds();\n\t  } ], [ \":%S\", function(d) {\n\t    return d.getUTCSeconds();\n\t  } ], [ \"%I:%M\", function(d) {\n\t    return d.getUTCMinutes();\n\t  } ], [ \"%I %p\", function(d) {\n\t    return d.getUTCHours();\n\t  } ], [ \"%a %d\", function(d) {\n\t    return d.getUTCDay() && d.getUTCDate() != 1;\n\t  } ], [ \"%b %d\", function(d) {\n\t    return d.getUTCDate() != 1;\n\t  } ], [ \"%B\", function(d) {\n\t    return d.getUTCMonth();\n\t  } ], [ \"%Y\", d3_true ] ]);\n\t  d3_time_scaleUtcMethods.year = d3_time.year.utc;\n\t  d3_time.scale.utc = function() {\n\t    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);\n\t  };\n\t  d3.text = d3_xhrType(function(request) {\n\t    return request.responseText;\n\t  });\n\t  d3.json = function(url, callback) {\n\t    return d3_xhr(url, \"application/json\", d3_json, callback);\n\t  };\n\t  function d3_json(request) {\n\t    return JSON.parse(request.responseText);\n\t  }\n\t  d3.html = function(url, callback) {\n\t    return d3_xhr(url, \"text/html\", d3_html, callback);\n\t  };\n\t  function d3_html(request) {\n\t    var range = d3_document.createRange();\n\t    range.selectNode(d3_document.body);\n\t    return range.createContextualFragment(request.responseText);\n\t  }\n\t  d3.xml = d3_xhrType(function(request) {\n\t    return request.responseXML;\n\t  });\n\t  if (true) !(__WEBPACK_AMD_DEFINE_FACTORY__ = (d3), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); else if (typeof module === \"object\" && module.exports) module.exports = d3;\n\t  this.d3 = d3;\n\t}();\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** scripts/main.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap cae2b565426d58ec58e9\n **/","define(function(require, exports, module) {\n    'use strict';\n\n    module.name = 'widget-category-spendings-chart';\n\n    var base = require('base');\n    var core = require('core');\n    var ui = require('ui');\n\n    var deps = [\n        core.name,\n        ui.name\n    ];\n\n    // @ngInject\n    function run(lpWidget, lpCoreBus) {\n        if (lpWidget && lpWidget.model && lpWidget.model.name) {\n            lpCoreBus.publish('cxp.item.loaded', { id: lpWidget.model.name });\n        }\n    }\n\n    module.exports = base.createModule(module.name, deps)\n        .factory(require('./factories'))\n        .controller(require('./controllers'))\n        .directive(require('./directives'))\n        .run(run);\n});\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./scripts/main.js\n ** module id = 0\n ** module chunks = 0\n **/","module.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tmodule.children = [];\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n}\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)/buildin/module.js\n ** module id = 1\n ** module chunks = 0\n **/","/**\n * Factories\n * @module factories\n */\ndefine(function(require, exports) {\n\n    'use strict';\n\n    // @ngInject\n    exports.CategorySpendingsResource = function($resource, lpWidget, lpCoreUtils) {\n        var spendingsDataSrc = lpCoreUtils.resolvePortalPlaceholders(lpWidget.getPreference('categorySpendingDataSrc'));\n        return $resource(spendingsDataSrc, null, {\n            'get': {method: 'GET'}\n        });\n    };\n\n    // @ngInject\n    exports.CategoriesResource = function($resource, lpWidget, lpCoreUtils) {\n        var categoriesDataSrc = lpCoreUtils.resolvePortalPlaceholders(lpWidget.getPreference('categoriesDataSrc'));\n        return $resource(categoriesDataSrc, null, {\n            'get': {method: 'GET', isArray: true}\n        });\n    };\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./scripts/factories.js\n ** module id = 5\n ** module chunks = 0\n **/","/**\n * Controllers\n * @module controllers\n */\ndefine(function(require, exports) {\n\n    'use strict';\n\n    // @ngInject\n    exports.CategorySpendingsChartCtrl = function($scope, $q, CategorySpendingsResource, CategoriesResource, lpCoreBus, lpCoreUtils) {\n        var bus = lpCoreBus;\n        var utils = lpCoreUtils;\n\n        $scope.accountId = null;\n        $scope.fromDate = null;\n        $scope.toDate = null;\n\n        $scope.viewLoading = true;\n        $scope.missingData = false;\n        $scope.showChart = false;\n\n        $scope.$watchCollection('[viewLoading,missingData]', function(newVals, oldVals) {\n            var viewLoading = newVals[0];\n            var missingData = newVals[1];\n            $scope.showChart = !viewLoading && !missingData;\n        });\n\n        /**\n         * Updates both categories and spending data, based on changed\n         * query values for CategorySpendingsResource\n         */\n        $scope.updateData = function() {\n            $q.all({\n                spendings: CategorySpendingsResource.get({\n                        accountIds: $scope.accountId,\n                        start: $scope.fromDate,\n                        end: $scope.toDate\n                    }).$promise,\n                categories: CategoriesResource.get().$promise\n            }).then(function(result) {\n                if(result.spendings.categoriesSpendings.length === 0) {\n                    $scope.missingData = true;\n                    $scope.viewLoading = false;\n                    return;\n                }\n\n                $scope.viewLoading = false;\n                $scope.missingData = false;\n\n                bus.publish('launchpad-retail.spendingDataUpdated', {\n                    spendings: result.spendings,\n                    categories: result.categories\n                });\n            }, function(error) {\n                $scope.viewLoading = false;\n                $scope.missingData = true;\n            });\n        };\n\n        //Listen for user account selection\n        bus.subscribe('launchpad-retail.accountSelected', function(params) {\n            $scope.accountId = params.accountId;\n            $scope.updateData();\n        });\n\n        //Listen for user accounts data load\n        bus.subscribe('launchpad-retail.accountsLoaded', function(accounts) {\n            var accountIds = [];\n\n            utils.forEach(accounts, function(account) {\n                accountIds.push(account.id);\n            });\n\n            $scope.accountId = accountIds.join(',');\n            $scope.updateData();\n        });\n\n        //Listen for transaction filtering by date\n        bus.subscribe('launchpad-retail.transactionsDateSearch', function(params) {\n            $scope.fromDate = params.fromDate;\n            $scope.toDate = params.toDate;\n            $scope.updateData();\n        });\n    };\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./scripts/controllers.js\n ** module id = 6\n ** module chunks = 0\n **/","/**\n * Directives\n * @module directives\n */\ndefine(function(require, exports) {\n\n    'use strict';\n\n    var d3 = require('d3');\n    var $ = window.jQuery;\n\n    // @ngInject\n    exports.categorySpendingsChart = function(lpCoreBus) {\n        var bus = lpCoreBus;\n\n        return {\n            restrict: 'EA',\n            replace: true,\n            template: '<svg class=\"category-spendings-chart\" width=\"350\" height=\"350\"></svg>',\n            link: function($scope, $element) {\n                var spendings, categories = null;\n                var width = 350;\n                var height = 350;\n                var radius = Math.min(width, height / 2);\n                var innerRadius = radius * 0.55;\n                var outerRadius = radius;\n                var arcGenerator = d3.svg.arc()\n                                .outerRadius(outerRadius)\n                                .innerRadius(innerRadius);\n                var svg;\n\n                function wrapText(textNode, text) {\n                    textNode.selectAll('tspan').remove();\n\n                    var textNodeWidth = textNode.attr('width');\n                    var tspanCount = 1;\n                    var tspan = textNode.append('tspan');\n                    var words = text.split(/\\s+/);\n                    var lineHeight = 20;\n\n                    if(words.length === 1 && text.length > 15) {\n                        tspan.text(text.slice(0, 12) + '...');\n                        return textNode;\n                    }\n\n                    for (var i = 0; i < words.length; i++) {\n                        if(tspan.node().getComputedTextLength() > textNodeWidth) {\n                            tspanCount++;\n\n                            // allow only two lines of text, otherwise end title with ellipsis\n                            if(tspanCount >= 3) {\n                                tspan.text(tspan.text() + '...');\n                                break;\n                            }\n\n                            tspan = textNode.append('tspan').attr({x: 0, dy: lineHeight});\n                        }\n\n                        tspan.text(tspan.text() + ' ' + words[i]);\n                    }\n\n                    return textNode;\n                }\n\n                /**\n                 * Converts radians to degrees\n                 * @param  {number} radians Value in radians\n                 * @return {number}         Value in degrees\n                 */\n                function radiansToDegree(radians) {\n                    return radians * (180 / Math.PI);\n                }\n\n                function categoryArrow(data) {\n                    var categoryArc = svg.selectAll('.arc').filter(function(arc) {\n                        return arc.data.categoryId === data.categoryId;\n                    });\n\n                    if(categoryArc[0].length > 0) {\n                        var datum = categoryArc.datum();\n\n                        svg.select('.arrow-group').append('path').attr({\n                            'class': 'arrow',\n                            transform: [\n                                'translate(0,' + (-1 * innerRadius * 0.9 ) + ')',\n                                'rotate(180)'\n                            ].join(' '),\n                            d: 'M 0 0 l 15.5 27.5 l -30 0',\n                            fill: data.color\n                        });\n\n                        var rotateBy = (datum.endAngle - datum.startAngle) / 2 + datum.startAngle;\n\n                        svg.selectAll('.arrow-group').attr({\n                            transform: 'rotate(' + radiansToDegree(rotateBy) + ')',\n                            'fill': data.color\n                        });\n                    }\n                }\n\n                function clean() {\n                    svg.selectAll('.arrow').remove();\n                    svg.selectAll('.historical-change-arrow').remove();\n                    svg.selectAll('.inner-labels text').text('');\n                }\n\n                function setCategoryInfo(data) {\n                    if(!data) {\n                        return;\n                    }\n\n                    clean();\n                    categoryArrow(data);\n                    wrapText(svg.select('.name'), data.name);\n\n                    var historicalChangeFactor = data.historicalChangeFactor || 1;\n\n                    svg.select('.amount').text('$' + parseFloat(data.amount).toFixed(2));\n\n                    svg.select('.historical-change-factor').text(\n                        parseFloat(Math.abs(historicalChangeFactor * 100)).toFixed(2) + '%'\n                    );\n\n                    svg.select('.historical-change-group').classed({\n                        'up': historicalChangeFactor > 0,\n                        'down': historicalChangeFactor <= 0\n                    });\n\n                    // svg.selectAll('.historical-change-arrow').remove();\n\n                    var comparisonArrow = svg.select('.historical-change-group')\n                                                .append('g')\n                                                .attr('class', 'historical-change-arrow');\n\n                    // define marker\n                    comparisonArrow.append('svg:defs').append('marker')\n                        .attr({\n                            'id': 'arrow-head',\n                            'refX': 0, 'refY': 2,\n                            'markerWidth': 2, 'markerHeight': 4,\n                            'orient': 'auto'\n                        })\n                        .append('svg:path')\n                        .attr('d', 'M0,0 V4 L2,2 Z');\n\n                    comparisonArrow.append('path')\n                                .attr({\n                                    'id': 'arrow-line',\n                                    'marker-end': 'url(#arrow-head)',\n                                    'fill': 'none',\n                                    'd': 'M0,0 L0,-18'\n                                });\n\n                    var arrowUp = ['translate(6,' + innerRadius * 0.31 + ')', 'rotate(180)'].join(' ');\n                    var arrowDown = ['translate(6,' + innerRadius * 0.54 + ')', 'rotate(0)'].join(' ');\n                    var arrow = svg.select('.historical-change-group').classed('down') ? arrowUp : arrowDown;\n\n                    svg.select('.historical-change-arrow').attr('transform', arrow);\n                    svg.select('.total-fraction').text(parseFloat(data.totalFraction * 100).toFixed(2) + '%');\n                }\n\n                function initialize() {\n                    var svgEl = d3.select($element[0])\n                                .append('g')\n                                .attr({\n                                    'class': 'donut',\n                                    transform: 'translate(' + width / 2 + ',' + height / 2 + ')'\n                                });\n\n                    // chart inner circle\n                    svgEl.append('circle').attr({\n                        'class': 'inner-circle',\n                        cx: 0, cy: 0, r: innerRadius\n                    });\n\n                    svgEl.append('g').attr('class', 'arcs');\n\n                    //Labels placed in the middle of the chart\n                    var innerLabels = svgEl.append('g').attr('class', 'inner-labels');\n                    innerLabels.append('text').attr({'class': 'name', x: 0, y: -(innerRadius * 0.34), width: innerRadius});\n                    innerLabels.append('text').attr({'class': 'amount', x: 0, dy: innerRadius * 0.15 });\n                    innerLabels.append('text').attr({\n                        'class': 'total-fraction',\n                        x: -(innerRadius * 0.4),\n                        dy: innerRadius * 0.5\n                    });\n\n                    var comparisonGroup = innerLabels.append('g').attr('class', 'historical-change-group');\n                    comparisonGroup.append('text').attr({'class': 'historical-change-factor', x: innerRadius * 0.45, dy: innerRadius * 0.5});\n\n                    // Arrow group which is used to rotate elements in the group according to arc\n                    svgEl.append('g').attr('class', 'arrow-group');\n\n                    return svgEl;\n                }\n\n                function onArcClick(d) {\n                    setCategoryInfo(d.data);\n                    bus.publish('launchpad-retail.donutCategoryChartSelection', d.data);\n                }\n\n                function update(spending, partyCategories) {\n                    clean();\n\n                    var vCategories = partyCategories;\n\n                    var totalData = {\n                        amount: spending.amount,\n                        historicalChangeFactor: spending.historicalChangeFactor,\n                        name: 'All Categories',\n                        totalFraction: 1\n                    };\n                    setCategoryInfo(totalData);\n\n                    var spendingByCategory = spending.categoriesSpendings;\n                    spendingByCategory.sort(function(a, b) {\n                        if (a.amount > b.amount) {\n                            return 1;\n                        } else if(a.amount < b.amount) {\n                            return -1;\n                        } else {\n                            return 0;\n                        }\n                    });\n\n                    $.each(spendingByCategory, function(index, categorySpending) {\n                        var category = $.grep(vCategories, function(vCategory) {\n                            return vCategory.id === categorySpending.categoryId;\n                        })[0];\n\n                        categorySpending.name = category.name;\n                        categorySpending.color = category.color;\n                    });\n\n                    var amountFn = function(category) { return category.amount; };\n                    var scale = d3.scale.linear()\n                            .domain([d3.min(spendingByCategory, amountFn), d3.max(spendingByCategory, amountFn)])\n                            .range([100, 360]);\n\n                    var pie = d3.layout.pie()\n                            .sort(null)\n                            .value(function(d) { return scale(Math.abs(d.amount)); });\n\n                    var arc = svg.select('.arcs').selectAll('.arc').data(pie(spendingByCategory)); // JOIN new data with old elems\n                    arc.classed('update', true); //UPDATE old elems\n                    arc.enter().append('path') //ENTER, create new elements if needed\n                        .classed('arc', true)\n                        .attr('d', arcGenerator)\n                        .style('fill', function(d) { return d.data.color; })\n                        .on('click', onArcClick);\n                    arc.attr('d', arcGenerator).style('fill', function(d) { return d.data.color; }); //ENTER + UPDATE\n                    arc.exit().remove(); //EXIT, remove old elements\n                }\n\n                svg = initialize();\n\n                bus.subscribe('launchpad-retail.spendingDataUpdated', function(data) {\n                    spendings = data.spendings;\n                    categories = data.categories;\n                    update(spendings, categories);\n                });\n\n                bus.subscribe('launchpad-retail.transactionsCategorySearch', function(vCategories) {\n                    if(vCategories.length === 1) {\n                        var categoriesSpendings = spendings.categoriesSpendings;\n                        var spending = categoriesSpendings.filter(function(vSpending) {\n                            return vSpending.categoryId === vCategories[0].id;\n                        })[0];\n\n\n                        setCategoryInfo(spending);\n                    }\n                });\n\n            }\n        };\n    };\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./scripts/directives.js\n ** module id = 7\n ** module chunks = 0\n **/","!function() {\n  var d3 = {\n    version: \"3.4.13\"\n  };\n  if (!Date.now) Date.now = function() {\n    return +new Date();\n  };\n  var d3_arraySlice = [].slice, d3_array = function(list) {\n    return d3_arraySlice.call(list);\n  };\n  var d3_document = document, d3_documentElement = d3_document.documentElement, d3_window = window;\n  try {\n    d3_array(d3_documentElement.childNodes)[0].nodeType;\n  } catch (e) {\n    d3_array = function(list) {\n      var i = list.length, array = new Array(i);\n      while (i--) array[i] = list[i];\n      return array;\n    };\n  }\n  try {\n    d3_document.createElement(\"div\").style.setProperty(\"opacity\", 0, \"\");\n  } catch (error) {\n    var d3_element_prototype = d3_window.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = d3_window.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;\n    d3_element_prototype.setAttribute = function(name, value) {\n      d3_element_setAttribute.call(this, name, value + \"\");\n    };\n    d3_element_prototype.setAttributeNS = function(space, local, value) {\n      d3_element_setAttributeNS.call(this, space, local, value + \"\");\n    };\n    d3_style_prototype.setProperty = function(name, value, priority) {\n      d3_style_setProperty.call(this, name, value + \"\", priority);\n    };\n  }\n  d3.ascending = d3_ascending;\n  function d3_ascending(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  }\n  d3.descending = function(a, b) {\n    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n  };\n  d3.min = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n && !((a = array[i]) != null && a <= a)) a = undefined;\n      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n    } else {\n      while (++i < n && !((a = f.call(array, array[i], i)) != null && a <= a)) a = undefined;\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\n    }\n    return a;\n  };\n  d3.max = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n && !((a = array[i]) != null && a <= a)) a = undefined;\n      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n    } else {\n      while (++i < n && !((a = f.call(array, array[i], i)) != null && a <= a)) a = undefined;\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\n    }\n    return a;\n  };\n  d3.extent = function(array, f) {\n    var i = -1, n = array.length, a, b, c;\n    if (arguments.length === 1) {\n      while (++i < n && !((a = c = array[i]) != null && a <= a)) a = c = undefined;\n      while (++i < n) if ((b = array[i]) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    } else {\n      while (++i < n && !((a = c = f.call(array, array[i], i)) != null && a <= a)) a = undefined;\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    }\n    return [ a, c ];\n  };\n  function d3_number(x) {\n    return x === null ? NaN : +x;\n  }\n  function d3_numeric(x) {\n    return !isNaN(x);\n  }\n  d3.sum = function(array, f) {\n    var s = 0, n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = +array[i])) s += a;\n    } else {\n      while (++i < n) if (d3_numeric(a = +f.call(array, array[i], i))) s += a;\n    }\n    return s;\n  };\n  d3.mean = function(array, f) {\n    var s = 0, n = array.length, a, i = -1, j = n;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) s += a; else --j;\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a; else --j;\n    }\n    return j ? s / j : undefined;\n  };\n  d3.quantile = function(values, p) {\n    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;\n    return e ? v + e * (values[h] - v) : v;\n  };\n  d3.median = function(array, f) {\n    var numbers = [], n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);\n    }\n    return numbers.length ? d3.quantile(numbers.sort(d3_ascending), .5) : undefined;\n  };\n  function d3_bisector(compare) {\n    return {\n      left: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) < 0) lo = mid + 1; else hi = mid;\n        }\n        return lo;\n      },\n      right: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) > 0) hi = mid; else lo = mid + 1;\n        }\n        return lo;\n      }\n    };\n  }\n  var d3_bisect = d3_bisector(d3_ascending);\n  d3.bisectLeft = d3_bisect.left;\n  d3.bisect = d3.bisectRight = d3_bisect.right;\n  d3.bisector = function(f) {\n    return d3_bisector(f.length === 1 ? function(d, x) {\n      return d3_ascending(f(d), x);\n    } : f);\n  };\n  d3.shuffle = function(array) {\n    var m = array.length, t, i;\n    while (m) {\n      i = Math.random() * m-- | 0;\n      t = array[m], array[m] = array[i], array[i] = t;\n    }\n    return array;\n  };\n  d3.permute = function(array, indexes) {\n    var i = indexes.length, permutes = new Array(i);\n    while (i--) permutes[i] = array[indexes[i]];\n    return permutes;\n  };\n  d3.pairs = function(array) {\n    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);\n    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];\n    return pairs;\n  };\n  d3.zip = function() {\n    if (!(n = arguments.length)) return [];\n    for (var i = -1, m = d3.min(arguments, d3_zipLength), zips = new Array(m); ++i < m; ) {\n      for (var j = -1, n, zip = zips[i] = new Array(n); ++j < n; ) {\n        zip[j] = arguments[j][i];\n      }\n    }\n    return zips;\n  };\n  function d3_zipLength(d) {\n    return d.length;\n  }\n  d3.transpose = function(matrix) {\n    return d3.zip.apply(d3, matrix);\n  };\n  d3.keys = function(map) {\n    var keys = [];\n    for (var key in map) keys.push(key);\n    return keys;\n  };\n  d3.values = function(map) {\n    var values = [];\n    for (var key in map) values.push(map[key]);\n    return values;\n  };\n  d3.entries = function(map) {\n    var entries = [];\n    for (var key in map) entries.push({\n      key: key,\n      value: map[key]\n    });\n    return entries;\n  };\n  d3.merge = function(arrays) {\n    var n = arrays.length, m, i = -1, j = 0, merged, array;\n    while (++i < n) j += arrays[i].length;\n    merged = new Array(j);\n    while (--n >= 0) {\n      array = arrays[n];\n      m = array.length;\n      while (--m >= 0) {\n        merged[--j] = array[m];\n      }\n    }\n    return merged;\n  };\n  var abs = Math.abs;\n  d3.range = function(start, stop, step) {\n    if (arguments.length < 3) {\n      step = 1;\n      if (arguments.length < 2) {\n        stop = start;\n        start = 0;\n      }\n    }\n    if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\n    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;\n    start *= k, stop *= k, step *= k;\n    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);\n    return range;\n  };\n  function d3_range_integerScale(x) {\n    var k = 1;\n    while (x * k % 1) k *= 10;\n    return k;\n  }\n  function d3_class(ctor, properties) {\n    for (var key in properties) {\n      Object.defineProperty(ctor.prototype, key, {\n        value: properties[key],\n        enumerable: false\n      });\n    }\n  }\n  d3.map = function(object) {\n    var map = new d3_Map();\n    if (object instanceof d3_Map) object.forEach(function(key, value) {\n      map.set(key, value);\n    }); else for (var key in object) map.set(key, object[key]);\n    return map;\n  };\n  function d3_Map() {\n    this._ = Object.create(null);\n  }\n  var d3_map_proto = \"__proto__\", d3_map_zero = \"\\x00\";\n  d3_class(d3_Map, {\n    has: d3_map_has,\n    get: function(key) {\n      return this._[d3_map_escape(key)];\n    },\n    set: function(key, value) {\n      return this._[d3_map_escape(key)] = value;\n    },\n    remove: d3_map_remove,\n    keys: d3_map_keys,\n    values: function() {\n      var values = [];\n      for (var key in this._) values.push(this._[key]);\n      return values;\n    },\n    entries: function() {\n      var entries = [];\n      for (var key in this._) entries.push({\n        key: d3_map_unescape(key),\n        value: this._[key]\n      });\n      return entries;\n    },\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key), this._[key]);\n    }\n  });\n  function d3_map_escape(key) {\n    return (key += \"\") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;\n  }\n  function d3_map_unescape(key) {\n    return (key += \"\")[0] === d3_map_zero ? key.slice(1) : key;\n  }\n  function d3_map_has(key) {\n    return d3_map_escape(key) in this._;\n  }\n  function d3_map_remove(key) {\n    return (key = d3_map_escape(key)) in this._ && delete this._[key];\n  }\n  function d3_map_keys() {\n    var keys = [];\n    for (var key in this._) keys.push(d3_map_unescape(key));\n    return keys;\n  }\n  function d3_map_size() {\n    var size = 0;\n    for (var key in this._) ++size;\n    return size;\n  }\n  function d3_map_empty() {\n    for (var key in this._) return false;\n    return true;\n  }\n  d3.nest = function() {\n    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;\n    function map(mapType, array, depth) {\n      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\n      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;\n      while (++i < n) {\n        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\n          values.push(object);\n        } else {\n          valuesByKey.set(keyValue, [ object ]);\n        }\n      }\n      if (mapType) {\n        object = mapType();\n        setter = function(keyValue, values) {\n          object.set(keyValue, map(mapType, values, depth));\n        };\n      } else {\n        object = {};\n        setter = function(keyValue, values) {\n          object[keyValue] = map(mapType, values, depth);\n        };\n      }\n      valuesByKey.forEach(setter);\n      return object;\n    }\n    function entries(map, depth) {\n      if (depth >= keys.length) return map;\n      var array = [], sortKey = sortKeys[depth++];\n      map.forEach(function(key, keyMap) {\n        array.push({\n          key: key,\n          values: entries(keyMap, depth)\n        });\n      });\n      return sortKey ? array.sort(function(a, b) {\n        return sortKey(a.key, b.key);\n      }) : array;\n    }\n    nest.map = function(array, mapType) {\n      return map(mapType, array, 0);\n    };\n    nest.entries = function(array) {\n      return entries(map(d3.map, array, 0), 0);\n    };\n    nest.key = function(d) {\n      keys.push(d);\n      return nest;\n    };\n    nest.sortKeys = function(order) {\n      sortKeys[keys.length - 1] = order;\n      return nest;\n    };\n    nest.sortValues = function(order) {\n      sortValues = order;\n      return nest;\n    };\n    nest.rollup = function(f) {\n      rollup = f;\n      return nest;\n    };\n    return nest;\n  };\n  d3.set = function(array) {\n    var set = new d3_Set();\n    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);\n    return set;\n  };\n  function d3_Set() {\n    this._ = Object.create(null);\n  }\n  d3_class(d3_Set, {\n    has: d3_map_has,\n    add: function(key) {\n      this._[d3_map_escape(key += \"\")] = true;\n      return key;\n    },\n    remove: d3_map_remove,\n    values: d3_map_keys,\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key));\n    }\n  });\n  d3.behavior = {};\n  d3.rebind = function(target, source) {\n    var i = 1, n = arguments.length, method;\n    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);\n    return target;\n  };\n  function d3_rebind(target, source, method) {\n    return function() {\n      var value = method.apply(source, arguments);\n      return value === source ? target : value;\n    };\n  }\n  function d3_vendorSymbol(object, name) {\n    if (name in object) return name;\n    name = name.charAt(0).toUpperCase() + name.slice(1);\n    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\n      var prefixName = d3_vendorPrefixes[i] + name;\n      if (prefixName in object) return prefixName;\n    }\n  }\n  var d3_vendorPrefixes = [ \"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\" ];\n  function d3_noop() {}\n  d3.dispatch = function() {\n    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    return dispatch;\n  };\n  function d3_dispatch() {}\n  d3_dispatch.prototype.on = function(type, listener) {\n    var i = type.indexOf(\".\"), name = \"\";\n    if (i >= 0) {\n      name = type.slice(i + 1);\n      type = type.slice(0, i);\n    }\n    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\n    if (arguments.length === 2) {\n      if (listener == null) for (type in this) {\n        if (this.hasOwnProperty(type)) this[type].on(name, null);\n      }\n      return this;\n    }\n  };\n  function d3_dispatch_event(dispatch) {\n    var listeners = [], listenerByName = new d3_Map();\n    function event() {\n      var z = listeners, i = -1, n = z.length, l;\n      while (++i < n) if (l = z[i].on) l.apply(this, arguments);\n      return dispatch;\n    }\n    event.on = function(name, listener) {\n      var l = listenerByName.get(name), i;\n      if (arguments.length < 2) return l && l.on;\n      if (l) {\n        l.on = null;\n        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\n        listenerByName.remove(name);\n      }\n      if (listener) listeners.push(listenerByName.set(name, {\n        on: listener\n      }));\n      return dispatch;\n    };\n    return event;\n  }\n  d3.event = null;\n  function d3_eventPreventDefault() {\n    d3.event.preventDefault();\n  }\n  function d3_eventSource() {\n    var e = d3.event, s;\n    while (s = e.sourceEvent) e = s;\n    return e;\n  }\n  function d3_eventDispatch(target) {\n    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    dispatch.of = function(thiz, argumentz) {\n      return function(e1) {\n        try {\n          var e0 = e1.sourceEvent = d3.event;\n          e1.target = target;\n          d3.event = e1;\n          dispatch[e1.type].apply(thiz, argumentz);\n        } finally {\n          d3.event = e0;\n        }\n      };\n    };\n    return dispatch;\n  }\n  d3.requote = function(s) {\n    return s.replace(d3_requote_re, \"\\\\$&\");\n  };\n  var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n  var d3_subclass = {}.__proto__ ? function(object, prototype) {\n    object.__proto__ = prototype;\n  } : function(object, prototype) {\n    for (var property in prototype) object[property] = prototype[property];\n  };\n  function d3_selection(groups) {\n    d3_subclass(groups, d3_selectionPrototype);\n    return groups;\n  }\n  var d3_select = function(s, n) {\n    return n.querySelector(s);\n  }, d3_selectAll = function(s, n) {\n    return n.querySelectorAll(s);\n  }, d3_selectMatcher = d3_documentElement.matches || d3_documentElement[d3_vendorSymbol(d3_documentElement, \"matchesSelector\")], d3_selectMatches = function(n, s) {\n    return d3_selectMatcher.call(n, s);\n  };\n  if (typeof Sizzle === \"function\") {\n    d3_select = function(s, n) {\n      return Sizzle(s, n)[0] || null;\n    };\n    d3_selectAll = Sizzle;\n    d3_selectMatches = Sizzle.matchesSelector;\n  }\n  d3.selection = function() {\n    return d3_selectionRoot;\n  };\n  var d3_selectionPrototype = d3.selection.prototype = [];\n  d3_selectionPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, group, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\n          if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selector(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_select(selector, this);\n    };\n  }\n  d3_selectionPrototype.selectAll = function(selector) {\n    var subgroups = [], subgroup, node;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\n          subgroup.parentNode = node;\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selectorAll(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_selectAll(selector, this);\n    };\n  }\n  var d3_nsPrefix = {\n    svg: \"http://www.w3.org/2000/svg\",\n    xhtml: \"http://www.w3.org/1999/xhtml\",\n    xlink: \"http://www.w3.org/1999/xlink\",\n    xml: \"http://www.w3.org/XML/1998/namespace\",\n    xmlns: \"http://www.w3.org/2000/xmlns/\"\n  };\n  d3.ns = {\n    prefix: d3_nsPrefix,\n    qualify: function(name) {\n      var i = name.indexOf(\":\"), prefix = name;\n      if (i >= 0) {\n        prefix = name.slice(0, i);\n        name = name.slice(i + 1);\n      }\n      return d3_nsPrefix.hasOwnProperty(prefix) ? {\n        space: d3_nsPrefix[prefix],\n        local: name\n      } : name;\n    }\n  };\n  d3_selectionPrototype.attr = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node();\n        name = d3.ns.qualify(name);\n        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\n      }\n      for (value in name) this.each(d3_selection_attr(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_attr(name, value));\n  };\n  function d3_selection_attr(name, value) {\n    name = d3.ns.qualify(name);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrConstant() {\n      this.setAttribute(name, value);\n    }\n    function attrConstantNS() {\n      this.setAttributeNS(name.space, name.local, value);\n    }\n    function attrFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);\n    }\n    function attrFunctionNS() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);\n    }\n    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\n  }\n  function d3_collapse(s) {\n    return s.trim().replace(/\\s+/g, \" \");\n  }\n  d3_selectionPrototype.classed = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;\n        if (value = node.classList) {\n          while (++i < n) if (!value.contains(name[i])) return false;\n        } else {\n          value = node.getAttribute(\"class\");\n          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;\n        }\n        return true;\n      }\n      for (value in name) this.each(d3_selection_classed(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_classed(name, value));\n  };\n  function d3_selection_classedRe(name) {\n    return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\n  }\n  function d3_selection_classes(name) {\n    return (name + \"\").trim().split(/^|\\s+/);\n  }\n  function d3_selection_classed(name, value) {\n    name = d3_selection_classes(name).map(d3_selection_classedName);\n    var n = name.length;\n    function classedConstant() {\n      var i = -1;\n      while (++i < n) name[i](this, value);\n    }\n    function classedFunction() {\n      var i = -1, x = value.apply(this, arguments);\n      while (++i < n) name[i](this, x);\n    }\n    return typeof value === \"function\" ? classedFunction : classedConstant;\n  }\n  function d3_selection_classedName(name) {\n    var re = d3_selection_classedRe(name);\n    return function(node, value) {\n      if (c = node.classList) return value ? c.add(name) : c.remove(name);\n      var c = node.getAttribute(\"class\") || \"\";\n      if (value) {\n        re.lastIndex = 0;\n        if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\n      } else {\n        node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\n      }\n    };\n  }\n  d3_selectionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));\n        return this;\n      }\n      if (n < 2) return d3_window.getComputedStyle(this.node(), null).getPropertyValue(name);\n      priority = \"\";\n    }\n    return this.each(d3_selection_style(name, value, priority));\n  };\n  function d3_selection_style(name, value, priority) {\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleConstant() {\n      this.style.setProperty(name, value, priority);\n    }\n    function styleFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);\n    }\n    return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\n  }\n  d3_selectionPrototype.property = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") return this.node()[name];\n      for (value in name) this.each(d3_selection_property(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_property(name, value));\n  };\n  function d3_selection_property(name, value) {\n    function propertyNull() {\n      delete this[name];\n    }\n    function propertyConstant() {\n      this[name] = value;\n    }\n    function propertyFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) delete this[name]; else this[name] = x;\n    }\n    return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\n  }\n  d3_selectionPrototype.text = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.textContent = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.textContent = \"\";\n    } : function() {\n      this.textContent = value;\n    }) : this.node().textContent;\n  };\n  d3_selectionPrototype.html = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.innerHTML = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.innerHTML = \"\";\n    } : function() {\n      this.innerHTML = value;\n    }) : this.node().innerHTML;\n  };\n  d3_selectionPrototype.append = function(name) {\n    name = d3_selection_creator(name);\n    return this.select(function() {\n      return this.appendChild(name.apply(this, arguments));\n    });\n  };\n  function d3_selection_creator(name) {\n    return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? function() {\n      return this.ownerDocument.createElementNS(name.space, name.local);\n    } : function() {\n      return this.ownerDocument.createElementNS(this.namespaceURI, name);\n    };\n  }\n  d3_selectionPrototype.insert = function(name, before) {\n    name = d3_selection_creator(name);\n    before = d3_selection_selector(before);\n    return this.select(function() {\n      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\n    });\n  };\n  d3_selectionPrototype.remove = function() {\n    return this.each(function() {\n      var parent = this.parentNode;\n      if (parent) parent.removeChild(this);\n    });\n  };\n  d3_selectionPrototype.data = function(value, key) {\n    var i = -1, n = this.length, group, node;\n    if (!arguments.length) {\n      value = new Array(n = (group = this[0]).length);\n      while (++i < n) {\n        if (node = group[i]) {\n          value[i] = node.__data__;\n        }\n      }\n      return value;\n    }\n    function bind(group, groupData) {\n      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;\n      if (key) {\n        var nodeByKeyValue = new d3_Map(), keyValues = new Array(n), keyValue;\n        for (i = -1; ++i < n; ) {\n          if (nodeByKeyValue.has(keyValue = key.call(node = group[i], node.__data__, i))) {\n            exitNodes[i] = node;\n          } else {\n            nodeByKeyValue.set(keyValue, node);\n          }\n          keyValues[i] = keyValue;\n        }\n        for (i = -1; ++i < m; ) {\n          if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          } else if (node !== true) {\n            updateNodes[i] = node;\n            node.__data__ = nodeData;\n          }\n          nodeByKeyValue.set(keyValue, true);\n        }\n        for (i = -1; ++i < n; ) {\n          if (nodeByKeyValue.get(keyValues[i]) !== true) {\n            exitNodes[i] = group[i];\n          }\n        }\n      } else {\n        for (i = -1; ++i < n0; ) {\n          node = group[i];\n          nodeData = groupData[i];\n          if (node) {\n            node.__data__ = nodeData;\n            updateNodes[i] = node;\n          } else {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          }\n        }\n        for (;i < m; ++i) {\n          enterNodes[i] = d3_selection_dataNode(groupData[i]);\n        }\n        for (;i < n; ++i) {\n          exitNodes[i] = group[i];\n        }\n      }\n      enterNodes.update = updateNodes;\n      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\n      enter.push(enterNodes);\n      update.push(updateNodes);\n      exit.push(exitNodes);\n    }\n    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);\n    if (typeof value === \"function\") {\n      while (++i < n) {\n        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\n      }\n    } else {\n      while (++i < n) {\n        bind(group = this[i], value);\n      }\n    }\n    update.enter = function() {\n      return enter;\n    };\n    update.exit = function() {\n      return exit;\n    };\n    return update;\n  };\n  function d3_selection_dataNode(data) {\n    return {\n      __data__: data\n    };\n  }\n  d3_selectionPrototype.datum = function(value) {\n    return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\n  };\n  d3_selectionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_filter(selector) {\n    return function() {\n      return d3_selectMatches(this, selector);\n    };\n  }\n  d3_selectionPrototype.order = function() {\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {\n        if (node = group[i]) {\n          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n          next = node;\n        }\n      }\n    }\n    return this;\n  };\n  d3_selectionPrototype.sort = function(comparator) {\n    comparator = d3_selection_sortComparator.apply(this, arguments);\n    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);\n    return this.order();\n  };\n  function d3_selection_sortComparator(comparator) {\n    if (!arguments.length) comparator = d3_ascending;\n    return function(a, b) {\n      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\n    };\n  }\n  d3_selectionPrototype.each = function(callback) {\n    return d3_selection_each(this, function(node, i, j) {\n      callback.call(node, node.__data__, i, j);\n    });\n  };\n  function d3_selection_each(groups, callback) {\n    for (var j = 0, m = groups.length; j < m; j++) {\n      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\n        if (node = group[i]) callback(node, i, j);\n      }\n    }\n    return groups;\n  }\n  d3_selectionPrototype.call = function(callback) {\n    var args = d3_array(arguments);\n    callback.apply(args[0] = this, args);\n    return this;\n  };\n  d3_selectionPrototype.empty = function() {\n    return !this.node();\n  };\n  d3_selectionPrototype.node = function() {\n    for (var j = 0, m = this.length; j < m; j++) {\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        var node = group[i];\n        if (node) return node;\n      }\n    }\n    return null;\n  };\n  d3_selectionPrototype.size = function() {\n    var n = 0;\n    d3_selection_each(this, function() {\n      ++n;\n    });\n    return n;\n  };\n  function d3_selection_enter(selection) {\n    d3_subclass(selection, d3_selection_enterPrototype);\n    return selection;\n  }\n  var d3_selection_enterPrototype = [];\n  d3.selection.enter = d3_selection_enter;\n  d3.selection.enter.prototype = d3_selection_enterPrototype;\n  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\n  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\n  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\n  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\n  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\n  d3_selection_enterPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, upgroup, group, node;\n    for (var j = -1, m = this.length; ++j < m; ) {\n      upgroup = (group = this[j]).update;\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = group.parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\n          subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  d3_selection_enterPrototype.insert = function(name, before) {\n    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\n    return d3_selectionPrototype.insert.call(this, name, before);\n  };\n  function d3_selection_enterInsertBefore(enter) {\n    var i0, j0;\n    return function(d, i, j) {\n      var group = enter[j].update, n = group.length, node;\n      if (j != j0) j0 = j, i0 = 0;\n      if (i >= i0) i0 = i + 1;\n      while (!(node = group[i0]) && ++i0 < n) ;\n      return node;\n    };\n  }\n  d3_selectionPrototype.transition = function() {\n    var id = d3_transitionInheritId || ++d3_transitionId, subgroups = [], subgroup, node, transition = d3_transitionInherit || {\n      time: Date.now(),\n      ease: d3_ease_cubicInOut,\n      delay: 0,\n      duration: 250\n    };\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) d3_transitionNode(node, i, id, transition);\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, id);\n  };\n  d3_selectionPrototype.interrupt = function() {\n    return this.each(d3_selection_interrupt);\n  };\n  function d3_selection_interrupt() {\n    var lock = this.__transition__;\n    if (lock) ++lock.active;\n  }\n  d3.select = function(node) {\n    var group = [ typeof node === \"string\" ? d3_select(node, d3_document) : node ];\n    group.parentNode = d3_documentElement;\n    return d3_selection([ group ]);\n  };\n  d3.selectAll = function(nodes) {\n    var group = d3_array(typeof nodes === \"string\" ? d3_selectAll(nodes, d3_document) : nodes);\n    group.parentNode = d3_documentElement;\n    return d3_selection([ group ]);\n  };\n  var d3_selectionRoot = d3.select(d3_documentElement);\n  d3_selectionPrototype.on = function(type, listener, capture) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof type !== \"string\") {\n        if (n < 2) listener = false;\n        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));\n        return this;\n      }\n      if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\n      capture = false;\n    }\n    return this.each(d3_selection_on(type, listener, capture));\n  };\n  function d3_selection_on(type, listener, capture) {\n    var name = \"__on\" + type, i = type.indexOf(\".\"), wrap = d3_selection_onListener;\n    if (i > 0) type = type.slice(0, i);\n    var filter = d3_selection_onFilters.get(type);\n    if (filter) type = filter, wrap = d3_selection_onFilter;\n    function onRemove() {\n      var l = this[name];\n      if (l) {\n        this.removeEventListener(type, l, l.$);\n        delete this[name];\n      }\n    }\n    function onAdd() {\n      var l = wrap(listener, d3_array(arguments));\n      onRemove.call(this);\n      this.addEventListener(type, this[name] = l, l.$ = capture);\n      l._ = listener;\n    }\n    function removeAll() {\n      var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"), match;\n      for (var name in this) {\n        if (match = name.match(re)) {\n          var l = this[name];\n          this.removeEventListener(match[1], l, l.$);\n          delete this[name];\n        }\n      }\n    }\n    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\n  }\n  var d3_selection_onFilters = d3.map({\n    mouseenter: \"mouseover\",\n    mouseleave: \"mouseout\"\n  });\n  d3_selection_onFilters.forEach(function(k) {\n    if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\n  });\n  function d3_selection_onListener(listener, argumentz) {\n    return function(e) {\n      var o = d3.event;\n      d3.event = e;\n      argumentz[0] = this.__data__;\n      try {\n        listener.apply(this, argumentz);\n      } finally {\n        d3.event = o;\n      }\n    };\n  }\n  function d3_selection_onFilter(listener, argumentz) {\n    var l = d3_selection_onListener(listener, argumentz);\n    return function(e) {\n      var target = this, related = e.relatedTarget;\n      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\n        l.call(target, e);\n      }\n    };\n  }\n  var d3_event_dragSelect = \"onselectstart\" in d3_document ? null : d3_vendorSymbol(d3_documentElement.style, \"userSelect\"), d3_event_dragId = 0;\n  function d3_event_dragSuppress() {\n    var name = \".dragsuppress-\" + ++d3_event_dragId, click = \"click\" + name, w = d3.select(d3_window).on(\"touchmove\" + name, d3_eventPreventDefault).on(\"dragstart\" + name, d3_eventPreventDefault).on(\"selectstart\" + name, d3_eventPreventDefault);\n    if (d3_event_dragSelect) {\n      var style = d3_documentElement.style, select = style[d3_event_dragSelect];\n      style[d3_event_dragSelect] = \"none\";\n    }\n    return function(suppressClick) {\n      w.on(name, null);\n      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\n      if (suppressClick) {\n        function off() {\n          w.on(click, null);\n        }\n        w.on(click, function() {\n          d3_eventPreventDefault();\n          off();\n        }, true);\n        setTimeout(off, 0);\n      }\n    };\n  }\n  d3.mouse = function(container) {\n    return d3_mousePoint(container, d3_eventSource());\n  };\n  var d3_mouse_bug44083 = /WebKit/.test(d3_window.navigator.userAgent) ? -1 : 0;\n  function d3_mousePoint(container, e) {\n    if (e.changedTouches) e = e.changedTouches[0];\n    var svg = container.ownerSVGElement || container;\n    if (svg.createSVGPoint) {\n      var point = svg.createSVGPoint();\n      if (d3_mouse_bug44083 < 0 && (d3_window.scrollX || d3_window.scrollY)) {\n        svg = d3.select(\"body\").append(\"svg\").style({\n          position: \"absolute\",\n          top: 0,\n          left: 0,\n          margin: 0,\n          padding: 0,\n          border: \"none\"\n        }, \"important\");\n        var ctm = svg[0][0].getScreenCTM();\n        d3_mouse_bug44083 = !(ctm.f || ctm.e);\n        svg.remove();\n      }\n      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX, \n      point.y = e.clientY;\n      point = point.matrixTransform(container.getScreenCTM().inverse());\n      return [ point.x, point.y ];\n    }\n    var rect = container.getBoundingClientRect();\n    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];\n  }\n  d3.touch = function(container, touches, identifier) {\n    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;\n    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {\n      if ((touch = touches[i]).identifier === identifier) {\n        return d3_mousePoint(container, touch);\n      }\n    }\n  };\n  d3.behavior.drag = function() {\n    var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, d3_behavior_dragMouseSubject, \"mousemove\", \"mouseup\"), touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_behavior_dragTouchSubject, \"touchmove\", \"touchend\");\n    function drag() {\n      this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\n    }\n    function dragstart(id, position, subject, move, end) {\n      return function() {\n        var that = this, target = d3.event.target, parent = that.parentNode, dispatch = event.of(that, arguments), dragged = 0, dragId = id(), dragName = \".drag\" + (dragId == null ? \"\" : \"-\" + dragId), dragOffset, dragSubject = d3.select(subject()).on(move + dragName, moved).on(end + dragName, ended), dragRestore = d3_event_dragSuppress(), position0 = position(parent, dragId);\n        if (origin) {\n          dragOffset = origin.apply(that, arguments);\n          dragOffset = [ dragOffset.x - position0[0], dragOffset.y - position0[1] ];\n        } else {\n          dragOffset = [ 0, 0 ];\n        }\n        dispatch({\n          type: \"dragstart\"\n        });\n        function moved() {\n          var position1 = position(parent, dragId), dx, dy;\n          if (!position1) return;\n          dx = position1[0] - position0[0];\n          dy = position1[1] - position0[1];\n          dragged |= dx | dy;\n          position0 = position1;\n          dispatch({\n            type: \"drag\",\n            x: position1[0] + dragOffset[0],\n            y: position1[1] + dragOffset[1],\n            dx: dx,\n            dy: dy\n          });\n        }\n        function ended() {\n          if (!position(parent, dragId)) return;\n          dragSubject.on(move + dragName, null).on(end + dragName, null);\n          dragRestore(dragged && d3.event.target === target);\n          dispatch({\n            type: \"dragend\"\n          });\n        }\n      };\n    }\n    drag.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return drag;\n    };\n    return d3.rebind(drag, event, \"on\");\n  };\n  function d3_behavior_dragTouchId() {\n    return d3.event.changedTouches[0].identifier;\n  }\n  function d3_behavior_dragTouchSubject() {\n    return d3.event.target;\n  }\n  function d3_behavior_dragMouseSubject() {\n    return d3_window;\n  }\n  d3.touches = function(container, touches) {\n    if (arguments.length < 2) touches = d3_eventSource().touches;\n    return touches ? d3_array(touches).map(function(touch) {\n      var point = d3_mousePoint(container, touch);\n      point.identifier = touch.identifier;\n      return point;\n    }) : [];\n  };\n  var π = Math.PI, τ = 2 * π, halfπ = π / 2, ε = 1e-6, ε2 = ε * ε, d3_radians = π / 180, d3_degrees = 180 / π;\n  function d3_sgn(x) {\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\n  }\n  function d3_cross2d(a, b, c) {\n    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n  }\n  function d3_acos(x) {\n    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n  }\n  function d3_asin(x) {\n    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\n  }\n  function d3_sinh(x) {\n    return ((x = Math.exp(x)) - 1 / x) / 2;\n  }\n  function d3_cosh(x) {\n    return ((x = Math.exp(x)) + 1 / x) / 2;\n  }\n  function d3_tanh(x) {\n    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n  }\n  function d3_haversin(x) {\n    return (x = Math.sin(x / 2)) * x;\n  }\n  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;\n  d3.interpolateZoom = function(p0, p1) {\n    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2];\n    var dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1), dr = r1 - r0, S = (dr || Math.log(w1 / w0)) / ρ;\n    function interpolate(t) {\n      var s = t * S;\n      if (dr) {\n        var coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\n        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];\n      }\n      return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * s) ];\n    }\n    interpolate.duration = S * 1e3;\n    return interpolate;\n  };\n  d3.behavior.zoom = function() {\n    var view = {\n      x: 0,\n      y: 0,\n      k: 1\n    }, translate0, center0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, mousedown = \"mousedown.zoom\", mousemove = \"mousemove.zoom\", mouseup = \"mouseup.zoom\", mousewheelTimer, touchstart = \"touchstart.zoom\", touchtime, event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"), x0, x1, y0, y1;\n    function zoom(g) {\n      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\n    }\n    zoom.event = function(g) {\n      g.each(function() {\n        var dispatch = event.of(this, arguments), view1 = view;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.zoom\", function() {\n            view = this.__chart__ || {\n              x: 0,\n              y: 0,\n              k: 1\n            };\n            zoomstarted(dispatch);\n          }).tween(\"zoom:zoom\", function() {\n            var dx = size[0], dy = size[1], cx = dx / 2, cy = dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);\n            return function(t) {\n              var l = i(t), k = dx / l[2];\n              this.__chart__ = view = {\n                x: cx - l[0] * k,\n                y: cy - l[1] * k,\n                k: k\n              };\n              zoomed(dispatch);\n            };\n          }).each(\"end.zoom\", function() {\n            zoomended(dispatch);\n          });\n        } else {\n          this.__chart__ = view;\n          zoomstarted(dispatch);\n          zoomed(dispatch);\n          zoomended(dispatch);\n        }\n      });\n    };\n    zoom.translate = function(_) {\n      if (!arguments.length) return [ view.x, view.y ];\n      view = {\n        x: +_[0],\n        y: +_[1],\n        k: view.k\n      };\n      rescale();\n      return zoom;\n    };\n    zoom.scale = function(_) {\n      if (!arguments.length) return view.k;\n      view = {\n        x: view.x,\n        y: view.y,\n        k: +_\n      };\n      rescale();\n      return zoom;\n    };\n    zoom.scaleExtent = function(_) {\n      if (!arguments.length) return scaleExtent;\n      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.center = function(_) {\n      if (!arguments.length) return center;\n      center = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.size = function(_) {\n      if (!arguments.length) return size;\n      size = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.x = function(z) {\n      if (!arguments.length) return x1;\n      x1 = z;\n      x0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    zoom.y = function(z) {\n      if (!arguments.length) return y1;\n      y1 = z;\n      y0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    function location(p) {\n      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];\n    }\n    function point(l) {\n      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];\n    }\n    function scaleTo(s) {\n      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\n    }\n    function translateTo(p, l) {\n      l = point(l);\n      view.x += p[0] - l[0];\n      view.y += p[1] - l[1];\n    }\n    function rescale() {\n      if (x1) x1.domain(x0.range().map(function(x) {\n        return (x - view.x) / view.k;\n      }).map(x0.invert));\n      if (y1) y1.domain(y0.range().map(function(y) {\n        return (y - view.y) / view.k;\n      }).map(y0.invert));\n    }\n    function zoomstarted(dispatch) {\n      dispatch({\n        type: \"zoomstart\"\n      });\n    }\n    function zoomed(dispatch) {\n      rescale();\n      dispatch({\n        type: \"zoom\",\n        scale: view.k,\n        translate: [ view.x, view.y ]\n      });\n    }\n    function zoomended(dispatch) {\n      dispatch({\n        type: \"zoomend\"\n      });\n    }\n    function mousedowned() {\n      var that = this, target = d3.event.target, dispatch = event.of(that, arguments), dragged = 0, subject = d3.select(d3_window).on(mousemove, moved).on(mouseup, ended), location0 = location(d3.mouse(that)), dragRestore = d3_event_dragSuppress();\n      d3_selection_interrupt.call(that);\n      zoomstarted(dispatch);\n      function moved() {\n        dragged = 1;\n        translateTo(d3.mouse(that), location0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        subject.on(mousemove, null).on(mouseup, null);\n        dragRestore(dragged && d3.event.target === target);\n        zoomended(dispatch);\n      }\n    }\n    function touchstarted() {\n      var that = this, dispatch = event.of(that, arguments), locations0 = {}, distance0 = 0, scale0, zoomName = \".zoom-\" + d3.event.changedTouches[0].identifier, touchmove = \"touchmove\" + zoomName, touchend = \"touchend\" + zoomName, targets = [], subject = d3.select(that), dragRestore = d3_event_dragSuppress();\n      d3_selection_interrupt.call(that);\n      started();\n      zoomstarted(dispatch);\n      subject.on(mousedown, null).on(touchstart, started);\n      function relocate() {\n        var touches = d3.touches(that);\n        scale0 = view.k;\n        touches.forEach(function(t) {\n          if (t.identifier in locations0) locations0[t.identifier] = location(t);\n        });\n        return touches;\n      }\n      function started() {\n        var target = d3.event.target;\n        d3.select(target).on(touchmove, moved).on(touchend, ended);\n        targets.push(target);\n        var changed = d3.event.changedTouches;\n        for (var i = 0, n = changed.length; i < n; ++i) {\n          locations0[changed[i].identifier] = null;\n        }\n        var touches = relocate(), now = Date.now();\n        if (touches.length === 1) {\n          if (now - touchtime < 500) {\n            var p = touches[0], l = locations0[p.identifier];\n            scaleTo(view.k * 2);\n            translateTo(p, l);\n            d3_eventPreventDefault();\n            zoomed(dispatch);\n          }\n          touchtime = now;\n        } else if (touches.length > 1) {\n          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];\n          distance0 = dx * dx + dy * dy;\n        }\n      }\n      function moved() {\n        var touches = d3.touches(that), p0, l0, p1, l1;\n        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\n          p1 = touches[i];\n          if (l1 = locations0[p1.identifier]) {\n            if (l0) break;\n            p0 = p1, l0 = l1;\n          }\n        }\n        if (l1) {\n          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);\n          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];\n          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];\n          scaleTo(scale1 * scale0);\n        }\n        touchtime = null;\n        translateTo(p0, l0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        if (d3.event.touches.length) {\n          var changed = d3.event.changedTouches;\n          for (var i = 0, n = changed.length; i < n; ++i) {\n            delete locations0[changed[i].identifier];\n          }\n          for (var identifier in locations0) {\n            return void relocate();\n          }\n        }\n        d3.selectAll(targets).on(zoomName, null);\n        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);\n        dragRestore();\n        zoomended(dispatch);\n      }\n    }\n    function mousewheeled() {\n      var dispatch = event.of(this, arguments);\n      if (mousewheelTimer) clearTimeout(mousewheelTimer); else translate0 = location(center0 = center || d3.mouse(this)), \n      d3_selection_interrupt.call(this), zoomstarted(dispatch);\n      mousewheelTimer = setTimeout(function() {\n        mousewheelTimer = null;\n        zoomended(dispatch);\n      }, 50);\n      d3_eventPreventDefault();\n      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\n      translateTo(center0, translate0);\n      zoomed(dispatch);\n    }\n    function dblclicked() {\n      var dispatch = event.of(this, arguments), p = d3.mouse(this), l = location(p), k = Math.log(view.k) / Math.LN2;\n      zoomstarted(dispatch);\n      scaleTo(Math.pow(2, d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1));\n      translateTo(p, l);\n      zoomed(dispatch);\n      zoomended(dispatch);\n    }\n    return d3.rebind(zoom, event, \"on\");\n  };\n  var d3_behavior_zoomInfinity = [ 0, Infinity ];\n  var d3_behavior_zoomDelta, d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n    return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\n  }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n    return d3.event.wheelDelta;\n  }, \"mousewheel\") : (d3_behavior_zoomDelta = function() {\n    return -d3.event.detail;\n  }, \"MozMousePixelScroll\");\n  d3.color = d3_color;\n  function d3_color() {}\n  d3_color.prototype.toString = function() {\n    return this.rgb() + \"\";\n  };\n  d3.hsl = d3_hsl;\n  function d3_hsl(h, s, l) {\n    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);\n  }\n  var d3_hslPrototype = d3_hsl.prototype = new d3_color();\n  d3_hslPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, this.l / k);\n  };\n  d3_hslPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, k * this.l);\n  };\n  d3_hslPrototype.rgb = function() {\n    return d3_hsl_rgb(this.h, this.s, this.l);\n  };\n  function d3_hsl_rgb(h, s, l) {\n    var m1, m2;\n    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n    l = l < 0 ? 0 : l > 1 ? 1 : l;\n    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n    m1 = 2 * l - m2;\n    function v(h) {\n      if (h > 360) h -= 360; else if (h < 0) h += 360;\n      if (h < 60) return m1 + (m2 - m1) * h / 60;\n      if (h < 180) return m2;\n      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n      return m1;\n    }\n    function vv(h) {\n      return Math.round(v(h) * 255);\n    }\n    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n  }\n  d3.hcl = d3_hcl;\n  function d3_hcl(h, c, l) {\n    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);\n  }\n  var d3_hclPrototype = d3_hcl.prototype = new d3_color();\n  d3_hclPrototype.brighter = function(k) {\n    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.darker = function(k) {\n    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.rgb = function() {\n    return d3_hcl_lab(this.h, this.c, this.l).rgb();\n  };\n  function d3_hcl_lab(h, c, l) {\n    if (isNaN(h)) h = 0;\n    if (isNaN(c)) c = 0;\n    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n  }\n  d3.lab = d3_lab;\n  function d3_lab(l, a, b) {\n    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);\n  }\n  var d3_lab_K = 18;\n  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;\n  var d3_labPrototype = d3_lab.prototype = new d3_color();\n  d3_labPrototype.brighter = function(k) {\n    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.darker = function(k) {\n    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.rgb = function() {\n    return d3_lab_rgb(this.l, this.a, this.b);\n  };\n  function d3_lab_rgb(l, a, b) {\n    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;\n    x = d3_lab_xyz(x) * d3_lab_X;\n    y = d3_lab_xyz(y) * d3_lab_Y;\n    z = d3_lab_xyz(z) * d3_lab_Z;\n    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\n  }\n  function d3_lab_hcl(l, a, b) {\n    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);\n  }\n  function d3_lab_xyz(x) {\n    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n  }\n  function d3_xyz_lab(x) {\n    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n  }\n  function d3_xyz_rgb(r) {\n    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n  }\n  d3.rgb = d3_rgb;\n  function d3_rgb(r, g, b) {\n    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);\n  }\n  function d3_rgbNumber(value) {\n    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n  }\n  function d3_rgbString(value) {\n    return d3_rgbNumber(value) + \"\";\n  }\n  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();\n  d3_rgbPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    var r = this.r, g = this.g, b = this.b, i = 30;\n    if (!r && !g && !b) return new d3_rgb(i, i, i);\n    if (r && r < i) r = i;\n    if (g && g < i) g = i;\n    if (b && b < i) b = i;\n    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));\n  };\n  d3_rgbPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_rgb(k * this.r, k * this.g, k * this.b);\n  };\n  d3_rgbPrototype.hsl = function() {\n    return d3_rgb_hsl(this.r, this.g, this.b);\n  };\n  d3_rgbPrototype.toString = function() {\n    return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n  };\n  function d3_rgb_hex(v) {\n    return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n  }\n  function d3_rgb_parse(format, rgb, hsl) {\n    var r = 0, g = 0, b = 0, m1, m2, color;\n    m1 = /([a-z]+)\\((.*)\\)/i.exec(format);\n    if (m1) {\n      m2 = m1[2].split(\",\");\n      switch (m1[1]) {\n       case \"hsl\":\n        {\n          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n        }\n\n       case \"rgb\":\n        {\n          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\n        }\n      }\n    }\n    if (color = d3_rgb_names.get(format)) return rgb(color.r, color.g, color.b);\n    if (format != null && format.charAt(0) === \"#\" && !isNaN(color = parseInt(format.slice(1), 16))) {\n      if (format.length === 4) {\n        r = (color & 3840) >> 4;\n        r = r >> 4 | r;\n        g = color & 240;\n        g = g >> 4 | g;\n        b = color & 15;\n        b = b << 4 | b;\n      } else if (format.length === 7) {\n        r = (color & 16711680) >> 16;\n        g = (color & 65280) >> 8;\n        b = color & 255;\n      }\n    }\n    return rgb(r, g, b);\n  }\n  function d3_rgb_hsl(r, g, b) {\n    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;\n    if (d) {\n      s = l < .5 ? d / (max + min) : d / (2 - max - min);\n      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;\n      h *= 60;\n    } else {\n      h = NaN;\n      s = l > 0 && l < 1 ? 0 : h;\n    }\n    return new d3_hsl(h, s, l);\n  }\n  function d3_rgb_lab(r, g, b) {\n    r = d3_rgb_xyz(r);\n    g = d3_rgb_xyz(g);\n    b = d3_rgb_xyz(b);\n    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n  }\n  function d3_rgb_xyz(r) {\n    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n  }\n  function d3_rgb_parseNumber(c) {\n    var f = parseFloat(c);\n    return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n  }\n  var d3_rgb_names = d3.map({\n    aliceblue: 15792383,\n    antiquewhite: 16444375,\n    aqua: 65535,\n    aquamarine: 8388564,\n    azure: 15794175,\n    beige: 16119260,\n    bisque: 16770244,\n    black: 0,\n    blanchedalmond: 16772045,\n    blue: 255,\n    blueviolet: 9055202,\n    brown: 10824234,\n    burlywood: 14596231,\n    cadetblue: 6266528,\n    chartreuse: 8388352,\n    chocolate: 13789470,\n    coral: 16744272,\n    cornflowerblue: 6591981,\n    cornsilk: 16775388,\n    crimson: 14423100,\n    cyan: 65535,\n    darkblue: 139,\n    darkcyan: 35723,\n    darkgoldenrod: 12092939,\n    darkgray: 11119017,\n    darkgreen: 25600,\n    darkgrey: 11119017,\n    darkkhaki: 12433259,\n    darkmagenta: 9109643,\n    darkolivegreen: 5597999,\n    darkorange: 16747520,\n    darkorchid: 10040012,\n    darkred: 9109504,\n    darksalmon: 15308410,\n    darkseagreen: 9419919,\n    darkslateblue: 4734347,\n    darkslategray: 3100495,\n    darkslategrey: 3100495,\n    darkturquoise: 52945,\n    darkviolet: 9699539,\n    deeppink: 16716947,\n    deepskyblue: 49151,\n    dimgray: 6908265,\n    dimgrey: 6908265,\n    dodgerblue: 2003199,\n    firebrick: 11674146,\n    floralwhite: 16775920,\n    forestgreen: 2263842,\n    fuchsia: 16711935,\n    gainsboro: 14474460,\n    ghostwhite: 16316671,\n    gold: 16766720,\n    goldenrod: 14329120,\n    gray: 8421504,\n    green: 32768,\n    greenyellow: 11403055,\n    grey: 8421504,\n    honeydew: 15794160,\n    hotpink: 16738740,\n    indianred: 13458524,\n    indigo: 4915330,\n    ivory: 16777200,\n    khaki: 15787660,\n    lavender: 15132410,\n    lavenderblush: 16773365,\n    lawngreen: 8190976,\n    lemonchiffon: 16775885,\n    lightblue: 11393254,\n    lightcoral: 15761536,\n    lightcyan: 14745599,\n    lightgoldenrodyellow: 16448210,\n    lightgray: 13882323,\n    lightgreen: 9498256,\n    lightgrey: 13882323,\n    lightpink: 16758465,\n    lightsalmon: 16752762,\n    lightseagreen: 2142890,\n    lightskyblue: 8900346,\n    lightslategray: 7833753,\n    lightslategrey: 7833753,\n    lightsteelblue: 11584734,\n    lightyellow: 16777184,\n    lime: 65280,\n    limegreen: 3329330,\n    linen: 16445670,\n    magenta: 16711935,\n    maroon: 8388608,\n    mediumaquamarine: 6737322,\n    mediumblue: 205,\n    mediumorchid: 12211667,\n    mediumpurple: 9662683,\n    mediumseagreen: 3978097,\n    mediumslateblue: 8087790,\n    mediumspringgreen: 64154,\n    mediumturquoise: 4772300,\n    mediumvioletred: 13047173,\n    midnightblue: 1644912,\n    mintcream: 16121850,\n    mistyrose: 16770273,\n    moccasin: 16770229,\n    navajowhite: 16768685,\n    navy: 128,\n    oldlace: 16643558,\n    olive: 8421376,\n    olivedrab: 7048739,\n    orange: 16753920,\n    orangered: 16729344,\n    orchid: 14315734,\n    palegoldenrod: 15657130,\n    palegreen: 10025880,\n    paleturquoise: 11529966,\n    palevioletred: 14381203,\n    papayawhip: 16773077,\n    peachpuff: 16767673,\n    peru: 13468991,\n    pink: 16761035,\n    plum: 14524637,\n    powderblue: 11591910,\n    purple: 8388736,\n    red: 16711680,\n    rosybrown: 12357519,\n    royalblue: 4286945,\n    saddlebrown: 9127187,\n    salmon: 16416882,\n    sandybrown: 16032864,\n    seagreen: 3050327,\n    seashell: 16774638,\n    sienna: 10506797,\n    silver: 12632256,\n    skyblue: 8900331,\n    slateblue: 6970061,\n    slategray: 7372944,\n    slategrey: 7372944,\n    snow: 16775930,\n    springgreen: 65407,\n    steelblue: 4620980,\n    tan: 13808780,\n    teal: 32896,\n    thistle: 14204888,\n    tomato: 16737095,\n    turquoise: 4251856,\n    violet: 15631086,\n    wheat: 16113331,\n    white: 16777215,\n    whitesmoke: 16119285,\n    yellow: 16776960,\n    yellowgreen: 10145074\n  });\n  d3_rgb_names.forEach(function(key, value) {\n    d3_rgb_names.set(key, d3_rgbNumber(value));\n  });\n  function d3_functor(v) {\n    return typeof v === \"function\" ? v : function() {\n      return v;\n    };\n  }\n  d3.functor = d3_functor;\n  function d3_identity(d) {\n    return d;\n  }\n  d3.xhr = d3_xhrType(d3_identity);\n  function d3_xhrType(response) {\n    return function(url, mimeType, callback) {\n      if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType, \n      mimeType = null;\n      return d3_xhr(url, mimeType, response, callback);\n    };\n  }\n  function d3_xhr(url, mimeType, response, callback) {\n    var xhr = {}, dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"), headers = {}, request = new XMLHttpRequest(), responseType = null;\n    if (d3_window.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n    \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {\n      request.readyState > 3 && respond();\n    };\n    function respond() {\n      var status = request.status, result;\n      if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n        try {\n          result = response.call(xhr, request);\n        } catch (e) {\n          dispatch.error.call(xhr, e);\n          return;\n        }\n        dispatch.load.call(xhr, result);\n      } else {\n        dispatch.error.call(xhr, request);\n      }\n    }\n    request.onprogress = function(event) {\n      var o = d3.event;\n      d3.event = event;\n      try {\n        dispatch.progress.call(xhr, request);\n      } finally {\n        d3.event = o;\n      }\n    };\n    xhr.header = function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers[name];\n      if (value == null) delete headers[name]; else headers[name] = value + \"\";\n      return xhr;\n    };\n    xhr.mimeType = function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return xhr;\n    };\n    xhr.responseType = function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return xhr;\n    };\n    xhr.response = function(value) {\n      response = value;\n      return xhr;\n    };\n    [ \"get\", \"post\" ].forEach(function(method) {\n      xhr[method] = function() {\n        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));\n      };\n    });\n    xhr.send = function(method, data, callback) {\n      if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\n      request.open(method, url, true);\n      if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\n      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);\n      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\n      if (responseType != null) request.responseType = responseType;\n      if (callback != null) xhr.on(\"error\", callback).on(\"load\", function(request) {\n        callback(null, request);\n      });\n      dispatch.beforesend.call(xhr, request);\n      request.send(data == null ? null : data);\n      return xhr;\n    };\n    xhr.abort = function() {\n      request.abort();\n      return xhr;\n    };\n    d3.rebind(xhr, dispatch, \"on\");\n    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\n  }\n  function d3_xhr_fixCallback(callback) {\n    return callback.length === 1 ? function(error, request) {\n      callback(error == null ? request : null);\n    } : callback;\n  }\n  function d3_xhrHasResponse(request) {\n    var type = request.responseType;\n    return type && type !== \"text\" ? request.response : request.responseText;\n  }\n  d3.dsv = function(delimiter, mimeType) {\n    var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"), delimiterCode = delimiter.charCodeAt(0);\n    function dsv(url, row, callback) {\n      if (arguments.length < 3) callback = row, row = null;\n      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\n      xhr.row = function(_) {\n        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\n      };\n      return xhr;\n    }\n    function response(request) {\n      return dsv.parse(request.responseText);\n    }\n    function typedResponse(f) {\n      return function(request) {\n        return dsv.parse(request.responseText, f);\n      };\n    }\n    dsv.parse = function(text, f) {\n      var o;\n      return dsv.parseRows(text, function(row, i) {\n        if (o) return o(row, i - 1);\n        var a = new Function(\"d\", \"return {\" + row.map(function(name, i) {\n          return JSON.stringify(name) + \": d[\" + i + \"]\";\n        }).join(\",\") + \"}\");\n        o = f ? function(row, i) {\n          return f(a(row), i);\n        } : a;\n      });\n    };\n    dsv.parseRows = function(text, f) {\n      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;\n      function token() {\n        if (I >= N) return EOF;\n        if (eol) return eol = false, EOL;\n        var j = I;\n        if (text.charCodeAt(j) === 34) {\n          var i = j;\n          while (i++ < N) {\n            if (text.charCodeAt(i) === 34) {\n              if (text.charCodeAt(i + 1) !== 34) break;\n              ++i;\n            }\n          }\n          I = i + 2;\n          var c = text.charCodeAt(i + 1);\n          if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(i + 2) === 10) ++I;\n          } else if (c === 10) {\n            eol = true;\n          }\n          return text.slice(j + 1, i).replace(/\"\"/g, '\"');\n        }\n        while (I < N) {\n          var c = text.charCodeAt(I++), k = 1;\n          if (c === 10) eol = true; else if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(I) === 10) ++I, ++k;\n          } else if (c !== delimiterCode) continue;\n          return text.slice(j, I - k);\n        }\n        return text.slice(j);\n      }\n      while ((t = token()) !== EOF) {\n        var a = [];\n        while (t !== EOL && t !== EOF) {\n          a.push(t);\n          t = token();\n        }\n        if (f && (a = f(a, n++)) == null) continue;\n        rows.push(a);\n      }\n      return rows;\n    };\n    dsv.format = function(rows) {\n      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\n      var fieldSet = new d3_Set(), fields = [];\n      rows.forEach(function(row) {\n        for (var field in row) {\n          if (!fieldSet.has(field)) {\n            fields.push(fieldSet.add(field));\n          }\n        }\n      });\n      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {\n        return fields.map(function(field) {\n          return formatValue(row[field]);\n        }).join(delimiter);\n      })).join(\"\\n\");\n    };\n    dsv.formatRows = function(rows) {\n      return rows.map(formatRow).join(\"\\n\");\n    };\n    function formatRow(row) {\n      return row.map(formatValue).join(delimiter);\n    }\n    function formatValue(text) {\n      return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\n    }\n    return dsv;\n  };\n  d3.csv = d3.dsv(\",\", \"text/csv\");\n  d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\n  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_active, d3_timer_frame = d3_window[d3_vendorSymbol(d3_window, \"requestAnimationFrame\")] || function(callback) {\n    setTimeout(callback, 17);\n  };\n  d3.timer = function(callback, delay, then) {\n    var n = arguments.length;\n    if (n < 2) delay = 0;\n    if (n < 3) then = Date.now();\n    var time = then + delay, timer = {\n      c: callback,\n      t: time,\n      f: false,\n      n: null\n    };\n    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;\n    d3_timer_queueTail = timer;\n    if (!d3_timer_interval) {\n      d3_timer_timeout = clearTimeout(d3_timer_timeout);\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n  };\n  function d3_timer_step() {\n    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;\n    if (delay > 24) {\n      if (isFinite(delay)) {\n        clearTimeout(d3_timer_timeout);\n        d3_timer_timeout = setTimeout(d3_timer_step, delay);\n      }\n      d3_timer_interval = 0;\n    } else {\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n  }\n  d3.timer.flush = function() {\n    d3_timer_mark();\n    d3_timer_sweep();\n  };\n  function d3_timer_mark() {\n    var now = Date.now();\n    d3_timer_active = d3_timer_queueHead;\n    while (d3_timer_active) {\n      if (now >= d3_timer_active.t) d3_timer_active.f = d3_timer_active.c(now - d3_timer_active.t);\n      d3_timer_active = d3_timer_active.n;\n    }\n    return now;\n  }\n  function d3_timer_sweep() {\n    var t0, t1 = d3_timer_queueHead, time = Infinity;\n    while (t1) {\n      if (t1.f) {\n        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\n      } else {\n        if (t1.t < time) time = t1.t;\n        t1 = (t0 = t1).n;\n      }\n    }\n    d3_timer_queueTail = t0;\n    return time;\n  }\n  function d3_format_precision(x, p) {\n    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\n  }\n  d3.round = function(x, n) {\n    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n  };\n  var d3_formatPrefixes = [ \"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\" ].map(d3_formatPrefix);\n  d3.formatPrefix = function(value, precision) {\n    var i = 0;\n    if (value) {\n      if (value < 0) value *= -1;\n      if (precision) value = d3.round(value, d3_format_precision(value, precision));\n      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));\n    }\n    return d3_formatPrefixes[8 + i / 3];\n  };\n  function d3_formatPrefix(d, i) {\n    var k = Math.pow(10, abs(8 - i) * 3);\n    return {\n      scale: i > 8 ? function(d) {\n        return d / k;\n      } : function(d) {\n        return d * k;\n      },\n      symbol: d\n    };\n  }\n  function d3_locale_numberFormat(locale) {\n    var locale_decimal = locale.decimal, locale_thousands = locale.thousands, locale_grouping = locale.grouping, locale_currency = locale.currency, formatGroup = locale_grouping && locale_thousands ? function(value, width) {\n      var i = value.length, t = [], j = 0, g = locale_grouping[0], length = 0;\n      while (i > 0 && g > 0) {\n        if (length + g + 1 > width) g = Math.max(1, width - length);\n        t.push(value.substring(i -= g, i + g));\n        if ((length += g + 1) > width) break;\n        g = locale_grouping[j = (j + 1) % locale_grouping.length];\n      }\n      return t.reverse().join(locale_thousands);\n    } : d3_identity;\n    return function(specifier) {\n      var match = d3_format_re.exec(specifier), fill = match[1] || \" \", align = match[2] || \">\", sign = match[3] || \"-\", symbol = match[4] || \"\", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, prefix = \"\", suffix = \"\", integer = false, exponent = true;\n      if (precision) precision = +precision.substring(1);\n      if (zfill || fill === \"0\" && align === \"=\") {\n        zfill = fill = \"0\";\n        align = \"=\";\n      }\n      switch (type) {\n       case \"n\":\n        comma = true;\n        type = \"g\";\n        break;\n\n       case \"%\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"f\";\n        break;\n\n       case \"p\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"r\";\n        break;\n\n       case \"b\":\n       case \"o\":\n       case \"x\":\n       case \"X\":\n        if (symbol === \"#\") prefix = \"0\" + type.toLowerCase();\n\n       case \"c\":\n        exponent = false;\n\n       case \"d\":\n        integer = true;\n        precision = 0;\n        break;\n\n       case \"s\":\n        scale = -1;\n        type = \"r\";\n        break;\n      }\n      if (symbol === \"$\") prefix = locale_currency[0], suffix = locale_currency[1];\n      if (type == \"r\" && !precision) type = \"g\";\n      if (precision != null) {\n        if (type == \"g\") precision = Math.max(1, Math.min(21, precision)); else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\n      }\n      type = d3_format_types.get(type) || d3_format_typeDefault;\n      var zcomma = zfill && comma;\n      return function(value) {\n        var fullSuffix = suffix;\n        if (integer && value % 1) return \"\";\n        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign === \"-\" ? \"\" : sign;\n        if (scale < 0) {\n          var unit = d3.formatPrefix(value, precision);\n          value = unit.scale(value);\n          fullSuffix = unit.symbol + suffix;\n        } else {\n          value *= scale;\n        }\n        value = type(value, precision);\n        var i = value.lastIndexOf(\".\"), before, after;\n        if (i < 0) {\n          var j = exponent ? value.lastIndexOf(\"e\") : -1;\n          if (j < 0) before = value, after = \"\"; else before = value.substring(0, j), after = value.substring(j);\n        } else {\n          before = value.substring(0, i);\n          after = locale_decimal + value.substring(i + 1);\n        }\n        if (!zfill && comma) before = formatGroup(before, Infinity);\n        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\n        if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);\n        negative += prefix;\n        value = before + after;\n        return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;\n      };\n    };\n  }\n  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\n  var d3_format_types = d3.map({\n    b: function(x) {\n      return x.toString(2);\n    },\n    c: function(x) {\n      return String.fromCharCode(x);\n    },\n    o: function(x) {\n      return x.toString(8);\n    },\n    x: function(x) {\n      return x.toString(16);\n    },\n    X: function(x) {\n      return x.toString(16).toUpperCase();\n    },\n    g: function(x, p) {\n      return x.toPrecision(p);\n    },\n    e: function(x, p) {\n      return x.toExponential(p);\n    },\n    f: function(x, p) {\n      return x.toFixed(p);\n    },\n    r: function(x, p) {\n      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\n    }\n  });\n  function d3_format_typeDefault(x) {\n    return x + \"\";\n  }\n  var d3_time = d3.time = {}, d3_date = Date;\n  function d3_date_utc() {\n    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\n  }\n  d3_date_utc.prototype = {\n    getDate: function() {\n      return this._.getUTCDate();\n    },\n    getDay: function() {\n      return this._.getUTCDay();\n    },\n    getFullYear: function() {\n      return this._.getUTCFullYear();\n    },\n    getHours: function() {\n      return this._.getUTCHours();\n    },\n    getMilliseconds: function() {\n      return this._.getUTCMilliseconds();\n    },\n    getMinutes: function() {\n      return this._.getUTCMinutes();\n    },\n    getMonth: function() {\n      return this._.getUTCMonth();\n    },\n    getSeconds: function() {\n      return this._.getUTCSeconds();\n    },\n    getTime: function() {\n      return this._.getTime();\n    },\n    getTimezoneOffset: function() {\n      return 0;\n    },\n    valueOf: function() {\n      return this._.valueOf();\n    },\n    setDate: function() {\n      d3_time_prototype.setUTCDate.apply(this._, arguments);\n    },\n    setDay: function() {\n      d3_time_prototype.setUTCDay.apply(this._, arguments);\n    },\n    setFullYear: function() {\n      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\n    },\n    setHours: function() {\n      d3_time_prototype.setUTCHours.apply(this._, arguments);\n    },\n    setMilliseconds: function() {\n      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\n    },\n    setMinutes: function() {\n      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\n    },\n    setMonth: function() {\n      d3_time_prototype.setUTCMonth.apply(this._, arguments);\n    },\n    setSeconds: function() {\n      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\n    },\n    setTime: function() {\n      d3_time_prototype.setTime.apply(this._, arguments);\n    }\n  };\n  var d3_time_prototype = Date.prototype;\n  function d3_time_interval(local, step, number) {\n    function round(date) {\n      var d0 = local(date), d1 = offset(d0, 1);\n      return date - d0 < d1 - date ? d0 : d1;\n    }\n    function ceil(date) {\n      step(date = local(new d3_date(date - 1)), 1);\n      return date;\n    }\n    function offset(date, k) {\n      step(date = new d3_date(+date), k);\n      return date;\n    }\n    function range(t0, t1, dt) {\n      var time = ceil(t0), times = [];\n      if (dt > 1) {\n        while (time < t1) {\n          if (!(number(time) % dt)) times.push(new Date(+time));\n          step(time, 1);\n        }\n      } else {\n        while (time < t1) times.push(new Date(+time)), step(time, 1);\n      }\n      return times;\n    }\n    function range_utc(t0, t1, dt) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = t0;\n        return range(utc, t1, dt);\n      } finally {\n        d3_date = Date;\n      }\n    }\n    local.floor = local;\n    local.round = round;\n    local.ceil = ceil;\n    local.offset = offset;\n    local.range = range;\n    var utc = local.utc = d3_time_interval_utc(local);\n    utc.floor = utc;\n    utc.round = d3_time_interval_utc(round);\n    utc.ceil = d3_time_interval_utc(ceil);\n    utc.offset = d3_time_interval_utc(offset);\n    utc.range = range_utc;\n    return local;\n  }\n  function d3_time_interval_utc(method) {\n    return function(date, k) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = date;\n        return method(utc, k)._;\n      } finally {\n        d3_date = Date;\n      }\n    };\n  }\n  d3_time.year = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setMonth(0, 1);\n    return date;\n  }, function(date, offset) {\n    date.setFullYear(date.getFullYear() + offset);\n  }, function(date) {\n    return date.getFullYear();\n  });\n  d3_time.years = d3_time.year.range;\n  d3_time.years.utc = d3_time.year.utc.range;\n  d3_time.day = d3_time_interval(function(date) {\n    var day = new d3_date(2e3, 0);\n    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n    return day;\n  }, function(date, offset) {\n    date.setDate(date.getDate() + offset);\n  }, function(date) {\n    return date.getDate() - 1;\n  });\n  d3_time.days = d3_time.day.range;\n  d3_time.days.utc = d3_time.day.utc.range;\n  d3_time.dayOfYear = function(date) {\n    var year = d3_time.year(date);\n    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\n  };\n  [ \"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\" ].forEach(function(day, i) {\n    i = 7 - i;\n    var interval = d3_time[day] = d3_time_interval(function(date) {\n      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\n      return date;\n    }, function(date, offset) {\n      date.setDate(date.getDate() + Math.floor(offset) * 7);\n    }, function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\n    });\n    d3_time[day + \"s\"] = interval.range;\n    d3_time[day + \"s\"].utc = interval.utc.range;\n    d3_time[day + \"OfYear\"] = function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\n    };\n  });\n  d3_time.week = d3_time.sunday;\n  d3_time.weeks = d3_time.sunday.range;\n  d3_time.weeks.utc = d3_time.sunday.utc.range;\n  d3_time.weekOfYear = d3_time.sundayOfYear;\n  function d3_locale_timeFormat(locale) {\n    var locale_dateTime = locale.dateTime, locale_date = locale.date, locale_time = locale.time, locale_periods = locale.periods, locale_days = locale.days, locale_shortDays = locale.shortDays, locale_months = locale.months, locale_shortMonths = locale.shortMonths;\n    function d3_time_format(template) {\n      var n = template.length;\n      function format(date) {\n        var string = [], i = -1, j = 0, c, p, f;\n        while (++i < n) {\n          if (template.charCodeAt(i) === 37) {\n            string.push(template.slice(j, i));\n            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\n            if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\n            string.push(c);\n            j = i + 1;\n          }\n        }\n        string.push(template.slice(j, i));\n        return string.join(\"\");\n      }\n      format.parse = function(string) {\n        var d = {\n          y: 1900,\n          m: 0,\n          d: 1,\n          H: 0,\n          M: 0,\n          S: 0,\n          L: 0,\n          Z: null\n        }, i = d3_time_parse(d, template, string, 0);\n        if (i != string.length) return null;\n        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n        var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();\n        if (\"j\" in d) date.setFullYear(d.y, 0, d.j); else if (\"w\" in d && (\"W\" in d || \"U\" in d)) {\n          date.setFullYear(d.y, 0, 1);\n          date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\n        } else date.setFullYear(d.y, d.m, d.d);\n        date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);\n        return localZ ? date._ : date;\n      };\n      format.toString = function() {\n        return template;\n      };\n      return format;\n    }\n    function d3_time_parse(date, template, string, j) {\n      var c, p, t, i = 0, n = template.length, m = string.length;\n      while (i < n) {\n        if (j >= m) return -1;\n        c = template.charCodeAt(i++);\n        if (c === 37) {\n          t = template.charAt(i++);\n          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\n          if (!p || (j = p(date, string, j)) < 0) return -1;\n        } else if (c != string.charCodeAt(j++)) {\n          return -1;\n        }\n      }\n      return j;\n    }\n    d3_time_format.utc = function(template) {\n      var local = d3_time_format(template);\n      function format(date) {\n        try {\n          d3_date = d3_date_utc;\n          var utc = new d3_date();\n          utc._ = date;\n          return local(utc);\n        } finally {\n          d3_date = Date;\n        }\n      }\n      format.parse = function(string) {\n        try {\n          d3_date = d3_date_utc;\n          var date = local.parse(string);\n          return date && date._;\n        } finally {\n          d3_date = Date;\n        }\n      };\n      format.toString = local.toString;\n      return format;\n    };\n    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;\n    var d3_time_periodLookup = d3.map(), d3_time_dayRe = d3_time_formatRe(locale_days), d3_time_dayLookup = d3_time_formatLookup(locale_days), d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays), d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays), d3_time_monthRe = d3_time_formatRe(locale_months), d3_time_monthLookup = d3_time_formatLookup(locale_months), d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths), d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);\n    locale_periods.forEach(function(p, i) {\n      d3_time_periodLookup.set(p.toLowerCase(), i);\n    });\n    var d3_time_formats = {\n      a: function(d) {\n        return locale_shortDays[d.getDay()];\n      },\n      A: function(d) {\n        return locale_days[d.getDay()];\n      },\n      b: function(d) {\n        return locale_shortMonths[d.getMonth()];\n      },\n      B: function(d) {\n        return locale_months[d.getMonth()];\n      },\n      c: d3_time_format(locale_dateTime),\n      d: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      e: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      H: function(d, p) {\n        return d3_time_formatPad(d.getHours(), p, 2);\n      },\n      I: function(d, p) {\n        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\n      },\n      j: function(d, p) {\n        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\n      },\n      L: function(d, p) {\n        return d3_time_formatPad(d.getMilliseconds(), p, 3);\n      },\n      m: function(d, p) {\n        return d3_time_formatPad(d.getMonth() + 1, p, 2);\n      },\n      M: function(d, p) {\n        return d3_time_formatPad(d.getMinutes(), p, 2);\n      },\n      p: function(d) {\n        return locale_periods[+(d.getHours() >= 12)];\n      },\n      S: function(d, p) {\n        return d3_time_formatPad(d.getSeconds(), p, 2);\n      },\n      U: function(d, p) {\n        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\n      },\n      w: function(d) {\n        return d.getDay();\n      },\n      W: function(d, p) {\n        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\n      },\n      x: d3_time_format(locale_date),\n      X: d3_time_format(locale_time),\n      y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 100, p, 2);\n      },\n      Y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\n      },\n      Z: d3_time_zone,\n      \"%\": function() {\n        return \"%\";\n      }\n    };\n    var d3_time_parsers = {\n      a: d3_time_parseWeekdayAbbrev,\n      A: d3_time_parseWeekday,\n      b: d3_time_parseMonthAbbrev,\n      B: d3_time_parseMonth,\n      c: d3_time_parseLocaleFull,\n      d: d3_time_parseDay,\n      e: d3_time_parseDay,\n      H: d3_time_parseHour24,\n      I: d3_time_parseHour24,\n      j: d3_time_parseDayOfYear,\n      L: d3_time_parseMilliseconds,\n      m: d3_time_parseMonthNumber,\n      M: d3_time_parseMinutes,\n      p: d3_time_parseAmPm,\n      S: d3_time_parseSeconds,\n      U: d3_time_parseWeekNumberSunday,\n      w: d3_time_parseWeekdayNumber,\n      W: d3_time_parseWeekNumberMonday,\n      x: d3_time_parseLocaleDate,\n      X: d3_time_parseLocaleTime,\n      y: d3_time_parseYear,\n      Y: d3_time_parseFullYear,\n      Z: d3_time_parseZone,\n      \"%\": d3_time_parseLiteralPercent\n    };\n    function d3_time_parseWeekdayAbbrev(date, string, i) {\n      d3_time_dayAbbrevRe.lastIndex = 0;\n      var n = d3_time_dayAbbrevRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseWeekday(date, string, i) {\n      d3_time_dayRe.lastIndex = 0;\n      var n = d3_time_dayRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonthAbbrev(date, string, i) {\n      d3_time_monthAbbrevRe.lastIndex = 0;\n      var n = d3_time_monthAbbrevRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonth(date, string, i) {\n      d3_time_monthRe.lastIndex = 0;\n      var n = d3_time_monthRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseLocaleFull(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\n    }\n    function d3_time_parseLocaleDate(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\n    }\n    function d3_time_parseLocaleTime(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\n    }\n    function d3_time_parseAmPm(date, string, i) {\n      var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());\n      return n == null ? -1 : (date.p = n, i);\n    }\n    return d3_time_format;\n  }\n  var d3_time_formatPads = {\n    \"-\": \"\",\n    _: \" \",\n    \"0\": \"0\"\n  }, d3_time_numberRe = /^\\s*\\d+/, d3_time_percentRe = /^%/;\n  function d3_time_formatPad(value, fill, width) {\n    var sign = value < 0 ? \"-\" : \"\", string = (sign ? -value : value) + \"\", length = string.length;\n    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n  }\n  function d3_time_formatRe(names) {\n    return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\n  }\n  function d3_time_formatLookup(names) {\n    var map = new d3_Map(), i = -1, n = names.length;\n    while (++i < n) map.set(names[i].toLowerCase(), i);\n    return map;\n  }\n  function d3_time_parseWeekdayNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 1));\n    return n ? (date.w = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberSunday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.U = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberMonday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.W = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseFullYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 4));\n    return n ? (date.y = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\n  }\n  function d3_time_parseZone(date, string, i) {\n    return /^[+-]\\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, \n    i + 5) : -1;\n  }\n  function d3_time_expandYear(d) {\n    return d + (d > 68 ? 1900 : 2e3);\n  }\n  function d3_time_parseMonthNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\n  }\n  function d3_time_parseDay(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.d = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseDayOfYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.j = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseHour24(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.H = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMinutes(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.M = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseSeconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.S = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMilliseconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.L = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_zone(d) {\n    var z = d.getTimezoneOffset(), zs = z > 0 ? \"-\" : \"+\", zh = abs(z) / 60 | 0, zm = abs(z) % 60;\n    return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\n  }\n  function d3_time_parseLiteralPercent(date, string, i) {\n    d3_time_percentRe.lastIndex = 0;\n    var n = d3_time_percentRe.exec(string.slice(i, i + 1));\n    return n ? i + n[0].length : -1;\n  }\n  function d3_time_formatMulti(formats) {\n    var n = formats.length, i = -1;\n    while (++i < n) formats[i][0] = this(formats[i][0]);\n    return function(date) {\n      var i = 0, f = formats[i];\n      while (!f[1](date)) f = formats[++i];\n      return f[0](date);\n    };\n  }\n  d3.locale = function(locale) {\n    return {\n      numberFormat: d3_locale_numberFormat(locale),\n      timeFormat: d3_locale_timeFormat(locale)\n    };\n  };\n  var d3_locale_enUS = d3.locale({\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [ 3 ],\n    currency: [ \"$\", \"\" ],\n    dateTime: \"%a %b %e %X %Y\",\n    date: \"%m/%d/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [ \"AM\", \"PM\" ],\n    days: [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ],\n    shortDays: [ \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\" ],\n    months: [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ],\n    shortMonths: [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ]\n  });\n  d3.format = d3_locale_enUS.numberFormat;\n  d3.geo = {};\n  function d3_adder() {}\n  d3_adder.prototype = {\n    s: 0,\n    t: 0,\n    add: function(y) {\n      d3_adderSum(y, this.t, d3_adderTemp);\n      d3_adderSum(d3_adderTemp.s, this.s, this);\n      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;\n    },\n    reset: function() {\n      this.s = this.t = 0;\n    },\n    valueOf: function() {\n      return this.s;\n    }\n  };\n  var d3_adderTemp = new d3_adder();\n  function d3_adderSum(a, b, o) {\n    var x = o.s = a + b, bv = x - a, av = x - bv;\n    o.t = a - av + (b - bv);\n  }\n  d3.geo.stream = function(object, listener) {\n    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\n      d3_geo_streamObjectType[object.type](object, listener);\n    } else {\n      d3_geo_streamGeometry(object, listener);\n    }\n  };\n  function d3_geo_streamGeometry(geometry, listener) {\n    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\n      d3_geo_streamGeometryType[geometry.type](geometry, listener);\n    }\n  }\n  var d3_geo_streamObjectType = {\n    Feature: function(feature, listener) {\n      d3_geo_streamGeometry(feature.geometry, listener);\n    },\n    FeatureCollection: function(object, listener) {\n      var features = object.features, i = -1, n = features.length;\n      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);\n    }\n  };\n  var d3_geo_streamGeometryType = {\n    Sphere: function(object, listener) {\n      listener.sphere();\n    },\n    Point: function(object, listener) {\n      object = object.coordinates;\n      listener.point(object[0], object[1], object[2]);\n    },\n    MultiPoint: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);\n    },\n    LineString: function(object, listener) {\n      d3_geo_streamLine(object.coordinates, listener, 0);\n    },\n    MultiLineString: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);\n    },\n    Polygon: function(object, listener) {\n      d3_geo_streamPolygon(object.coordinates, listener);\n    },\n    MultiPolygon: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);\n    },\n    GeometryCollection: function(object, listener) {\n      var geometries = object.geometries, i = -1, n = geometries.length;\n      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);\n    }\n  };\n  function d3_geo_streamLine(coordinates, listener, closed) {\n    var i = -1, n = coordinates.length - closed, coordinate;\n    listener.lineStart();\n    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\n    listener.lineEnd();\n  }\n  function d3_geo_streamPolygon(coordinates, listener) {\n    var i = -1, n = coordinates.length;\n    listener.polygonStart();\n    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);\n    listener.polygonEnd();\n  }\n  d3.geo.area = function(object) {\n    d3_geo_areaSum = 0;\n    d3.geo.stream(object, d3_geo_area);\n    return d3_geo_areaSum;\n  };\n  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();\n  var d3_geo_area = {\n    sphere: function() {\n      d3_geo_areaSum += 4 * π;\n    },\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_areaRingSum.reset();\n      d3_geo_area.lineStart = d3_geo_areaRingStart;\n    },\n    polygonEnd: function() {\n      var area = 2 * d3_geo_areaRingSum;\n      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\n      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\n    }\n  };\n  function d3_geo_areaRingStart() {\n    var λ00, φ00, λ0, cosφ0, sinφ0;\n    d3_geo_area.point = function(λ, φ) {\n      d3_geo_area.point = nextPoint;\n      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), \n      sinφ0 = Math.sin(φ);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      φ = φ * d3_radians / 2 + π / 4;\n      var dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(adλ), v = k * sdλ * Math.sin(adλ);\n      d3_geo_areaRingSum.add(Math.atan2(v, u));\n      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n    }\n    d3_geo_area.lineEnd = function() {\n      nextPoint(λ00, φ00);\n    };\n  }\n  function d3_geo_cartesian(spherical) {\n    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);\n    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];\n  }\n  function d3_geo_cartesianDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n  }\n  function d3_geo_cartesianCross(a, b) {\n    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];\n  }\n  function d3_geo_cartesianAdd(a, b) {\n    a[0] += b[0];\n    a[1] += b[1];\n    a[2] += b[2];\n  }\n  function d3_geo_cartesianScale(vector, k) {\n    return [ vector[0] * k, vector[1] * k, vector[2] * k ];\n  }\n  function d3_geo_cartesianNormalize(d) {\n    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n    d[0] /= l;\n    d[1] /= l;\n    d[2] /= l;\n  }\n  function d3_geo_spherical(cartesian) {\n    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];\n  }\n  function d3_geo_sphericalEqual(a, b) {\n    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\n  }\n  d3.geo.bounds = function() {\n    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\n    var bound = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        bound.point = ringPoint;\n        bound.lineStart = ringStart;\n        bound.lineEnd = ringEnd;\n        dλSum = 0;\n        d3_geo_area.polygonStart();\n      },\n      polygonEnd: function() {\n        d3_geo_area.polygonEnd();\n        bound.point = point;\n        bound.lineStart = lineStart;\n        bound.lineEnd = lineEnd;\n        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;\n        range[0] = λ0, range[1] = λ1;\n      }\n    };\n    function point(λ, φ) {\n      ranges.push(range = [ λ0 = λ, λ1 = λ ]);\n      if (φ < φ0) φ0 = φ;\n      if (φ > φ1) φ1 = φ;\n    }\n    function linePoint(λ, φ) {\n      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);\n      if (p0) {\n        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);\n        d3_geo_cartesianNormalize(inflection);\n        inflection = d3_geo_spherical(inflection);\n        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;\n        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = inflection[1] * d3_degrees;\n          if (φi > φ1) φ1 = φi;\n        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = -inflection[1] * d3_degrees;\n          if (φi < φ0) φ0 = φi;\n        } else {\n          if (φ < φ0) φ0 = φ;\n          if (φ > φ1) φ1 = φ;\n        }\n        if (antimeridian) {\n          if (λ < λ_) {\n            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n          } else {\n            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n          }\n        } else {\n          if (λ1 >= λ0) {\n            if (λ < λ0) λ0 = λ;\n            if (λ > λ1) λ1 = λ;\n          } else {\n            if (λ > λ_) {\n              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n            } else {\n              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n            }\n          }\n        }\n      } else {\n        point(λ, φ);\n      }\n      p0 = p, λ_ = λ;\n    }\n    function lineStart() {\n      bound.point = linePoint;\n    }\n    function lineEnd() {\n      range[0] = λ0, range[1] = λ1;\n      bound.point = point;\n      p0 = null;\n    }\n    function ringPoint(λ, φ) {\n      if (p0) {\n        var dλ = λ - λ_;\n        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\n      } else λ__ = λ, φ__ = φ;\n      d3_geo_area.point(λ, φ);\n      linePoint(λ, φ);\n    }\n    function ringStart() {\n      d3_geo_area.lineStart();\n    }\n    function ringEnd() {\n      ringPoint(λ__, φ__);\n      d3_geo_area.lineEnd();\n      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\n      range[0] = λ0, range[1] = λ1;\n      p0 = null;\n    }\n    function angle(λ0, λ1) {\n      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\n    }\n    function compareRanges(a, b) {\n      return a[0] - b[0];\n    }\n    function withinRange(x, range) {\n      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n    }\n    return function(feature) {\n      φ1 = λ1 = -(λ0 = φ0 = Infinity);\n      ranges = [];\n      d3.geo.stream(feature, bound);\n      var n = ranges.length;\n      if (n) {\n        ranges.sort(compareRanges);\n        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {\n          b = ranges[i];\n          if (withinRange(b[0], a) || withinRange(b[1], a)) {\n            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n          } else {\n            merged.push(a = b);\n          }\n        }\n        var best = -Infinity, dλ;\n        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\n          b = merged[i];\n          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\n        }\n      }\n      ranges = range = null;\n      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];\n    };\n  }();\n  d3.geo.centroid = function(object) {\n    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n    d3.geo.stream(object, d3_geo_centroid);\n    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;\n    if (m < ε2) {\n      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\n      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\n      m = x * x + y * y + z * z;\n      if (m < ε2) return [ NaN, NaN ];\n    }\n    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];\n  };\n  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\n  var d3_geo_centroid = {\n    sphere: d3_noop,\n    point: d3_geo_centroidPoint,\n    lineStart: d3_geo_centroidLineStart,\n    lineEnd: d3_geo_centroidLineEnd,\n    polygonStart: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\n    }\n  };\n  function d3_geo_centroidPoint(λ, φ) {\n    λ *= d3_radians;\n    var cosφ = Math.cos(φ *= d3_radians);\n    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\n  }\n  function d3_geo_centroidPointXYZ(x, y, z) {\n    ++d3_geo_centroidW0;\n    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\n    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\n    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\n  }\n  function d3_geo_centroidLineStart() {\n    var x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroid.point = nextPoint;\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_centroidLineEnd() {\n    d3_geo_centroid.point = d3_geo_centroidPoint;\n  }\n  function d3_geo_centroidRingStart() {\n    var λ00, φ00, x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ00 = λ, φ00 = φ;\n      d3_geo_centroid.point = nextPoint;\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    d3_geo_centroid.lineEnd = function() {\n      nextPoint(λ00, φ00);\n      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\n      d3_geo_centroid.point = d3_geo_centroidPoint;\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);\n      d3_geo_centroidX2 += v * cx;\n      d3_geo_centroidY2 += v * cy;\n      d3_geo_centroidZ2 += v * cz;\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_true() {\n    return true;\n  }\n  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\n    var subject = [], clip = [];\n    segments.forEach(function(segment) {\n      if ((n = segment.length - 1) <= 0) return;\n      var n, p0 = segment[0], p1 = segment[n];\n      if (d3_geo_sphericalEqual(p0, p1)) {\n        listener.lineStart();\n        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);\n        listener.lineEnd();\n        return;\n      }\n      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\n      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n    });\n    clip.sort(compare);\n    d3_geo_clipPolygonLinkCircular(subject);\n    d3_geo_clipPolygonLinkCircular(clip);\n    if (!subject.length) return;\n    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\n      clip[i].e = entry = !entry;\n    }\n    var start = subject[0], points, point;\n    while (1) {\n      var current = start, isSubject = true;\n      while (current.v) if ((current = current.n) === start) return;\n      points = current.z;\n      listener.lineStart();\n      do {\n        current.v = current.o.v = true;\n        if (current.e) {\n          if (isSubject) {\n            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.n.x, 1, listener);\n          }\n          current = current.n;\n        } else {\n          if (isSubject) {\n            points = current.p.z;\n            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.p.x, -1, listener);\n          }\n          current = current.p;\n        }\n        current = current.o;\n        points = current.z;\n        isSubject = !isSubject;\n      } while (!current.v);\n      listener.lineEnd();\n    }\n  }\n  function d3_geo_clipPolygonLinkCircular(array) {\n    if (!(n = array.length)) return;\n    var n, i = 0, a = array[0], b;\n    while (++i < n) {\n      a.n = b = array[i];\n      b.p = a;\n      a = b;\n    }\n    a.n = b = array[0];\n    b.p = a;\n  }\n  function d3_geo_clipPolygonIntersection(point, points, other, entry) {\n    this.x = point;\n    this.z = points;\n    this.o = other;\n    this.e = entry;\n    this.v = false;\n    this.n = this.p = null;\n  }\n  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\n    return function(rotate, listener) {\n      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          clip.point = pointRing;\n          clip.lineStart = ringStart;\n          clip.lineEnd = ringEnd;\n          segments = [];\n          polygon = [];\n        },\n        polygonEnd: function() {\n          clip.point = point;\n          clip.lineStart = lineStart;\n          clip.lineEnd = lineEnd;\n          segments = d3.merge(segments);\n          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\n          if (segments.length) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\n          } else if (clipStartInside) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            interpolate(null, null, 1, listener);\n            listener.lineEnd();\n          }\n          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;\n          segments = polygon = null;\n        },\n        sphere: function() {\n          listener.polygonStart();\n          listener.lineStart();\n          interpolate(null, null, 1, listener);\n          listener.lineEnd();\n          listener.polygonEnd();\n        }\n      };\n      function point(λ, φ) {\n        var point = rotate(λ, φ);\n        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\n      }\n      function pointLine(λ, φ) {\n        var point = rotate(λ, φ);\n        line.point(point[0], point[1]);\n      }\n      function lineStart() {\n        clip.point = pointLine;\n        line.lineStart();\n      }\n      function lineEnd() {\n        clip.point = point;\n        line.lineEnd();\n      }\n      var segments;\n      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygonStarted = false, polygon, ring;\n      function pointRing(λ, φ) {\n        ring.push([ λ, φ ]);\n        var point = rotate(λ, φ);\n        ringListener.point(point[0], point[1]);\n      }\n      function ringStart() {\n        ringListener.lineStart();\n        ring = [];\n      }\n      function ringEnd() {\n        pointRing(ring[0][0], ring[0][1]);\n        ringListener.lineEnd();\n        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;\n        ring.pop();\n        polygon.push(ring);\n        ring = null;\n        if (!n) return;\n        if (clean & 1) {\n          segment = ringSegments[0];\n          var n = segment.length - 1, i = -1, point;\n          if (n > 0) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            while (++i < n) listener.point((point = segment[i])[0], point[1]);\n            listener.lineEnd();\n          }\n          return;\n        }\n        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\n      }\n      return clip;\n    };\n  }\n  function d3_geo_clipSegmentLength1(segment) {\n    return segment.length > 1;\n  }\n  function d3_geo_clipBufferListener() {\n    var lines = [], line;\n    return {\n      lineStart: function() {\n        lines.push(line = []);\n      },\n      point: function(λ, φ) {\n        line.push([ λ, φ ]);\n      },\n      lineEnd: d3_noop,\n      buffer: function() {\n        var buffer = lines;\n        lines = [];\n        line = null;\n        return buffer;\n      },\n      rejoin: function() {\n        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n      }\n    };\n  }\n  function d3_geo_clipSort(a, b) {\n    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\n  }\n  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);\n  function d3_geo_clipAntimeridianLine(listener) {\n    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;\n    return {\n      lineStart: function() {\n        listener.lineStart();\n        clean = 1;\n      },\n      point: function(λ1, φ1) {\n        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);\n        if (abs(dλ - π) < ε) {\n          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          listener.point(λ1, φ0);\n          clean = 0;\n        } else if (sλ0 !== sλ1 && dλ >= π) {\n          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\n          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\n          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          clean = 0;\n        }\n        listener.point(λ0 = λ1, φ0 = φ1);\n        sλ0 = sλ1;\n      },\n      lineEnd: function() {\n        listener.lineEnd();\n        λ0 = φ0 = NaN;\n      },\n      clean: function() {\n        return 2 - clean;\n      }\n    };\n  }\n  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\n    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);\n    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\n  }\n  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\n    var φ;\n    if (from == null) {\n      φ = direction * halfπ;\n      listener.point(-π, φ);\n      listener.point(0, φ);\n      listener.point(π, φ);\n      listener.point(π, 0);\n      listener.point(π, -φ);\n      listener.point(0, -φ);\n      listener.point(-π, -φ);\n      listener.point(-π, 0);\n      listener.point(-π, φ);\n    } else if (abs(from[0] - to[0]) > ε) {\n      var s = from[0] < to[0] ? π : -π;\n      φ = direction * s / 2;\n      listener.point(-s, φ);\n      listener.point(0, φ);\n      listener.point(s, φ);\n    } else {\n      listener.point(to[0], to[1]);\n    }\n  }\n  function d3_geo_pointInPolygon(point, polygon) {\n    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;\n    d3_geo_areaRingSum.reset();\n    for (var i = 0, n = polygon.length; i < n; ++i) {\n      var ring = polygon[i], m = ring.length;\n      if (!m) continue;\n      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;\n      while (true) {\n        if (j === m) j = 0;\n        point = ring[j];\n        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, antimeridian = adλ > π, k = sinφ0 * sinφ;\n        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));\n        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;\n        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\n          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\n          d3_geo_cartesianNormalize(arc);\n          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\n          d3_geo_cartesianNormalize(intersection);\n          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\n          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\n            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\n          }\n        }\n        if (!j++) break;\n        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\n      }\n    }\n    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < 0) ^ winding & 1;\n  }\n  function d3_geo_clipCircle(radius) {\n    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\n    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);\n    function visible(λ, φ) {\n      return Math.cos(λ) * Math.cos(φ) > cr;\n    }\n    function clipLine(listener) {\n      var point0, c0, v0, v00, clean;\n      return {\n        lineStart: function() {\n          v00 = v0 = false;\n          clean = 1;\n        },\n        point: function(λ, φ) {\n          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\n          if (!point0 && (v00 = v0 = v)) listener.lineStart();\n          if (v !== v0) {\n            point2 = intersect(point0, point1);\n            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\n              point1[0] += ε;\n              point1[1] += ε;\n              v = visible(point1[0], point1[1]);\n            }\n          }\n          if (v !== v0) {\n            clean = 0;\n            if (v) {\n              listener.lineStart();\n              point2 = intersect(point1, point0);\n              listener.point(point2[0], point2[1]);\n            } else {\n              point2 = intersect(point0, point1);\n              listener.point(point2[0], point2[1]);\n              listener.lineEnd();\n            }\n            point0 = point2;\n          } else if (notHemisphere && point0 && smallRadius ^ v) {\n            var t;\n            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n              clean = 0;\n              if (smallRadius) {\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n              } else {\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n              }\n            }\n          }\n          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\n            listener.point(point1[0], point1[1]);\n          }\n          point0 = point1, v0 = v, c0 = c;\n        },\n        lineEnd: function() {\n          if (v0) listener.lineEnd();\n          point0 = null;\n        },\n        clean: function() {\n          return clean | (v00 && v0) << 1;\n        }\n      };\n    }\n    function intersect(a, b, two) {\n      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);\n      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;\n      if (!determinant) return !two && a;\n      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);\n      d3_geo_cartesianAdd(A, B);\n      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\n      if (t2 < 0) return;\n      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);\n      d3_geo_cartesianAdd(q, A);\n      q = d3_geo_spherical(q);\n      if (!two) return q;\n      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;\n      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\n      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;\n      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\n      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\n        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\n        d3_geo_cartesianAdd(q1, A);\n        return [ q, d3_geo_spherical(q1) ];\n      }\n    }\n    function code(λ, φ) {\n      var r = smallRadius ? radius : π - radius, code = 0;\n      if (λ < -r) code |= 1; else if (λ > r) code |= 2;\n      if (φ < -r) code |= 4; else if (φ > r) code |= 8;\n      return code;\n    }\n  }\n  function d3_geom_clipLine(x0, y0, x1, y1) {\n    return function(line) {\n      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;\n      r = x0 - ax;\n      if (!dx && r > 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dx > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = x1 - ax;\n      if (!dx && r < 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dx > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      r = y0 - ay;\n      if (!dy && r > 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dy > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = y1 - ay;\n      if (!dy && r < 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dy > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      if (t0 > 0) line.a = {\n        x: ax + t0 * dx,\n        y: ay + t0 * dy\n      };\n      if (t1 < 1) line.b = {\n        x: ax + t1 * dx,\n        y: ay + t1 * dy\n      };\n      return line;\n    };\n  }\n  var d3_geo_clipExtentMAX = 1e9;\n  d3.geo.clipExtent = function() {\n    var x0, y0, x1, y1, stream, clip, clipExtent = {\n      stream: function(output) {\n        if (stream) stream.valid = false;\n        stream = clip(output);\n        stream.valid = true;\n        return stream;\n      },\n      extent: function(_) {\n        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\n        if (stream) stream.valid = false, stream = null;\n        return clipExtent;\n      }\n    };\n    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);\n  };\n  function d3_geo_clipExtent(x0, y0, x1, y1) {\n    return function(listener) {\n      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          listener = bufferListener;\n          segments = [];\n          polygon = [];\n          clean = true;\n        },\n        polygonEnd: function() {\n          listener = listener_;\n          segments = d3.merge(segments);\n          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;\n          if (inside || visible) {\n            listener.polygonStart();\n            if (inside) {\n              listener.lineStart();\n              interpolate(null, null, 1, listener);\n              listener.lineEnd();\n            }\n            if (visible) {\n              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\n            }\n            listener.polygonEnd();\n          }\n          segments = polygon = ring = null;\n        }\n      };\n      function insidePolygon(p) {\n        var wn = 0, n = polygon.length, y = p[1];\n        for (var i = 0; i < n; ++i) {\n          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\n            b = v[j];\n            if (a[1] <= y) {\n              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;\n            } else {\n              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;\n            }\n            a = b;\n          }\n        }\n        return wn !== 0;\n      }\n      function interpolate(from, to, direction, listener) {\n        var a = 0, a1 = 0;\n        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\n          do {\n            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n          } while ((a = (a + direction + 4) % 4) !== a1);\n        } else {\n          listener.point(to[0], to[1]);\n        }\n      }\n      function pointVisible(x, y) {\n        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n      }\n      function point(x, y) {\n        if (pointVisible(x, y)) listener.point(x, y);\n      }\n      var x__, y__, v__, x_, y_, v_, first, clean;\n      function lineStart() {\n        clip.point = linePoint;\n        if (polygon) polygon.push(ring = []);\n        first = true;\n        v_ = false;\n        x_ = y_ = NaN;\n      }\n      function lineEnd() {\n        if (segments) {\n          linePoint(x__, y__);\n          if (v__ && v_) bufferListener.rejoin();\n          segments.push(bufferListener.buffer());\n        }\n        clip.point = point;\n        if (v_) listener.lineEnd();\n      }\n      function linePoint(x, y) {\n        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\n        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\n        var v = pointVisible(x, y);\n        if (polygon) ring.push([ x, y ]);\n        if (first) {\n          x__ = x, y__ = y, v__ = v;\n          first = false;\n          if (v) {\n            listener.lineStart();\n            listener.point(x, y);\n          }\n        } else {\n          if (v && v_) listener.point(x, y); else {\n            var l = {\n              a: {\n                x: x_,\n                y: y_\n              },\n              b: {\n                x: x,\n                y: y\n              }\n            };\n            if (clipLine(l)) {\n              if (!v_) {\n                listener.lineStart();\n                listener.point(l.a.x, l.a.y);\n              }\n              listener.point(l.b.x, l.b.y);\n              if (!v) listener.lineEnd();\n              clean = false;\n            } else if (v) {\n              listener.lineStart();\n              listener.point(x, y);\n              clean = false;\n            }\n          }\n        }\n        x_ = x, y_ = y, v_ = v;\n      }\n      return clip;\n    };\n    function corner(p, direction) {\n      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\n    }\n    function compare(a, b) {\n      return comparePoints(a.x, b.x);\n    }\n    function comparePoints(a, b) {\n      var ca = corner(a, 1), cb = corner(b, 1);\n      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n    }\n  }\n  function d3_geo_compose(a, b) {\n    function compose(x, y) {\n      return x = a(x, y), b(x[0], x[1]);\n    }\n    if (a.invert && b.invert) compose.invert = function(x, y) {\n      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n    };\n    return compose;\n  }\n  function d3_geo_conic(projectAt) {\n    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);\n    p.parallels = function(_) {\n      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];\n      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\n    };\n    return p;\n  }\n  function d3_geo_conicEqualArea(φ0, φ1) {\n    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;\n    function forward(λ, φ) {\n      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\n      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = ρ0 - y;\n      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEqualArea = function() {\n    return d3_geo_conic(d3_geo_conicEqualArea);\n  }).raw = d3_geo_conicEqualArea;\n  d3.geo.albers = function() {\n    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);\n  };\n  d3.geo.albersUsa = function() {\n    var lower48 = d3.geo.albers();\n    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);\n    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);\n    var point, pointStream = {\n      point: function(x, y) {\n        point = [ x, y ];\n      }\n    }, lower48Point, alaskaPoint, hawaiiPoint;\n    function albersUsa(coordinates) {\n      var x = coordinates[0], y = coordinates[1];\n      point = null;\n      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);\n      return point;\n    }\n    albersUsa.invert = function(coordinates) {\n      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;\n      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\n    };\n    albersUsa.stream = function(stream) {\n      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);\n      return {\n        point: function(x, y) {\n          lower48Stream.point(x, y);\n          alaskaStream.point(x, y);\n          hawaiiStream.point(x, y);\n        },\n        sphere: function() {\n          lower48Stream.sphere();\n          alaskaStream.sphere();\n          hawaiiStream.sphere();\n        },\n        lineStart: function() {\n          lower48Stream.lineStart();\n          alaskaStream.lineStart();\n          hawaiiStream.lineStart();\n        },\n        lineEnd: function() {\n          lower48Stream.lineEnd();\n          alaskaStream.lineEnd();\n          hawaiiStream.lineEnd();\n        },\n        polygonStart: function() {\n          lower48Stream.polygonStart();\n          alaskaStream.polygonStart();\n          hawaiiStream.polygonStart();\n        },\n        polygonEnd: function() {\n          lower48Stream.polygonEnd();\n          alaskaStream.polygonEnd();\n          hawaiiStream.polygonEnd();\n        }\n      };\n    };\n    albersUsa.precision = function(_) {\n      if (!arguments.length) return lower48.precision();\n      lower48.precision(_);\n      alaska.precision(_);\n      hawaii.precision(_);\n      return albersUsa;\n    };\n    albersUsa.scale = function(_) {\n      if (!arguments.length) return lower48.scale();\n      lower48.scale(_);\n      alaska.scale(_ * .35);\n      hawaii.scale(_);\n      return albersUsa.translate(lower48.translate());\n    };\n    albersUsa.translate = function(_) {\n      if (!arguments.length) return lower48.translate();\n      var k = lower48.scale(), x = +_[0], y = +_[1];\n      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;\n      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      return albersUsa;\n    };\n    return albersUsa.scale(1070);\n  };\n  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_pathAreaPolygon = 0;\n      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\n      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\n    }\n  };\n  function d3_geo_pathAreaRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathArea.point = function(x, y) {\n      d3_geo_pathArea.point = nextPoint;\n      x00 = x0 = x, y00 = y0 = y;\n    };\n    function nextPoint(x, y) {\n      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\n      x0 = x, y0 = y;\n    }\n    d3_geo_pathArea.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\n  var d3_geo_pathBounds = {\n    point: d3_geo_pathBoundsPoint,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_pathBoundsPoint(x, y) {\n    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\n    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\n    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\n    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\n  }\n  function d3_geo_pathBuffer() {\n    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointCircle = d3_geo_pathBufferCircle(_);\n        return stream;\n      },\n      result: function() {\n        if (buffer.length) {\n          var result = buffer.join(\"\");\n          buffer = [];\n          return result;\n        }\n      }\n    };\n    function point(x, y) {\n      buffer.push(\"M\", x, \",\", y, pointCircle);\n    }\n    function pointLineStart(x, y) {\n      buffer.push(\"M\", x, \",\", y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      buffer.push(\"L\", x, \",\", y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      buffer.push(\"Z\");\n    }\n    return stream;\n  }\n  function d3_geo_pathBufferCircle(radius) {\n    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n  }\n  var d3_geo_pathCentroid = {\n    point: d3_geo_pathCentroidPoint,\n    lineStart: d3_geo_pathCentroidLineStart,\n    lineEnd: d3_geo_pathCentroidLineEnd,\n    polygonStart: function() {\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\n      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\n    }\n  };\n  function d3_geo_pathCentroidPoint(x, y) {\n    d3_geo_centroidX0 += x;\n    d3_geo_centroidY0 += y;\n    ++d3_geo_centroidZ0;\n  }\n  function d3_geo_pathCentroidLineStart() {\n    var x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n  }\n  function d3_geo_pathCentroidLineEnd() {\n    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n  }\n  function d3_geo_pathCentroidRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      z = y0 * x - x0 * y;\n      d3_geo_centroidX2 += z * (x0 + x);\n      d3_geo_centroidY2 += z * (y0 + y);\n      d3_geo_centroidZ2 += z * 3;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n    d3_geo_pathCentroid.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  function d3_geo_pathContext(context) {\n    var pointRadius = 4.5;\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointRadius = _;\n        return stream;\n      },\n      result: d3_noop\n    };\n    function point(x, y) {\n      context.moveTo(x, y);\n      context.arc(x, y, pointRadius, 0, τ);\n    }\n    function pointLineStart(x, y) {\n      context.moveTo(x, y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      context.lineTo(x, y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      context.closePath();\n    }\n    return stream;\n  }\n  function d3_geo_resample(project) {\n    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;\n    function resample(stream) {\n      return (maxDepth ? resampleRecursive : resampleNone)(stream);\n    }\n    function resampleNone(stream) {\n      return d3_geo_transformPoint(stream, function(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      });\n    }\n    function resampleRecursive(stream) {\n      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\n      var resample = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          stream.polygonStart();\n          resample.lineStart = ringStart;\n        },\n        polygonEnd: function() {\n          stream.polygonEnd();\n          resample.lineStart = lineStart;\n        }\n      };\n      function point(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      }\n      function lineStart() {\n        x0 = NaN;\n        resample.point = linePoint;\n        stream.lineStart();\n      }\n      function linePoint(λ, φ) {\n        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n        stream.point(x0, y0);\n      }\n      function lineEnd() {\n        resample.point = point;\n        stream.lineEnd();\n      }\n      function ringStart() {\n        lineStart();\n        resample.point = ringPoint;\n        resample.lineEnd = ringEnd;\n      }\n      function ringPoint(λ, φ) {\n        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n        resample.point = linePoint;\n      }\n      function ringEnd() {\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\n        resample.lineEnd = lineEnd;\n        lineEnd();\n      }\n      return resample;\n    }\n    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\n      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;\n      if (d2 > 4 * δ2 && depth--) {\n        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;\n        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\n          stream.point(x2, y2);\n          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\n        }\n      }\n    }\n    resample.precision = function(_) {\n      if (!arguments.length) return Math.sqrt(δ2);\n      maxDepth = (δ2 = _ * _) > 0 && 16;\n      return resample;\n    };\n    return resample;\n  }\n  d3.geo.path = function() {\n    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;\n    function path(object) {\n      if (object) {\n        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\n        d3.geo.stream(object, cacheStream);\n      }\n      return contextStream.result();\n    }\n    path.area = function(object) {\n      d3_geo_pathAreaSum = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathArea));\n      return d3_geo_pathAreaSum;\n    };\n    path.centroid = function(object) {\n      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\n      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];\n    };\n    path.bounds = function(object) {\n      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\n      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\n      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];\n    };\n    path.projection = function(_) {\n      if (!arguments.length) return projection;\n      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\n      return reset();\n    };\n    path.context = function(_) {\n      if (!arguments.length) return context;\n      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\n      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n      return reset();\n    };\n    path.pointRadius = function(_) {\n      if (!arguments.length) return pointRadius;\n      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n      return path;\n    };\n    function reset() {\n      cacheStream = null;\n      return path;\n    }\n    return path.projection(d3.geo.albersUsa()).context(null);\n  };\n  function d3_geo_pathProjectStream(project) {\n    var resample = d3_geo_resample(function(x, y) {\n      return project([ x * d3_degrees, y * d3_degrees ]);\n    });\n    return function(stream) {\n      return d3_geo_projectionRadians(resample(stream));\n    };\n  }\n  d3.geo.transform = function(methods) {\n    return {\n      stream: function(stream) {\n        var transform = new d3_geo_transform(stream);\n        for (var k in methods) transform[k] = methods[k];\n        return transform;\n      }\n    };\n  };\n  function d3_geo_transform(stream) {\n    this.stream = stream;\n  }\n  d3_geo_transform.prototype = {\n    point: function(x, y) {\n      this.stream.point(x, y);\n    },\n    sphere: function() {\n      this.stream.sphere();\n    },\n    lineStart: function() {\n      this.stream.lineStart();\n    },\n    lineEnd: function() {\n      this.stream.lineEnd();\n    },\n    polygonStart: function() {\n      this.stream.polygonStart();\n    },\n    polygonEnd: function() {\n      this.stream.polygonEnd();\n    }\n  };\n  function d3_geo_transformPoint(stream, point) {\n    return {\n      point: point,\n      sphere: function() {\n        stream.sphere();\n      },\n      lineStart: function() {\n        stream.lineStart();\n      },\n      lineEnd: function() {\n        stream.lineEnd();\n      },\n      polygonStart: function() {\n        stream.polygonStart();\n      },\n      polygonEnd: function() {\n        stream.polygonEnd();\n      }\n    };\n  }\n  d3.geo.projection = d3_geo_projection;\n  d3.geo.projectionMutator = d3_geo_projectionMutator;\n  function d3_geo_projection(project) {\n    return d3_geo_projectionMutator(function() {\n      return project;\n    })();\n  }\n  function d3_geo_projectionMutator(projectAt) {\n    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {\n      x = project(x, y);\n      return [ x[0] * k + δx, δy - x[1] * k ];\n    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;\n    function projection(point) {\n      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\n      return [ point[0] * k + δx, δy - point[1] * k ];\n    }\n    function invert(point) {\n      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\n      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];\n    }\n    projection.stream = function(output) {\n      if (stream) stream.valid = false;\n      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\n      stream.valid = true;\n      return stream;\n    };\n    projection.clipAngle = function(_) {\n      if (!arguments.length) return clipAngle;\n      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\n      return invalidate();\n    };\n    projection.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent;\n      clipExtent = _;\n      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\n      return invalidate();\n    };\n    projection.scale = function(_) {\n      if (!arguments.length) return k;\n      k = +_;\n      return reset();\n    };\n    projection.translate = function(_) {\n      if (!arguments.length) return [ x, y ];\n      x = +_[0];\n      y = +_[1];\n      return reset();\n    };\n    projection.center = function(_) {\n      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];\n      λ = _[0] % 360 * d3_radians;\n      φ = _[1] % 360 * d3_radians;\n      return reset();\n    };\n    projection.rotate = function(_) {\n      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];\n      δλ = _[0] % 360 * d3_radians;\n      δφ = _[1] % 360 * d3_radians;\n      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\n      return reset();\n    };\n    d3.rebind(projection, projectResample, \"precision\");\n    function reset() {\n      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\n      var center = project(λ, φ);\n      δx = x - center[0] * k;\n      δy = y + center[1] * k;\n      return invalidate();\n    }\n    function invalidate() {\n      if (stream) stream.valid = false, stream = null;\n      return projection;\n    }\n    return function() {\n      project = projectAt.apply(this, arguments);\n      projection.invert = project.invert && invert;\n      return reset();\n    };\n  }\n  function d3_geo_projectionRadians(stream) {\n    return d3_geo_transformPoint(stream, function(x, y) {\n      stream.point(x * d3_radians, y * d3_radians);\n    });\n  }\n  function d3_geo_equirectangular(λ, φ) {\n    return [ λ, φ ];\n  }\n  (d3.geo.equirectangular = function() {\n    return d3_geo_projection(d3_geo_equirectangular);\n  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\n  d3.geo.rotation = function(rotate) {\n    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\n    function forward(coordinates) {\n      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    }\n    forward.invert = function(coordinates) {\n      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    };\n    return forward;\n  };\n  function d3_geo_identityRotation(λ, φ) {\n    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n  }\n  d3_geo_identityRotation.invert = d3_geo_equirectangular;\n  function d3_geo_rotation(δλ, δφ, δγ) {\n    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\n  }\n  function d3_geo_forwardRotationλ(δλ) {\n    return function(λ, φ) {\n      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n    };\n  }\n  function d3_geo_rotationλ(δλ) {\n    var rotation = d3_geo_forwardRotationλ(δλ);\n    rotation.invert = d3_geo_forwardRotationλ(-δλ);\n    return rotation;\n  }\n  function d3_geo_rotationφγ(δφ, δγ) {\n    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);\n    function rotation(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;\n      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];\n    }\n    rotation.invert = function(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;\n      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];\n    };\n    return rotation;\n  }\n  d3.geo.circle = function() {\n    var origin = [ 0, 0 ], angle, precision = 6, interpolate;\n    function circle() {\n      var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];\n      interpolate(null, null, 1, {\n        point: function(x, y) {\n          ring.push(x = rotate(x, y));\n          x[0] *= d3_degrees, x[1] *= d3_degrees;\n        }\n      });\n      return {\n        type: \"Polygon\",\n        coordinates: [ ring ]\n      };\n    }\n    circle.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return circle;\n    };\n    circle.angle = function(x) {\n      if (!arguments.length) return angle;\n      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\n      return circle;\n    };\n    circle.precision = function(_) {\n      if (!arguments.length) return precision;\n      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\n      return circle;\n    };\n    return circle.angle(90);\n  };\n  function d3_geo_circleInterpolate(radius, precision) {\n    var cr = Math.cos(radius), sr = Math.sin(radius);\n    return function(from, to, direction, listener) {\n      var step = direction * precision;\n      if (from != null) {\n        from = d3_geo_circleAngle(cr, from);\n        to = d3_geo_circleAngle(cr, to);\n        if (direction > 0 ? from < to : from > to) from += direction * τ;\n      } else {\n        from = radius + direction * τ;\n        to = radius - .5 * step;\n      }\n      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\n        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);\n      }\n    };\n  }\n  function d3_geo_circleAngle(cr, point) {\n    var a = d3_geo_cartesian(point);\n    a[0] -= cr;\n    d3_geo_cartesianNormalize(a);\n    var angle = d3_acos(-a[1]);\n    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\n  }\n  d3.geo.distance = function(a, b) {\n    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;\n    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n  };\n  d3.geo.graticule = function() {\n    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;\n    function graticule() {\n      return {\n        type: \"MultiLineString\",\n        coordinates: lines()\n      };\n    }\n    function lines() {\n      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {\n        return abs(x % DX) > ε;\n      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {\n        return abs(y % DY) > ε;\n      }).map(y));\n    }\n    graticule.lines = function() {\n      return lines().map(function(coordinates) {\n        return {\n          type: \"LineString\",\n          coordinates: coordinates\n        };\n      });\n    };\n    graticule.outline = function() {\n      return {\n        type: \"Polygon\",\n        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]\n      };\n    };\n    graticule.extent = function(_) {\n      if (!arguments.length) return graticule.minorExtent();\n      return graticule.majorExtent(_).minorExtent(_);\n    };\n    graticule.majorExtent = function(_) {\n      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];\n      X0 = +_[0][0], X1 = +_[1][0];\n      Y0 = +_[0][1], Y1 = +_[1][1];\n      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.minorExtent = function(_) {\n      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n      x0 = +_[0][0], x1 = +_[1][0];\n      y0 = +_[0][1], y1 = +_[1][1];\n      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.step = function(_) {\n      if (!arguments.length) return graticule.minorStep();\n      return graticule.majorStep(_).minorStep(_);\n    };\n    graticule.majorStep = function(_) {\n      if (!arguments.length) return [ DX, DY ];\n      DX = +_[0], DY = +_[1];\n      return graticule;\n    };\n    graticule.minorStep = function(_) {\n      if (!arguments.length) return [ dx, dy ];\n      dx = +_[0], dy = +_[1];\n      return graticule;\n    };\n    graticule.precision = function(_) {\n      if (!arguments.length) return precision;\n      precision = +_;\n      x = d3_geo_graticuleX(y0, y1, 90);\n      y = d3_geo_graticuleY(x0, x1, precision);\n      X = d3_geo_graticuleX(Y0, Y1, 90);\n      Y = d3_geo_graticuleY(X0, X1, precision);\n      return graticule;\n    };\n    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);\n  };\n  function d3_geo_graticuleX(y0, y1, dy) {\n    var y = d3.range(y0, y1 - ε, dy).concat(y1);\n    return function(x) {\n      return y.map(function(y) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_geo_graticuleY(x0, x1, dx) {\n    var x = d3.range(x0, x1 - ε, dx).concat(x1);\n    return function(y) {\n      return x.map(function(x) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_source(d) {\n    return d.source;\n  }\n  function d3_target(d) {\n    return d.target;\n  }\n  d3.geo.greatArc = function() {\n    var source = d3_source, source_, target = d3_target, target_;\n    function greatArc() {\n      return {\n        type: \"LineString\",\n        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]\n      };\n    }\n    greatArc.distance = function() {\n      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\n    };\n    greatArc.source = function(_) {\n      if (!arguments.length) return source;\n      source = _, source_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.target = function(_) {\n      if (!arguments.length) return target;\n      target = _, target_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.precision = function() {\n      return arguments.length ? greatArc : 0;\n    };\n    return greatArc;\n  };\n  d3.geo.interpolate = function(source, target) {\n    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\n  };\n  function d3_geo_interpolate(x0, y0, x1, y1) {\n    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);\n    var interpolate = d ? function(t) {\n      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;\n      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];\n    } : function() {\n      return [ x0 * d3_degrees, y0 * d3_degrees ];\n    };\n    interpolate.distance = d;\n    return interpolate;\n  }\n  d3.geo.length = function(object) {\n    d3_geo_lengthSum = 0;\n    d3.geo.stream(object, d3_geo_length);\n    return d3_geo_lengthSum;\n  };\n  var d3_geo_lengthSum;\n  var d3_geo_length = {\n    sphere: d3_noop,\n    point: d3_noop,\n    lineStart: d3_geo_lengthLineStart,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_lengthLineStart() {\n    var λ0, sinφ0, cosφ0;\n    d3_geo_length.point = function(λ, φ) {\n      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\n      d3_geo_length.point = nextPoint;\n    };\n    d3_geo_length.lineEnd = function() {\n      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\n    };\n    function nextPoint(λ, φ) {\n      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);\n      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\n      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\n    }\n  }\n  function d3_geo_azimuthal(scale, angle) {\n    function azimuthal(λ, φ) {\n      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);\n      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];\n    }\n    azimuthal.invert = function(x, y) {\n      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);\n      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];\n    };\n    return azimuthal;\n  }\n  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {\n    return Math.sqrt(2 / (1 + cosλcosφ));\n  }, function(ρ) {\n    return 2 * Math.asin(ρ / 2);\n  });\n  (d3.geo.azimuthalEqualArea = function() {\n    return d3_geo_projection(d3_geo_azimuthalEqualArea);\n  }).raw = d3_geo_azimuthalEqualArea;\n  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {\n    var c = Math.acos(cosλcosφ);\n    return c && c / Math.sin(c);\n  }, d3_identity);\n  (d3.geo.azimuthalEquidistant = function() {\n    return d3_geo_projection(d3_geo_azimuthalEquidistant);\n  }).raw = d3_geo_azimuthalEquidistant;\n  function d3_geo_conicConformal(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), t = function(φ) {\n      return Math.tan(π / 4 + φ / 2);\n    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;\n    if (!n) return d3_geo_mercator;\n    function forward(λ, φ) {\n      if (F > 0) {\n        if (φ < -halfπ + ε) φ = -halfπ + ε;\n      } else {\n        if (φ > halfπ - ε) φ = halfπ - ε;\n      }\n      var ρ = F / Math.pow(t(φ), n);\n      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\n      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];\n    };\n    return forward;\n  }\n  (d3.geo.conicConformal = function() {\n    return d3_geo_conic(d3_geo_conicConformal);\n  }).raw = d3_geo_conicConformal;\n  function d3_geo_conicEquidistant(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;\n    if (abs(n) < ε) return d3_geo_equirectangular;\n    function forward(λ, φ) {\n      var ρ = G - φ;\n      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = G - y;\n      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEquidistant = function() {\n    return d3_geo_conic(d3_geo_conicEquidistant);\n  }).raw = d3_geo_conicEquidistant;\n  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / cosλcosφ;\n  }, Math.atan);\n  (d3.geo.gnomonic = function() {\n    return d3_geo_projection(d3_geo_gnomonic);\n  }).raw = d3_geo_gnomonic;\n  function d3_geo_mercator(λ, φ) {\n    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];\n  }\n  d3_geo_mercator.invert = function(x, y) {\n    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];\n  };\n  function d3_geo_mercatorProjection(project) {\n    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;\n    m.scale = function() {\n      var v = scale.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.translate = function() {\n      var v = translate.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.clipExtent = function(_) {\n      var v = clipExtent.apply(m, arguments);\n      if (v === m) {\n        if (clipAuto = _ == null) {\n          var k = π * scale(), t = translate();\n          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);\n        }\n      } else if (clipAuto) {\n        v = null;\n      }\n      return v;\n    };\n    return m.clipExtent(null);\n  }\n  (d3.geo.mercator = function() {\n    return d3_geo_mercatorProjection(d3_geo_mercator);\n  }).raw = d3_geo_mercator;\n  var d3_geo_orthographic = d3_geo_azimuthal(function() {\n    return 1;\n  }, Math.asin);\n  (d3.geo.orthographic = function() {\n    return d3_geo_projection(d3_geo_orthographic);\n  }).raw = d3_geo_orthographic;\n  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / (1 + cosλcosφ);\n  }, function(ρ) {\n    return 2 * Math.atan(ρ);\n  });\n  (d3.geo.stereographic = function() {\n    return d3_geo_projection(d3_geo_stereographic);\n  }).raw = d3_geo_stereographic;\n  function d3_geo_transverseMercator(λ, φ) {\n    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];\n  }\n  d3_geo_transverseMercator.invert = function(x, y) {\n    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];\n  };\n  (d3.geo.transverseMercator = function() {\n    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;\n    projection.center = function(_) {\n      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ _[1], -_[0] ]);\n    };\n    projection.rotate = function(_) {\n      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(), \n      [ _[0], _[1], _[2] - 90 ]);\n    };\n    return rotate([ 0, 0, 90 ]);\n  }).raw = d3_geo_transverseMercator;\n  d3.geom = {};\n  function d3_geom_pointX(d) {\n    return d[0];\n  }\n  function d3_geom_pointY(d) {\n    return d[1];\n  }\n  d3.geom.hull = function(vertices) {\n    var x = d3_geom_pointX, y = d3_geom_pointY;\n    if (arguments.length) return hull(vertices);\n    function hull(data) {\n      if (data.length < 3) return [];\n      var fx = d3_functor(x), fy = d3_functor(y), i, n = data.length, points = [], flippedPoints = [];\n      for (i = 0; i < n; i++) {\n        points.push([ +fx.call(this, data[i], i), +fy.call(this, data[i], i), i ]);\n      }\n      points.sort(d3_geom_hullOrder);\n      for (i = 0; i < n; i++) flippedPoints.push([ points[i][0], -points[i][1] ]);\n      var upper = d3_geom_hullUpper(points), lower = d3_geom_hullUpper(flippedPoints);\n      var skipLeft = lower[0] === upper[0], skipRight = lower[lower.length - 1] === upper[upper.length - 1], polygon = [];\n      for (i = upper.length - 1; i >= 0; --i) polygon.push(data[points[upper[i]][2]]);\n      for (i = +skipLeft; i < lower.length - skipRight; ++i) polygon.push(data[points[lower[i]][2]]);\n      return polygon;\n    }\n    hull.x = function(_) {\n      return arguments.length ? (x = _, hull) : x;\n    };\n    hull.y = function(_) {\n      return arguments.length ? (y = _, hull) : y;\n    };\n    return hull;\n  };\n  function d3_geom_hullUpper(points) {\n    var n = points.length, hull = [ 0, 1 ], hs = 2;\n    for (var i = 2; i < n; i++) {\n      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) --hs;\n      hull[hs++] = i;\n    }\n    return hull.slice(0, hs);\n  }\n  function d3_geom_hullOrder(a, b) {\n    return a[0] - b[0] || a[1] - b[1];\n  }\n  d3.geom.polygon = function(coordinates) {\n    d3_subclass(coordinates, d3_geom_polygonPrototype);\n    return coordinates;\n  };\n  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\n  d3_geom_polygonPrototype.area = function() {\n    var i = -1, n = this.length, a, b = this[n - 1], area = 0;\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      area += a[1] * b[0] - a[0] * b[1];\n    }\n    return area * .5;\n  };\n  d3_geom_polygonPrototype.centroid = function(k) {\n    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;\n    if (!arguments.length) k = -1 / (6 * this.area());\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      c = a[0] * b[1] - b[0] * a[1];\n      x += (a[0] + b[0]) * c;\n      y += (a[1] + b[1]) * c;\n    }\n    return [ x * k, y * k ];\n  };\n  d3_geom_polygonPrototype.clip = function(subject) {\n    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;\n    while (++i < n) {\n      input = subject.slice();\n      subject.length = 0;\n      b = this[i];\n      c = input[(m = input.length - closed) - 1];\n      j = -1;\n      while (++j < m) {\n        d = input[j];\n        if (d3_geom_polygonInside(d, a, b)) {\n          if (!d3_geom_polygonInside(c, a, b)) {\n            subject.push(d3_geom_polygonIntersect(c, d, a, b));\n          }\n          subject.push(d);\n        } else if (d3_geom_polygonInside(c, a, b)) {\n          subject.push(d3_geom_polygonIntersect(c, d, a, b));\n        }\n        c = d;\n      }\n      if (closed) subject.push(subject[0]);\n      a = b;\n    }\n    return subject;\n  };\n  function d3_geom_polygonInside(p, a, b) {\n    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n  }\n  function d3_geom_polygonIntersect(c, d, a, b) {\n    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n    return [ x1 + ua * x21, y1 + ua * y21 ];\n  }\n  function d3_geom_polygonClosed(coordinates) {\n    var a = coordinates[0], b = coordinates[coordinates.length - 1];\n    return !(a[0] - b[0] || a[1] - b[1]);\n  }\n  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];\n  function d3_geom_voronoiBeach() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.edge = this.site = this.circle = null;\n  }\n  function d3_geom_voronoiCreateBeach(site) {\n    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\n    beach.site = site;\n    return beach;\n  }\n  function d3_geom_voronoiDetachBeach(beach) {\n    d3_geom_voronoiDetachCircle(beach);\n    d3_geom_voronoiBeaches.remove(beach);\n    d3_geom_voronoiBeachPool.push(beach);\n    d3_geom_voronoiRedBlackNode(beach);\n  }\n  function d3_geom_voronoiRemoveBeach(beach) {\n    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {\n      x: x,\n      y: y\n    }, previous = beach.P, next = beach.N, disappearing = [ beach ];\n    d3_geom_voronoiDetachBeach(beach);\n    var lArc = previous;\n    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\n      previous = lArc.P;\n      disappearing.unshift(lArc);\n      d3_geom_voronoiDetachBeach(lArc);\n      lArc = previous;\n    }\n    disappearing.unshift(lArc);\n    d3_geom_voronoiDetachCircle(lArc);\n    var rArc = next;\n    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\n      next = rArc.N;\n      disappearing.push(rArc);\n      d3_geom_voronoiDetachBeach(rArc);\n      rArc = next;\n    }\n    disappearing.push(rArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var nArcs = disappearing.length, iArc;\n    for (iArc = 1; iArc < nArcs; ++iArc) {\n      rArc = disappearing[iArc];\n      lArc = disappearing[iArc - 1];\n      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n    }\n    lArc = disappearing[0];\n    rArc = disappearing[nArcs - 1];\n    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiAddBeach(site) {\n    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;\n    while (node) {\n      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\n      if (dxl > ε) node = node.L; else {\n        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\n        if (dxr > ε) {\n          if (!node.R) {\n            lArc = node;\n            break;\n          }\n          node = node.R;\n        } else {\n          if (dxl > -ε) {\n            lArc = node.P;\n            rArc = node;\n          } else if (dxr > -ε) {\n            lArc = node;\n            rArc = node.N;\n          } else {\n            lArc = rArc = node;\n          }\n          break;\n        }\n      }\n    }\n    var newArc = d3_geom_voronoiCreateBeach(site);\n    d3_geom_voronoiBeaches.insert(lArc, newArc);\n    if (!lArc && !rArc) return;\n    if (lArc === rArc) {\n      d3_geom_voronoiDetachCircle(lArc);\n      rArc = d3_geom_voronoiCreateBeach(lArc.site);\n      d3_geom_voronoiBeaches.insert(newArc, rArc);\n      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      d3_geom_voronoiAttachCircle(lArc);\n      d3_geom_voronoiAttachCircle(rArc);\n      return;\n    }\n    if (!rArc) {\n      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      return;\n    }\n    d3_geom_voronoiDetachCircle(lArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {\n      x: (cy * hb - by * hc) / d + ax,\n      y: (bx * hc - cx * hb) / d + ay\n    };\n    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\n    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\n    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\n    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;\n    if (!pby2) return rfocx;\n    var lArc = arc.P;\n    if (!lArc) return -Infinity;\n    site = lArc.site;\n    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;\n    if (!plby2) return lfocx;\n    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;\n    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n    return (rfocx + lfocx) / 2;\n  }\n  function d3_geom_voronoiRightBreakPoint(arc, directrix) {\n    var rArc = arc.N;\n    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\n    var site = arc.site;\n    return site.y === directrix ? site.x : Infinity;\n  }\n  function d3_geom_voronoiCell(site) {\n    this.site = site;\n    this.edges = [];\n  }\n  d3_geom_voronoiCell.prototype.prepare = function() {\n    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;\n    while (iHalfEdge--) {\n      edge = halfEdges[iHalfEdge].edge;\n      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\n    }\n    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\n    return halfEdges.length;\n  };\n  function d3_geom_voronoiCloseCells(extent) {\n    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;\n    while (iCell--) {\n      cell = cells[iCell];\n      if (!cell || !cell.prepare()) continue;\n      halfEdges = cell.edges;\n      nHalfEdges = halfEdges.length;\n      iHalfEdge = 0;\n      while (iHalfEdge < nHalfEdges) {\n        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\n        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\n        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\n          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\n            x: x0,\n            y: abs(x2 - x0) < ε ? y2 : y1\n          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\n            x: abs(y2 - y1) < ε ? x2 : x1,\n            y: y1\n          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\n            x: x1,\n            y: abs(x2 - x1) < ε ? y2 : y0\n          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\n            x: abs(y2 - y0) < ε ? x2 : x0,\n            y: y0\n          } : null), cell.site, null));\n          ++nHalfEdges;\n        }\n      }\n    }\n  }\n  function d3_geom_voronoiHalfEdgeOrder(a, b) {\n    return b.angle - a.angle;\n  }\n  function d3_geom_voronoiCircle() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.x = this.y = this.arc = this.site = this.cy = null;\n  }\n  function d3_geom_voronoiAttachCircle(arc) {\n    var lArc = arc.P, rArc = arc.N;\n    if (!lArc || !rArc) return;\n    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;\n    if (lSite === rSite) return;\n    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;\n    var d = 2 * (ax * cy - ay * cx);\n    if (d >= -ε2) return;\n    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;\n    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\n    circle.arc = arc;\n    circle.site = cSite;\n    circle.x = x + bx;\n    circle.y = cy + Math.sqrt(x * x + y * y);\n    circle.cy = cy;\n    arc.circle = circle;\n    var before = null, node = d3_geom_voronoiCircles._;\n    while (node) {\n      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n        if (node.L) node = node.L; else {\n          before = node.P;\n          break;\n        }\n      } else {\n        if (node.R) node = node.R; else {\n          before = node;\n          break;\n        }\n      }\n    }\n    d3_geom_voronoiCircles.insert(before, circle);\n    if (!before) d3_geom_voronoiFirstCircle = circle;\n  }\n  function d3_geom_voronoiDetachCircle(arc) {\n    var circle = arc.circle;\n    if (circle) {\n      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\n      d3_geom_voronoiCircles.remove(circle);\n      d3_geom_voronoiCirclePool.push(circle);\n      d3_geom_voronoiRedBlackNode(circle);\n      arc.circle = null;\n    }\n  }\n  function d3_geom_voronoiClipEdges(extent) {\n    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;\n    while (i--) {\n      e = edges[i];\n      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\n        e.a = e.b = null;\n        edges.splice(i, 1);\n      }\n    }\n  }\n  function d3_geom_voronoiConnectEdge(edge, extent) {\n    var vb = edge.b;\n    if (vb) return true;\n    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;\n    if (ry === ly) {\n      if (fx < x0 || fx >= x1) return;\n      if (lx > rx) {\n        if (!va) va = {\n          x: fx,\n          y: y0\n        }; else if (va.y >= y1) return;\n        vb = {\n          x: fx,\n          y: y1\n        };\n      } else {\n        if (!va) va = {\n          x: fx,\n          y: y1\n        }; else if (va.y < y0) return;\n        vb = {\n          x: fx,\n          y: y0\n        };\n      }\n    } else {\n      fm = (lx - rx) / (ry - ly);\n      fb = fy - fm * fx;\n      if (fm < -1 || fm > 1) {\n        if (lx > rx) {\n          if (!va) va = {\n            x: (y0 - fb) / fm,\n            y: y0\n          }; else if (va.y >= y1) return;\n          vb = {\n            x: (y1 - fb) / fm,\n            y: y1\n          };\n        } else {\n          if (!va) va = {\n            x: (y1 - fb) / fm,\n            y: y1\n          }; else if (va.y < y0) return;\n          vb = {\n            x: (y0 - fb) / fm,\n            y: y0\n          };\n        }\n      } else {\n        if (ly < ry) {\n          if (!va) va = {\n            x: x0,\n            y: fm * x0 + fb\n          }; else if (va.x >= x1) return;\n          vb = {\n            x: x1,\n            y: fm * x1 + fb\n          };\n        } else {\n          if (!va) va = {\n            x: x1,\n            y: fm * x1 + fb\n          }; else if (va.x < x0) return;\n          vb = {\n            x: x0,\n            y: fm * x0 + fb\n          };\n        }\n      }\n    }\n    edge.a = va;\n    edge.b = vb;\n    return true;\n  }\n  function d3_geom_voronoiEdge(lSite, rSite) {\n    this.l = lSite;\n    this.r = rSite;\n    this.a = this.b = null;\n  }\n  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, rSite);\n    d3_geom_voronoiEdges.push(edge);\n    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\n    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\n    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\n    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\n    return edge;\n  }\n  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, null);\n    edge.a = va;\n    edge.b = vb;\n    d3_geom_voronoiEdges.push(edge);\n    return edge;\n  }\n  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\n    if (!edge.a && !edge.b) {\n      edge.a = vertex;\n      edge.l = lSite;\n      edge.r = rSite;\n    } else if (edge.l === rSite) {\n      edge.b = vertex;\n    } else {\n      edge.a = vertex;\n    }\n  }\n  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\n    var va = edge.a, vb = edge.b;\n    this.edge = edge;\n    this.site = lSite;\n    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\n  }\n  d3_geom_voronoiHalfEdge.prototype = {\n    start: function() {\n      return this.edge.l === this.site ? this.edge.a : this.edge.b;\n    },\n    end: function() {\n      return this.edge.l === this.site ? this.edge.b : this.edge.a;\n    }\n  };\n  function d3_geom_voronoiRedBlackTree() {\n    this._ = null;\n  }\n  function d3_geom_voronoiRedBlackNode(node) {\n    node.U = node.C = node.L = node.R = node.P = node.N = null;\n  }\n  d3_geom_voronoiRedBlackTree.prototype = {\n    insert: function(after, node) {\n      var parent, grandpa, uncle;\n      if (after) {\n        node.P = after;\n        node.N = after.N;\n        if (after.N) after.N.P = node;\n        after.N = node;\n        if (after.R) {\n          after = after.R;\n          while (after.L) after = after.L;\n          after.L = node;\n        } else {\n          after.R = node;\n        }\n        parent = after;\n      } else if (this._) {\n        after = d3_geom_voronoiRedBlackFirst(this._);\n        node.P = null;\n        node.N = after;\n        after.P = after.L = node;\n        parent = after;\n      } else {\n        node.P = node.N = null;\n        this._ = node;\n        parent = null;\n      }\n      node.L = node.R = null;\n      node.U = parent;\n      node.C = true;\n      after = node;\n      while (parent && parent.C) {\n        grandpa = parent.U;\n        if (parent === grandpa.L) {\n          uncle = grandpa.R;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.R) {\n              d3_geom_voronoiRedBlackRotateLeft(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, grandpa);\n          }\n        } else {\n          uncle = grandpa.L;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.L) {\n              d3_geom_voronoiRedBlackRotateRight(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\n          }\n        }\n        parent = after.U;\n      }\n      this._.C = false;\n    },\n    remove: function(node) {\n      if (node.N) node.N.P = node.P;\n      if (node.P) node.P.N = node.N;\n      node.N = node.P = null;\n      var parent = node.U, sibling, left = node.L, right = node.R, next, red;\n      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);\n      if (parent) {\n        if (parent.L === node) parent.L = next; else parent.R = next;\n      } else {\n        this._ = next;\n      }\n      if (left && right) {\n        red = next.C;\n        next.C = node.C;\n        next.L = left;\n        left.U = next;\n        if (next !== right) {\n          parent = next.U;\n          next.U = node.U;\n          node = next.R;\n          parent.L = node;\n          next.R = right;\n          right.U = next;\n        } else {\n          next.U = parent;\n          parent = next;\n          node = next.R;\n        }\n      } else {\n        red = node.C;\n        node = next;\n      }\n      if (node) node.U = parent;\n      if (red) return;\n      if (node && node.C) {\n        node.C = false;\n        return;\n      }\n      do {\n        if (node === this._) break;\n        if (node === parent.L) {\n          sibling = parent.R;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            sibling = parent.R;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.R || !sibling.R.C) {\n              sibling.L.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateRight(this, sibling);\n              sibling = parent.R;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.R.C = false;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            node = this._;\n            break;\n          }\n        } else {\n          sibling = parent.L;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            sibling = parent.L;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.L || !sibling.L.C) {\n              sibling.R.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateLeft(this, sibling);\n              sibling = parent.L;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.L.C = false;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            node = this._;\n            break;\n          }\n        }\n        sibling.C = true;\n        node = parent;\n        parent = parent.U;\n      } while (!node.C);\n      if (node) node.C = false;\n    }\n  };\n  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\n    var p = node, q = node.R, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.R = q.L;\n    if (p.R) p.R.U = p;\n    q.L = p;\n  }\n  function d3_geom_voronoiRedBlackRotateRight(tree, node) {\n    var p = node, q = node.L, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.L = q.R;\n    if (p.L) p.L.U = p;\n    q.R = p;\n  }\n  function d3_geom_voronoiRedBlackFirst(node) {\n    while (node.L) node = node.L;\n    return node;\n  }\n  function d3_geom_voronoi(sites, bbox) {\n    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;\n    d3_geom_voronoiEdges = [];\n    d3_geom_voronoiCells = new Array(sites.length);\n    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\n    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\n    while (true) {\n      circle = d3_geom_voronoiFirstCircle;\n      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\n        if (site.x !== x0 || site.y !== y0) {\n          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\n          d3_geom_voronoiAddBeach(site);\n          x0 = site.x, y0 = site.y;\n        }\n        site = sites.pop();\n      } else if (circle) {\n        d3_geom_voronoiRemoveBeach(circle.arc);\n      } else {\n        break;\n      }\n    }\n    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\n    var diagram = {\n      cells: d3_geom_voronoiCells,\n      edges: d3_geom_voronoiEdges\n    };\n    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\n    return diagram;\n  }\n  function d3_geom_voronoiVertexOrder(a, b) {\n    return b.y - a.y || b.x - a.x;\n  }\n  d3.geom.voronoi = function(points) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;\n    if (points) return voronoi(points);\n    function voronoi(data) {\n      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];\n      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {\n        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {\n          var s = e.start();\n          return [ s.x, s.y ];\n        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];\n        polygon.point = data[i];\n      });\n      return polygons;\n    }\n    function sites(data) {\n      return data.map(function(d, i) {\n        return {\n          x: Math.round(fx(d, i) / ε) * ε,\n          y: Math.round(fy(d, i) / ε) * ε,\n          i: i\n        };\n      });\n    }\n    voronoi.links = function(data) {\n      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {\n        return edge.l && edge.r;\n      }).map(function(edge) {\n        return {\n          source: data[edge.l.i],\n          target: data[edge.r.i]\n        };\n      });\n    };\n    voronoi.triangles = function(data) {\n      var triangles = [];\n      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {\n        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;\n        while (++j < m) {\n          e0 = e1;\n          s0 = s1;\n          e1 = edges[j].edge;\n          s1 = e1.l === site ? e1.r : e1.l;\n          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\n            triangles.push([ data[i], data[s0.i], data[s1.i] ]);\n          }\n        }\n      });\n      return triangles;\n    };\n    voronoi.x = function(_) {\n      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\n    };\n    voronoi.y = function(_) {\n      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\n    };\n    voronoi.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\n      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\n      return voronoi;\n    };\n    voronoi.size = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\n      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);\n    };\n    return voronoi;\n  };\n  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];\n  function d3_geom_voronoiTriangleArea(a, b, c) {\n    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\n  }\n  d3.geom.delaunay = function(vertices) {\n    return d3.geom.voronoi().triangles(vertices);\n  };\n  d3.geom.quadtree = function(points, x1, y1, x2, y2) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, compat;\n    if (compat = arguments.length) {\n      x = d3_geom_quadtreeCompatX;\n      y = d3_geom_quadtreeCompatY;\n      if (compat === 3) {\n        y2 = y1;\n        x2 = x1;\n        y1 = x1 = 0;\n      }\n      return quadtree(points);\n    }\n    function quadtree(data) {\n      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;\n      if (x1 != null) {\n        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\n      } else {\n        x2_ = y2_ = -(x1_ = y1_ = Infinity);\n        xs = [], ys = [];\n        n = data.length;\n        if (compat) for (i = 0; i < n; ++i) {\n          d = data[i];\n          if (d.x < x1_) x1_ = d.x;\n          if (d.y < y1_) y1_ = d.y;\n          if (d.x > x2_) x2_ = d.x;\n          if (d.y > y2_) y2_ = d.y;\n          xs.push(d.x);\n          ys.push(d.y);\n        } else for (i = 0; i < n; ++i) {\n          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);\n          if (x_ < x1_) x1_ = x_;\n          if (y_ < y1_) y1_ = y_;\n          if (x_ > x2_) x2_ = x_;\n          if (y_ > y2_) y2_ = y_;\n          xs.push(x_);\n          ys.push(y_);\n        }\n      }\n      var dx = x2_ - x1_, dy = y2_ - y1_;\n      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;\n      function insert(n, d, x, y, x1, y1, x2, y2) {\n        if (isNaN(x) || isNaN(y)) return;\n        if (n.leaf) {\n          var nx = n.x, ny = n.y;\n          if (nx != null) {\n            if (abs(nx - x) + abs(ny - y) < .01) {\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            } else {\n              var nPoint = n.point;\n              n.x = n.y = n.point = null;\n              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            }\n          } else {\n            n.x = x, n.y = y, n.point = d;\n          }\n        } else {\n          insertChild(n, d, x, y, x1, y1, x2, y2);\n        }\n      }\n      function insertChild(n, d, x, y, x1, y1, x2, y2) {\n        var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, right = x >= sx, bottom = y >= sy, i = (bottom << 1) + right;\n        n.leaf = false;\n        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\n        if (right) x1 = sx; else x2 = sx;\n        if (bottom) y1 = sy; else y2 = sy;\n        insert(n, d, x, y, x1, y1, x2, y2);\n      }\n      var root = d3_geom_quadtreeNode();\n      root.add = function(d) {\n        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\n      };\n      root.visit = function(f) {\n        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\n      };\n      i = -1;\n      if (x1 == null) {\n        while (++i < n) {\n          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n        }\n        --i;\n      } else data.forEach(root.add);\n      xs = ys = data = d = null;\n      return root;\n    }\n    quadtree.x = function(_) {\n      return arguments.length ? (x = _, quadtree) : x;\n    };\n    quadtree.y = function(_) {\n      return arguments.length ? (y = _, quadtree) : y;\n    };\n    quadtree.extent = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], \n      y2 = +_[1][1];\n      return quadtree;\n    };\n    quadtree.size = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\n      return quadtree;\n    };\n    return quadtree;\n  };\n  function d3_geom_quadtreeCompatX(d) {\n    return d.x;\n  }\n  function d3_geom_quadtreeCompatY(d) {\n    return d.y;\n  }\n  function d3_geom_quadtreeNode() {\n    return {\n      leaf: true,\n      nodes: [],\n      point: null,\n      x: null,\n      y: null\n    };\n  }\n  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\n    if (!f(node, x1, y1, x2, y2)) {\n      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;\n      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\n      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\n      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\n      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\n    }\n  }\n  d3.interpolateRgb = d3_interpolateRgb;\n  function d3_interpolateRgb(a, b) {\n    a = d3.rgb(a);\n    b = d3.rgb(b);\n    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;\n    return function(t) {\n      return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\n    };\n  }\n  d3.interpolateObject = d3_interpolateObject;\n  function d3_interpolateObject(a, b) {\n    var i = {}, c = {}, k;\n    for (k in a) {\n      if (k in b) {\n        i[k] = d3_interpolate(a[k], b[k]);\n      } else {\n        c[k] = a[k];\n      }\n    }\n    for (k in b) {\n      if (!(k in a)) {\n        c[k] = b[k];\n      }\n    }\n    return function(t) {\n      for (k in i) c[k] = i[k](t);\n      return c;\n    };\n  }\n  d3.interpolateNumber = d3_interpolateNumber;\n  function d3_interpolateNumber(a, b) {\n    a = +a, b = +b;\n    return function(t) {\n      return a * (1 - t) + b * t;\n    };\n  }\n  d3.interpolateString = d3_interpolateString;\n  function d3_interpolateString(a, b) {\n    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0, am, bm, bs, i = -1, s = [], q = [];\n    a = a + \"\", b = b + \"\";\n    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {\n      if ((bs = bm.index) > bi) {\n        bs = b.slice(bi, bs);\n        if (s[i]) s[i] += bs; else s[++i] = bs;\n      }\n      if ((am = am[0]) === (bm = bm[0])) {\n        if (s[i]) s[i] += bm; else s[++i] = bm;\n      } else {\n        s[++i] = null;\n        q.push({\n          i: i,\n          x: d3_interpolateNumber(am, bm)\n        });\n      }\n      bi = d3_interpolate_numberB.lastIndex;\n    }\n    if (bi < b.length) {\n      bs = b.slice(bi);\n      if (s[i]) s[i] += bs; else s[++i] = bs;\n    }\n    return s.length < 2 ? q[0] ? (b = q[0].x, function(t) {\n      return b(t) + \"\";\n    }) : function() {\n      return b;\n    } : (b = q.length, function(t) {\n      for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    });\n  }\n  var d3_interpolate_numberA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g, d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, \"g\");\n  d3.interpolate = d3_interpolate;\n  function d3_interpolate(a, b) {\n    var i = d3.interpolators.length, f;\n    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;\n    return f;\n  }\n  d3.interpolators = [ function(a, b) {\n    var t = typeof b;\n    return (t === \"string\" ? d3_rgb_names.has(b) || /^(#|rgb\\(|hsl\\()/.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === \"object\" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);\n  } ];\n  d3.interpolateArray = d3_interpolateArray;\n  function d3_interpolateArray(a, b) {\n    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;\n    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));\n    for (;i < na; ++i) c[i] = a[i];\n    for (;i < nb; ++i) c[i] = b[i];\n    return function(t) {\n      for (i = 0; i < n0; ++i) c[i] = x[i](t);\n      return c;\n    };\n  }\n  var d3_ease_default = function() {\n    return d3_identity;\n  };\n  var d3_ease = d3.map({\n    linear: d3_ease_default,\n    poly: d3_ease_poly,\n    quad: function() {\n      return d3_ease_quad;\n    },\n    cubic: function() {\n      return d3_ease_cubic;\n    },\n    sin: function() {\n      return d3_ease_sin;\n    },\n    exp: function() {\n      return d3_ease_exp;\n    },\n    circle: function() {\n      return d3_ease_circle;\n    },\n    elastic: d3_ease_elastic,\n    back: d3_ease_back,\n    bounce: function() {\n      return d3_ease_bounce;\n    }\n  });\n  var d3_ease_mode = d3.map({\n    \"in\": d3_identity,\n    out: d3_ease_reverse,\n    \"in-out\": d3_ease_reflect,\n    \"out-in\": function(f) {\n      return d3_ease_reflect(d3_ease_reverse(f));\n    }\n  });\n  d3.ease = function(name) {\n    var i = name.indexOf(\"-\"), t = i >= 0 ? name.slice(0, i) : name, m = i >= 0 ? name.slice(i + 1) : \"in\";\n    t = d3_ease.get(t) || d3_ease_default;\n    m = d3_ease_mode.get(m) || d3_identity;\n    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\n  };\n  function d3_ease_clamp(f) {\n    return function(t) {\n      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\n    };\n  }\n  function d3_ease_reverse(f) {\n    return function(t) {\n      return 1 - f(1 - t);\n    };\n  }\n  function d3_ease_reflect(f) {\n    return function(t) {\n      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\n    };\n  }\n  function d3_ease_quad(t) {\n    return t * t;\n  }\n  function d3_ease_cubic(t) {\n    return t * t * t;\n  }\n  function d3_ease_cubicInOut(t) {\n    if (t <= 0) return 0;\n    if (t >= 1) return 1;\n    var t2 = t * t, t3 = t2 * t;\n    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\n  }\n  function d3_ease_poly(e) {\n    return function(t) {\n      return Math.pow(t, e);\n    };\n  }\n  function d3_ease_sin(t) {\n    return 1 - Math.cos(t * halfπ);\n  }\n  function d3_ease_exp(t) {\n    return Math.pow(2, 10 * (t - 1));\n  }\n  function d3_ease_circle(t) {\n    return 1 - Math.sqrt(1 - t * t);\n  }\n  function d3_ease_elastic(a, p) {\n    var s;\n    if (arguments.length < 2) p = .45;\n    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;\n    return function(t) {\n      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\n    };\n  }\n  function d3_ease_back(s) {\n    if (!s) s = 1.70158;\n    return function(t) {\n      return t * t * ((s + 1) * t - s);\n    };\n  }\n  function d3_ease_bounce(t) {\n    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n  }\n  d3.interpolateHcl = d3_interpolateHcl;\n  function d3_interpolateHcl(a, b) {\n    a = d3.hcl(a);\n    b = d3.hcl(b);\n    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;\n    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateHsl = d3_interpolateHsl;\n  function d3_interpolateHsl(a, b) {\n    a = d3.hsl(a);\n    b = d3.hsl(b);\n    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;\n    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateLab = d3_interpolateLab;\n  function d3_interpolateLab(a, b) {\n    a = d3.lab(a);\n    b = d3.lab(b);\n    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;\n    return function(t) {\n      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\n    };\n  }\n  d3.interpolateRound = d3_interpolateRound;\n  function d3_interpolateRound(a, b) {\n    b -= a;\n    return function(t) {\n      return Math.round(a + b * t);\n    };\n  }\n  d3.transform = function(string) {\n    var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\n    return (d3.transform = function(string) {\n      if (string != null) {\n        g.setAttribute(\"transform\", string);\n        var t = g.transform.baseVal.consolidate();\n      }\n      return new d3_transform(t ? t.matrix : d3_transformIdentity);\n    })(string);\n  };\n  function d3_transform(m) {\n    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\n    if (r0[0] * r1[1] < r1[0] * r0[1]) {\n      r0[0] *= -1;\n      r0[1] *= -1;\n      kx *= -1;\n      kz *= -1;\n    }\n    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\n    this.translate = [ m.e, m.f ];\n    this.scale = [ kx, ky ];\n    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\n  }\n  d3_transform.prototype.toString = function() {\n    return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\n  };\n  function d3_transformDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1];\n  }\n  function d3_transformNormalize(a) {\n    var k = Math.sqrt(d3_transformDot(a, a));\n    if (k) {\n      a[0] /= k;\n      a[1] /= k;\n    }\n    return k;\n  }\n  function d3_transformCombine(a, b, k) {\n    a[0] += k * b[0];\n    a[1] += k * b[1];\n    return a;\n  }\n  var d3_transformIdentity = {\n    a: 1,\n    b: 0,\n    c: 0,\n    d: 1,\n    e: 0,\n    f: 0\n  };\n  d3.interpolateTransform = d3_interpolateTransform;\n  function d3_interpolateTransform(a, b) {\n    var s = [], q = [], n, A = d3.transform(a), B = d3.transform(b), ta = A.translate, tb = B.translate, ra = A.rotate, rb = B.rotate, wa = A.skew, wb = B.skew, ka = A.scale, kb = B.scale;\n    if (ta[0] != tb[0] || ta[1] != tb[1]) {\n      s.push(\"translate(\", null, \",\", null, \")\");\n      q.push({\n        i: 1,\n        x: d3_interpolateNumber(ta[0], tb[0])\n      }, {\n        i: 3,\n        x: d3_interpolateNumber(ta[1], tb[1])\n      });\n    } else if (tb[0] || tb[1]) {\n      s.push(\"translate(\" + tb + \")\");\n    } else {\n      s.push(\"\");\n    }\n    if (ra != rb) {\n      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;\n      q.push({\n        i: s.push(s.pop() + \"rotate(\", null, \")\") - 2,\n        x: d3_interpolateNumber(ra, rb)\n      });\n    } else if (rb) {\n      s.push(s.pop() + \"rotate(\" + rb + \")\");\n    }\n    if (wa != wb) {\n      q.push({\n        i: s.push(s.pop() + \"skewX(\", null, \")\") - 2,\n        x: d3_interpolateNumber(wa, wb)\n      });\n    } else if (wb) {\n      s.push(s.pop() + \"skewX(\" + wb + \")\");\n    }\n    if (ka[0] != kb[0] || ka[1] != kb[1]) {\n      n = s.push(s.pop() + \"scale(\", null, \",\", null, \")\");\n      q.push({\n        i: n - 4,\n        x: d3_interpolateNumber(ka[0], kb[0])\n      }, {\n        i: n - 2,\n        x: d3_interpolateNumber(ka[1], kb[1])\n      });\n    } else if (kb[0] != 1 || kb[1] != 1) {\n      s.push(s.pop() + \"scale(\" + kb + \")\");\n    }\n    n = q.length;\n    return function(t) {\n      var i = -1, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  }\n  function d3_uninterpolateNumber(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return (x - a) / b;\n    };\n  }\n  function d3_uninterpolateClamp(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return Math.max(0, Math.min(1, (x - a) / b));\n    };\n  }\n  d3.layout = {};\n  d3.layout.bundle = function() {\n    return function(links) {\n      var paths = [], i = -1, n = links.length;\n      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));\n      return paths;\n    };\n  };\n  function d3_layout_bundlePath(link) {\n    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];\n    while (start !== lca) {\n      start = start.parent;\n      points.push(start);\n    }\n    var k = points.length;\n    while (end !== lca) {\n      points.splice(k, 0, end);\n      end = end.parent;\n    }\n    return points;\n  }\n  function d3_layout_bundleAncestors(node) {\n    var ancestors = [], parent = node.parent;\n    while (parent != null) {\n      ancestors.push(node);\n      node = parent;\n      parent = parent.parent;\n    }\n    ancestors.push(node);\n    return ancestors;\n  }\n  function d3_layout_bundleLeastCommonAncestor(a, b) {\n    if (a === b) return a;\n    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;\n    while (aNode === bNode) {\n      sharedNode = aNode;\n      aNode = aNodes.pop();\n      bNode = bNodes.pop();\n    }\n    return sharedNode;\n  }\n  d3.layout.chord = function() {\n    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;\n    function relayout() {\n      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;\n      chords = [];\n      groups = [];\n      k = 0, i = -1;\n      while (++i < n) {\n        x = 0, j = -1;\n        while (++j < n) {\n          x += matrix[i][j];\n        }\n        groupSums.push(x);\n        subgroupIndex.push(d3.range(n));\n        k += x;\n      }\n      if (sortGroups) {\n        groupIndex.sort(function(a, b) {\n          return sortGroups(groupSums[a], groupSums[b]);\n        });\n      }\n      if (sortSubgroups) {\n        subgroupIndex.forEach(function(d, i) {\n          d.sort(function(a, b) {\n            return sortSubgroups(matrix[i][a], matrix[i][b]);\n          });\n        });\n      }\n      k = (τ - padding * n) / k;\n      x = 0, i = -1;\n      while (++i < n) {\n        x0 = x, j = -1;\n        while (++j < n) {\n          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;\n          subgroups[di + \"-\" + dj] = {\n            index: di,\n            subindex: dj,\n            startAngle: a0,\n            endAngle: a1,\n            value: v\n          };\n        }\n        groups[di] = {\n          index: di,\n          startAngle: x0,\n          endAngle: x,\n          value: (x - x0) / k\n        };\n        x += padding;\n      }\n      i = -1;\n      while (++i < n) {\n        j = i - 1;\n        while (++j < n) {\n          var source = subgroups[i + \"-\" + j], target = subgroups[j + \"-\" + i];\n          if (source.value || target.value) {\n            chords.push(source.value < target.value ? {\n              source: target,\n              target: source\n            } : {\n              source: source,\n              target: target\n            });\n          }\n        }\n      }\n      if (sortChords) resort();\n    }\n    function resort() {\n      chords.sort(function(a, b) {\n        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n      });\n    }\n    chord.matrix = function(x) {\n      if (!arguments.length) return matrix;\n      n = (matrix = x) && matrix.length;\n      chords = groups = null;\n      return chord;\n    };\n    chord.padding = function(x) {\n      if (!arguments.length) return padding;\n      padding = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortGroups = function(x) {\n      if (!arguments.length) return sortGroups;\n      sortGroups = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortSubgroups = function(x) {\n      if (!arguments.length) return sortSubgroups;\n      sortSubgroups = x;\n      chords = null;\n      return chord;\n    };\n    chord.sortChords = function(x) {\n      if (!arguments.length) return sortChords;\n      sortChords = x;\n      if (chords) resort();\n      return chord;\n    };\n    chord.chords = function() {\n      if (!chords) relayout();\n      return chords;\n    };\n    chord.groups = function() {\n      if (!groups) relayout();\n      return groups;\n    };\n    return chord;\n  };\n  d3.layout.force = function() {\n    var force = {}, event = d3.dispatch(\"start\", \"tick\", \"end\"), size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, chargeDistance2 = d3_layout_forceChargeDistance2, gravity = .1, theta2 = .64, nodes = [], links = [], distances, strengths, charges;\n    function repulse(node) {\n      return function(quad, x1, _, x2) {\n        if (quad.point !== node) {\n          var dx = quad.cx - node.x, dy = quad.cy - node.y, dw = x2 - x1, dn = dx * dx + dy * dy;\n          if (dw * dw / theta2 < dn) {\n            if (dn < chargeDistance2) {\n              var k = quad.charge / dn;\n              node.px -= dx * k;\n              node.py -= dy * k;\n            }\n            return true;\n          }\n          if (quad.point && dn && dn < chargeDistance2) {\n            var k = quad.pointCharge / dn;\n            node.px -= dx * k;\n            node.py -= dy * k;\n          }\n        }\n        return !quad.charge;\n      };\n    }\n    force.tick = function() {\n      if ((alpha *= .99) < .005) {\n        event.end({\n          type: \"end\",\n          alpha: alpha = 0\n        });\n        return true;\n      }\n      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        s = o.source;\n        t = o.target;\n        x = t.x - s.x;\n        y = t.y - s.y;\n        if (l = x * x + y * y) {\n          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n          x *= l;\n          y *= l;\n          t.x -= x * (k = s.weight / (t.weight + s.weight));\n          t.y -= y * k;\n          s.x += x * (k = 1 - k);\n          s.y += y * k;\n        }\n      }\n      if (k = alpha * gravity) {\n        x = size[0] / 2;\n        y = size[1] / 2;\n        i = -1;\n        if (k) while (++i < n) {\n          o = nodes[i];\n          o.x += (x - o.x) * k;\n          o.y += (y - o.y) * k;\n        }\n      }\n      if (charge) {\n        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n        i = -1;\n        while (++i < n) {\n          if (!(o = nodes[i]).fixed) {\n            q.visit(repulse(o));\n          }\n        }\n      }\n      i = -1;\n      while (++i < n) {\n        o = nodes[i];\n        if (o.fixed) {\n          o.x = o.px;\n          o.y = o.py;\n        } else {\n          o.x -= (o.px - (o.px = o.x)) * friction;\n          o.y -= (o.py - (o.py = o.y)) * friction;\n        }\n      }\n      event.tick({\n        type: \"tick\",\n        alpha: alpha\n      });\n    };\n    force.nodes = function(x) {\n      if (!arguments.length) return nodes;\n      nodes = x;\n      return force;\n    };\n    force.links = function(x) {\n      if (!arguments.length) return links;\n      links = x;\n      return force;\n    };\n    force.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return force;\n    };\n    force.linkDistance = function(x) {\n      if (!arguments.length) return linkDistance;\n      linkDistance = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.distance = force.linkDistance;\n    force.linkStrength = function(x) {\n      if (!arguments.length) return linkStrength;\n      linkStrength = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.friction = function(x) {\n      if (!arguments.length) return friction;\n      friction = +x;\n      return force;\n    };\n    force.charge = function(x) {\n      if (!arguments.length) return charge;\n      charge = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.chargeDistance = function(x) {\n      if (!arguments.length) return Math.sqrt(chargeDistance2);\n      chargeDistance2 = x * x;\n      return force;\n    };\n    force.gravity = function(x) {\n      if (!arguments.length) return gravity;\n      gravity = +x;\n      return force;\n    };\n    force.theta = function(x) {\n      if (!arguments.length) return Math.sqrt(theta2);\n      theta2 = x * x;\n      return force;\n    };\n    force.alpha = function(x) {\n      if (!arguments.length) return alpha;\n      x = +x;\n      if (alpha) {\n        if (x > 0) alpha = x; else alpha = 0;\n      } else if (x > 0) {\n        event.start({\n          type: \"start\",\n          alpha: alpha = x\n        });\n        d3.timer(force.tick);\n      }\n      return force;\n    };\n    force.start = function() {\n      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;\n      for (i = 0; i < n; ++i) {\n        (o = nodes[i]).index = i;\n        o.weight = 0;\n      }\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        if (typeof o.source == \"number\") o.source = nodes[o.source];\n        if (typeof o.target == \"number\") o.target = nodes[o.target];\n        ++o.source.weight;\n        ++o.target.weight;\n      }\n      for (i = 0; i < n; ++i) {\n        o = nodes[i];\n        if (isNaN(o.x)) o.x = position(\"x\", w);\n        if (isNaN(o.y)) o.y = position(\"y\", h);\n        if (isNaN(o.px)) o.px = o.x;\n        if (isNaN(o.py)) o.py = o.y;\n      }\n      distances = [];\n      if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;\n      strengths = [];\n      if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;\n      charges = [];\n      if (typeof charge === \"function\") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;\n      function position(dimension, size) {\n        if (!neighbors) {\n          neighbors = new Array(n);\n          for (j = 0; j < n; ++j) {\n            neighbors[j] = [];\n          }\n          for (j = 0; j < m; ++j) {\n            var o = links[j];\n            neighbors[o.source.index].push(o.target);\n            neighbors[o.target.index].push(o.source);\n          }\n        }\n        var candidates = neighbors[i], j = -1, m = candidates.length, x;\n        while (++j < m) if (!isNaN(x = candidates[j][dimension])) return x;\n        return Math.random() * size;\n      }\n      return force.resume();\n    };\n    force.resume = function() {\n      return force.alpha(.1);\n    };\n    force.stop = function() {\n      return force.alpha(0);\n    };\n    force.drag = function() {\n      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\n      if (!arguments.length) return drag;\n      this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\n    };\n    function dragmove(d) {\n      d.px = d3.event.x, d.py = d3.event.y;\n      force.resume();\n    }\n    return d3.rebind(force, event, \"on\");\n  };\n  function d3_layout_forceDragstart(d) {\n    d.fixed |= 2;\n  }\n  function d3_layout_forceDragend(d) {\n    d.fixed &= ~6;\n  }\n  function d3_layout_forceMouseover(d) {\n    d.fixed |= 4;\n    d.px = d.x, d.py = d.y;\n  }\n  function d3_layout_forceMouseout(d) {\n    d.fixed &= ~4;\n  }\n  function d3_layout_forceAccumulate(quad, alpha, charges) {\n    var cx = 0, cy = 0;\n    quad.charge = 0;\n    if (!quad.leaf) {\n      var nodes = quad.nodes, n = nodes.length, i = -1, c;\n      while (++i < n) {\n        c = nodes[i];\n        if (c == null) continue;\n        d3_layout_forceAccumulate(c, alpha, charges);\n        quad.charge += c.charge;\n        cx += c.charge * c.cx;\n        cy += c.charge * c.cy;\n      }\n    }\n    if (quad.point) {\n      if (!quad.leaf) {\n        quad.point.x += Math.random() - .5;\n        quad.point.y += Math.random() - .5;\n      }\n      var k = alpha * charges[quad.point.index];\n      quad.charge += quad.pointCharge = k;\n      cx += k * quad.point.x;\n      cy += k * quad.point.y;\n    }\n    quad.cx = cx / quad.charge;\n    quad.cy = cy / quad.charge;\n  }\n  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1, d3_layout_forceChargeDistance2 = Infinity;\n  d3.layout.hierarchy = function() {\n    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;\n    function hierarchy(root) {\n      var stack = [ root ], nodes = [], node;\n      root.depth = 0;\n      while ((node = stack.pop()) != null) {\n        nodes.push(node);\n        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {\n          var n, childs, child;\n          while (--n >= 0) {\n            stack.push(child = childs[n]);\n            child.parent = node;\n            child.depth = node.depth + 1;\n          }\n          if (value) node.value = 0;\n          node.children = childs;\n        } else {\n          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          delete node.children;\n        }\n      }\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var childs, parent;\n        if (sort && (childs = node.children)) childs.sort(sort);\n        if (value && (parent = node.parent)) parent.value += node.value;\n      });\n      return nodes;\n    }\n    hierarchy.sort = function(x) {\n      if (!arguments.length) return sort;\n      sort = x;\n      return hierarchy;\n    };\n    hierarchy.children = function(x) {\n      if (!arguments.length) return children;\n      children = x;\n      return hierarchy;\n    };\n    hierarchy.value = function(x) {\n      if (!arguments.length) return value;\n      value = x;\n      return hierarchy;\n    };\n    hierarchy.revalue = function(root) {\n      if (value) {\n        d3_layout_hierarchyVisitBefore(root, function(node) {\n          if (node.children) node.value = 0;\n        });\n        d3_layout_hierarchyVisitAfter(root, function(node) {\n          var parent;\n          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          if (parent = node.parent) parent.value += node.value;\n        });\n      }\n      return root;\n    };\n    return hierarchy;\n  };\n  function d3_layout_hierarchyRebind(object, hierarchy) {\n    d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n    object.nodes = object;\n    object.links = d3_layout_hierarchyLinks;\n    return object;\n  }\n  function d3_layout_hierarchyVisitBefore(node, callback) {\n    var nodes = [ node ];\n    while ((node = nodes.pop()) != null) {\n      callback(node);\n      if ((children = node.children) && (n = children.length)) {\n        var n, children;\n        while (--n >= 0) nodes.push(children[n]);\n      }\n    }\n  }\n  function d3_layout_hierarchyVisitAfter(node, callback) {\n    var nodes = [ node ], nodes2 = [];\n    while ((node = nodes.pop()) != null) {\n      nodes2.push(node);\n      if ((children = node.children) && (n = children.length)) {\n        var i = -1, n, children;\n        while (++i < n) nodes.push(children[i]);\n      }\n    }\n    while ((node = nodes2.pop()) != null) {\n      callback(node);\n    }\n  }\n  function d3_layout_hierarchyChildren(d) {\n    return d.children;\n  }\n  function d3_layout_hierarchyValue(d) {\n    return d.value;\n  }\n  function d3_layout_hierarchySort(a, b) {\n    return b.value - a.value;\n  }\n  function d3_layout_hierarchyLinks(nodes) {\n    return d3.merge(nodes.map(function(parent) {\n      return (parent.children || []).map(function(child) {\n        return {\n          source: parent,\n          target: child\n        };\n      });\n    }));\n  }\n  d3.layout.partition = function() {\n    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];\n    function position(node, x, dx, dy) {\n      var children = node.children;\n      node.x = x;\n      node.y = node.depth * dy;\n      node.dx = dx;\n      node.dy = dy;\n      if (children && (n = children.length)) {\n        var i = -1, n, c, d;\n        dx = node.value ? dx / node.value : 0;\n        while (++i < n) {\n          position(c = children[i], x, d = c.value * dx, dy);\n          x += d;\n        }\n      }\n    }\n    function depth(node) {\n      var children = node.children, d = 0;\n      if (children && (n = children.length)) {\n        var i = -1, n;\n        while (++i < n) d = Math.max(d, depth(children[i]));\n      }\n      return 1 + d;\n    }\n    function partition(d, i) {\n      var nodes = hierarchy.call(this, d, i);\n      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\n      return nodes;\n    }\n    partition.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return partition;\n    };\n    return d3_layout_hierarchyRebind(partition, hierarchy);\n  };\n  d3.layout.pie = function() {\n    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ;\n    function pie(data) {\n      var values = data.map(function(d, i) {\n        return +value.call(pie, d, i);\n      });\n      var a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle);\n      var k = ((typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a) / d3.sum(values);\n      var index = d3.range(data.length);\n      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {\n        return values[j] - values[i];\n      } : function(i, j) {\n        return sort(data[i], data[j]);\n      });\n      var arcs = [];\n      index.forEach(function(i) {\n        var d;\n        arcs[i] = {\n          data: data[i],\n          value: d = values[i],\n          startAngle: a,\n          endAngle: a += d * k\n        };\n      });\n      return arcs;\n    }\n    pie.value = function(x) {\n      if (!arguments.length) return value;\n      value = x;\n      return pie;\n    };\n    pie.sort = function(x) {\n      if (!arguments.length) return sort;\n      sort = x;\n      return pie;\n    };\n    pie.startAngle = function(x) {\n      if (!arguments.length) return startAngle;\n      startAngle = x;\n      return pie;\n    };\n    pie.endAngle = function(x) {\n      if (!arguments.length) return endAngle;\n      endAngle = x;\n      return pie;\n    };\n    return pie;\n  };\n  var d3_layout_pieSortByValue = {};\n  d3.layout.stack = function() {\n    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;\n    function stack(data, index) {\n      if (!(n = data.length)) return data;\n      var series = data.map(function(d, i) {\n        return values.call(stack, d, i);\n      });\n      var points = series.map(function(d) {\n        return d.map(function(v, i) {\n          return [ x.call(stack, v, i), y.call(stack, v, i) ];\n        });\n      });\n      var orders = order.call(stack, points, index);\n      series = d3.permute(series, orders);\n      points = d3.permute(points, orders);\n      var offsets = offset.call(stack, points, index);\n      var m = series[0].length, n, i, j, o;\n      for (j = 0; j < m; ++j) {\n        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\n        for (i = 1; i < n; ++i) {\n          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\n        }\n      }\n      return data;\n    }\n    stack.values = function(x) {\n      if (!arguments.length) return values;\n      values = x;\n      return stack;\n    };\n    stack.order = function(x) {\n      if (!arguments.length) return order;\n      order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\n      return stack;\n    };\n    stack.offset = function(x) {\n      if (!arguments.length) return offset;\n      offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\n      return stack;\n    };\n    stack.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      return stack;\n    };\n    stack.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      return stack;\n    };\n    stack.out = function(z) {\n      if (!arguments.length) return out;\n      out = z;\n      return stack;\n    };\n    return stack;\n  };\n  function d3_layout_stackX(d) {\n    return d.x;\n  }\n  function d3_layout_stackY(d) {\n    return d.y;\n  }\n  function d3_layout_stackOut(d, y0, y) {\n    d.y0 = y0;\n    d.y = y;\n  }\n  var d3_layout_stackOrders = d3.map({\n    \"inside-out\": function(data) {\n      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {\n        return max[a] - max[b];\n      }), top = 0, bottom = 0, tops = [], bottoms = [];\n      for (i = 0; i < n; ++i) {\n        j = index[i];\n        if (top < bottom) {\n          top += sums[j];\n          tops.push(j);\n        } else {\n          bottom += sums[j];\n          bottoms.push(j);\n        }\n      }\n      return bottoms.reverse().concat(tops);\n    },\n    reverse: function(data) {\n      return d3.range(data.length).reverse();\n    },\n    \"default\": d3_layout_stackOrderDefault\n  });\n  var d3_layout_stackOffsets = d3.map({\n    silhouette: function(data) {\n      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o > max) max = o;\n        sums.push(o);\n      }\n      for (j = 0; j < m; ++j) {\n        y0[j] = (max - sums[j]) / 2;\n      }\n      return y0;\n    },\n    wiggle: function(data) {\n      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];\n      y0[0] = o = o0 = 0;\n      for (j = 1; j < m; ++j) {\n        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];\n        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\n          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\n            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\n          }\n          s2 += s3 * data[i][j][1];\n        }\n        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\n        if (o < o0) o0 = o;\n      }\n      for (j = 0; j < m; ++j) y0[j] -= o0;\n      return y0;\n    },\n    expand: function(data) {\n      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;\n      }\n      for (j = 0; j < m; ++j) y0[j] = 0;\n      return y0;\n    },\n    zero: d3_layout_stackOffsetZero\n  });\n  function d3_layout_stackOrderDefault(data) {\n    return d3.range(data.length);\n  }\n  function d3_layout_stackOffsetZero(data) {\n    var j = -1, m = data[0].length, y0 = [];\n    while (++j < m) y0[j] = 0;\n    return y0;\n  }\n  function d3_layout_stackMaxIndex(array) {\n    var i = 1, j = 0, v = array[0][1], k, n = array.length;\n    for (;i < n; ++i) {\n      if ((k = array[i][1]) > v) {\n        j = i;\n        v = k;\n      }\n    }\n    return j;\n  }\n  function d3_layout_stackReduceSum(d) {\n    return d.reduce(d3_layout_stackSum, 0);\n  }\n  function d3_layout_stackSum(p, d) {\n    return p + d[1];\n  }\n  d3.layout.histogram = function() {\n    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;\n    function histogram(data, i) {\n      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;\n      while (++i < m) {\n        bin = bins[i] = [];\n        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\n        bin.y = 0;\n      }\n      if (m > 0) {\n        i = -1;\n        while (++i < n) {\n          x = values[i];\n          if (x >= range[0] && x <= range[1]) {\n            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\n            bin.y += k;\n            bin.push(data[i]);\n          }\n        }\n      }\n      return bins;\n    }\n    histogram.value = function(x) {\n      if (!arguments.length) return valuer;\n      valuer = x;\n      return histogram;\n    };\n    histogram.range = function(x) {\n      if (!arguments.length) return ranger;\n      ranger = d3_functor(x);\n      return histogram;\n    };\n    histogram.bins = function(x) {\n      if (!arguments.length) return binner;\n      binner = typeof x === \"number\" ? function(range) {\n        return d3_layout_histogramBinFixed(range, x);\n      } : d3_functor(x);\n      return histogram;\n    };\n    histogram.frequency = function(x) {\n      if (!arguments.length) return frequency;\n      frequency = !!x;\n      return histogram;\n    };\n    return histogram;\n  };\n  function d3_layout_histogramBinSturges(range, values) {\n    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\n  }\n  function d3_layout_histogramBinFixed(range, n) {\n    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];\n    while (++x <= n) f[x] = m * x + b;\n    return f;\n  }\n  function d3_layout_histogramRange(values) {\n    return [ d3.min(values), d3.max(values) ];\n  }\n  d3.layout.pack = function() {\n    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;\n    function pack(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function() {\n        return radius;\n      };\n      root.x = root.y = 0;\n      d3_layout_hierarchyVisitAfter(root, function(d) {\n        d.r = +r(d.value);\n      });\n      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n      if (padding) {\n        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r += dr;\n        });\n        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r -= dr;\n        });\n      }\n      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\n      return nodes;\n    }\n    pack.size = function(_) {\n      if (!arguments.length) return size;\n      size = _;\n      return pack;\n    };\n    pack.radius = function(_) {\n      if (!arguments.length) return radius;\n      radius = _ == null || typeof _ === \"function\" ? _ : +_;\n      return pack;\n    };\n    pack.padding = function(_) {\n      if (!arguments.length) return padding;\n      padding = +_;\n      return pack;\n    };\n    return d3_layout_hierarchyRebind(pack, hierarchy);\n  };\n  function d3_layout_packSort(a, b) {\n    return a.value - b.value;\n  }\n  function d3_layout_packInsert(a, b) {\n    var c = a._pack_next;\n    a._pack_next = b;\n    b._pack_prev = a;\n    b._pack_next = c;\n    c._pack_prev = b;\n  }\n  function d3_layout_packSplice(a, b) {\n    a._pack_next = b;\n    b._pack_prev = a;\n  }\n  function d3_layout_packIntersects(a, b) {\n    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;\n    return .999 * dr * dr > dx * dx + dy * dy;\n  }\n  function d3_layout_packSiblings(node) {\n    if (!(nodes = node.children) || !(n = nodes.length)) return;\n    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;\n    function bound(node) {\n      xMin = Math.min(node.x - node.r, xMin);\n      xMax = Math.max(node.x + node.r, xMax);\n      yMin = Math.min(node.y - node.r, yMin);\n      yMax = Math.max(node.y + node.r, yMax);\n    }\n    nodes.forEach(d3_layout_packLink);\n    a = nodes[0];\n    a.x = -a.r;\n    a.y = 0;\n    bound(a);\n    if (n > 1) {\n      b = nodes[1];\n      b.x = b.r;\n      b.y = 0;\n      bound(b);\n      if (n > 2) {\n        c = nodes[2];\n        d3_layout_packPlace(a, b, c);\n        bound(c);\n        d3_layout_packInsert(a, c);\n        a._pack_prev = c;\n        d3_layout_packInsert(c, b);\n        b = a._pack_next;\n        for (i = 3; i < n; i++) {\n          d3_layout_packPlace(a, b, c = nodes[i]);\n          var isect = 0, s1 = 1, s2 = 1;\n          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\n            if (d3_layout_packIntersects(j, c)) {\n              isect = 1;\n              break;\n            }\n          }\n          if (isect == 1) {\n            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\n              if (d3_layout_packIntersects(k, c)) {\n                break;\n              }\n            }\n          }\n          if (isect) {\n            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);\n            i--;\n          } else {\n            d3_layout_packInsert(a, c);\n            b = c;\n            bound(c);\n          }\n        }\n      }\n    }\n    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;\n    for (i = 0; i < n; i++) {\n      c = nodes[i];\n      c.x -= cx;\n      c.y -= cy;\n      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\n    }\n    node.r = cr;\n    nodes.forEach(d3_layout_packUnlink);\n  }\n  function d3_layout_packLink(node) {\n    node._pack_next = node._pack_prev = node;\n  }\n  function d3_layout_packUnlink(node) {\n    delete node._pack_next;\n    delete node._pack_prev;\n  }\n  function d3_layout_packTransform(node, x, y, k) {\n    var children = node.children;\n    node.x = x += k * node.x;\n    node.y = y += k * node.y;\n    node.r *= k;\n    if (children) {\n      var i = -1, n = children.length;\n      while (++i < n) d3_layout_packTransform(children[i], x, y, k);\n    }\n  }\n  function d3_layout_packPlace(a, b, c) {\n    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;\n    if (db && (dx || dy)) {\n      var da = b.r + c.r, dc = dx * dx + dy * dy;\n      da *= da;\n      db *= db;\n      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n      c.x = a.x + x * dx + y * dy;\n      c.y = a.y + x * dy - y * dx;\n    } else {\n      c.x = a.x + db;\n      c.y = a.y;\n    }\n  }\n  d3.layout.tree = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = null;\n    function tree(d, i) {\n      var nodes = hierarchy.call(this, d, i), root0 = nodes[0], root1 = wrapTree(root0);\n      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;\n      d3_layout_hierarchyVisitBefore(root1, secondWalk);\n      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode); else {\n        var left = root0, right = root0, bottom = root0;\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          if (node.x < left.x) left = node;\n          if (node.x > right.x) right = node;\n          if (node.depth > bottom.depth) bottom = node;\n        });\n        var tx = separation(left, right) / 2 - left.x, kx = size[0] / (right.x + separation(right, left) / 2 + tx), ky = size[1] / (bottom.depth || 1);\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          node.x = (node.x + tx) * kx;\n          node.y = node.depth * ky;\n        });\n      }\n      return nodes;\n    }\n    function wrapTree(root0) {\n      var root1 = {\n        A: null,\n        children: [ root0 ]\n      }, queue = [ root1 ], node1;\n      while ((node1 = queue.pop()) != null) {\n        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {\n          queue.push((children[i] = child = {\n            _: children[i],\n            parent: node1,\n            children: (child = children[i].children) && child.slice() || [],\n            A: null,\n            a: null,\n            z: 0,\n            m: 0,\n            c: 0,\n            s: 0,\n            t: null,\n            i: i\n          }).a = child);\n        }\n      }\n      return root1.children[0];\n    }\n    function firstWalk(v) {\n      var children = v.children, siblings = v.parent.children, w = v.i ? siblings[v.i - 1] : null;\n      if (children.length) {\n        d3_layout_treeShift(v);\n        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n        if (w) {\n          v.z = w.z + separation(v._, w._);\n          v.m = v.z - midpoint;\n        } else {\n          v.z = midpoint;\n        }\n      } else if (w) {\n        v.z = w.z + separation(v._, w._);\n      }\n      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n    }\n    function secondWalk(v) {\n      v._.x = v.z + v.parent.m;\n      v.m += v.parent.m;\n    }\n    function apportion(v, w, ancestor) {\n      if (w) {\n        var vip = v, vop = v, vim = w, vom = vip.parent.children[0], sip = vip.m, sop = vop.m, sim = vim.m, som = vom.m, shift;\n        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\n          vom = d3_layout_treeLeft(vom);\n          vop = d3_layout_treeRight(vop);\n          vop.a = v;\n          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n          if (shift > 0) {\n            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);\n            sip += shift;\n            sop += shift;\n          }\n          sim += vim.m;\n          sip += vip.m;\n          som += vom.m;\n          sop += vop.m;\n        }\n        if (vim && !d3_layout_treeRight(vop)) {\n          vop.t = vim;\n          vop.m += sim - sop;\n        }\n        if (vip && !d3_layout_treeLeft(vom)) {\n          vom.t = vip;\n          vom.m += sip - som;\n          ancestor = v;\n        }\n      }\n      return ancestor;\n    }\n    function sizeNode(node) {\n      node.x *= size[0];\n      node.y = node.depth * size[1];\n    }\n    tree.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return tree;\n    };\n    tree.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null ? sizeNode : null;\n      return tree;\n    };\n    tree.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) == null ? null : sizeNode;\n      return tree;\n    };\n    return d3_layout_hierarchyRebind(tree, hierarchy);\n  };\n  function d3_layout_treeSeparation(a, b) {\n    return a.parent == b.parent ? 1 : 2;\n  }\n  function d3_layout_treeLeft(v) {\n    var children = v.children;\n    return children.length ? children[0] : v.t;\n  }\n  function d3_layout_treeRight(v) {\n    var children = v.children, n;\n    return (n = children.length) ? children[n - 1] : v.t;\n  }\n  function d3_layout_treeMove(wm, wp, shift) {\n    var change = shift / (wp.i - wm.i);\n    wp.c -= change;\n    wp.s += shift;\n    wm.c += change;\n    wp.z += shift;\n    wp.m += shift;\n  }\n  function d3_layout_treeShift(v) {\n    var shift = 0, change = 0, children = v.children, i = children.length, w;\n    while (--i >= 0) {\n      w = children[i];\n      w.z += shift;\n      w.m += shift;\n      shift += w.s + (change += w.c);\n    }\n  }\n  function d3_layout_treeAncestor(vim, v, ancestor) {\n    return vim.a.parent === v.parent ? vim.a : ancestor;\n  }\n  d3.layout.cluster = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\n    function cluster(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var children = node.children;\n        if (children && children.length) {\n          node.x = d3_layout_clusterX(children);\n          node.y = d3_layout_clusterY(children);\n        } else {\n          node.x = previousNode ? x += separation(node, previousNode) : 0;\n          node.y = 0;\n          previousNode = node;\n        }\n      });\n      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;\n      d3_layout_hierarchyVisitAfter(root, nodeSize ? function(node) {\n        node.x = (node.x - root.x) * size[0];\n        node.y = (root.y - node.y) * size[1];\n      } : function(node) {\n        node.x = (node.x - x0) / (x1 - x0) * size[0];\n        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\n      });\n      return nodes;\n    }\n    cluster.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return cluster;\n    };\n    cluster.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null;\n      return cluster;\n    };\n    cluster.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) != null;\n      return cluster;\n    };\n    return d3_layout_hierarchyRebind(cluster, hierarchy);\n  };\n  function d3_layout_clusterY(children) {\n    return 1 + d3.max(children, function(child) {\n      return child.y;\n    });\n  }\n  function d3_layout_clusterX(children) {\n    return children.reduce(function(x, child) {\n      return x + child.x;\n    }, 0) / children.length;\n  }\n  function d3_layout_clusterLeft(node) {\n    var children = node.children;\n    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\n  }\n  function d3_layout_clusterRight(node) {\n    var children = node.children, n;\n    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\n  }\n  d3.layout.treemap = function() {\n    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = \"squarify\", ratio = .5 * (1 + Math.sqrt(5));\n    function scale(children, k) {\n      var i = -1, n = children.length, child, area;\n      while (++i < n) {\n        area = (child = children[i]).value * (k < 0 ? 0 : k);\n        child.area = isNaN(area) || area <= 0 ? 0 : area;\n      }\n    }\n    function squarify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while ((n = remaining.length) > 0) {\n          row.push(child = remaining[n - 1]);\n          row.area += child.area;\n          if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\n            remaining.pop();\n            best = score;\n          } else {\n            row.area -= row.pop().area;\n            position(row, u, rect, false);\n            u = Math.min(rect.dx, rect.dy);\n            row.length = row.area = 0;\n            best = Infinity;\n          }\n        }\n        if (row.length) {\n          position(row, u, rect, true);\n          row.length = row.area = 0;\n        }\n        children.forEach(squarify);\n      }\n    }\n    function stickify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), remaining = children.slice(), child, row = [];\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while (child = remaining.pop()) {\n          row.push(child);\n          row.area += child.area;\n          if (child.z != null) {\n            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\n            row.length = row.area = 0;\n          }\n        }\n        children.forEach(stickify);\n      }\n    }\n    function worst(row, u) {\n      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;\n      while (++i < n) {\n        if (!(r = row[i].area)) continue;\n        if (r < rmin) rmin = r;\n        if (r > rmax) rmax = r;\n      }\n      s *= s;\n      u *= u;\n      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\n    }\n    function position(row, u, rect, flush) {\n      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;\n      if (u == rect.dx) {\n        if (flush || v > rect.dy) v = rect.dy;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dy = v;\n          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\n        }\n        o.z = true;\n        o.dx += rect.x + rect.dx - x;\n        rect.y += v;\n        rect.dy -= v;\n      } else {\n        if (flush || v > rect.dx) v = rect.dx;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dx = v;\n          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\n        }\n        o.z = false;\n        o.dy += rect.y + rect.dy - y;\n        rect.x += v;\n        rect.dx -= v;\n      }\n    }\n    function treemap(d) {\n      var nodes = stickies || hierarchy(d), root = nodes[0];\n      root.x = 0;\n      root.y = 0;\n      root.dx = size[0];\n      root.dy = size[1];\n      if (stickies) hierarchy.revalue(root);\n      scale([ root ], root.dx * root.dy / root.value);\n      (stickies ? stickify : squarify)(root);\n      if (sticky) stickies = nodes;\n      return nodes;\n    }\n    treemap.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return treemap;\n    };\n    treemap.padding = function(x) {\n      if (!arguments.length) return padding;\n      function padFunction(node) {\n        var p = x.call(treemap, node, node.depth);\n        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [ p, p, p, p ] : p);\n      }\n      function padConstant(node) {\n        return d3_layout_treemapPad(node, x);\n      }\n      var type;\n      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [ x, x, x, x ], \n      padConstant) : padConstant;\n      return treemap;\n    };\n    treemap.round = function(x) {\n      if (!arguments.length) return round != Number;\n      round = x ? Math.round : Number;\n      return treemap;\n    };\n    treemap.sticky = function(x) {\n      if (!arguments.length) return sticky;\n      sticky = x;\n      stickies = null;\n      return treemap;\n    };\n    treemap.ratio = function(x) {\n      if (!arguments.length) return ratio;\n      ratio = x;\n      return treemap;\n    };\n    treemap.mode = function(x) {\n      if (!arguments.length) return mode;\n      mode = x + \"\";\n      return treemap;\n    };\n    return d3_layout_hierarchyRebind(treemap, hierarchy);\n  };\n  function d3_layout_treemapPadNull(node) {\n    return {\n      x: node.x,\n      y: node.y,\n      dx: node.dx,\n      dy: node.dy\n    };\n  }\n  function d3_layout_treemapPad(node, padding) {\n    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];\n    if (dx < 0) {\n      x += dx / 2;\n      dx = 0;\n    }\n    if (dy < 0) {\n      y += dy / 2;\n      dy = 0;\n    }\n    return {\n      x: x,\n      y: y,\n      dx: dx,\n      dy: dy\n    };\n  }\n  d3.random = {\n    normal: function(µ, σ) {\n      var n = arguments.length;\n      if (n < 2) σ = 1;\n      if (n < 1) µ = 0;\n      return function() {\n        var x, y, r;\n        do {\n          x = Math.random() * 2 - 1;\n          y = Math.random() * 2 - 1;\n          r = x * x + y * y;\n        } while (!r || r > 1);\n        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\n      };\n    },\n    logNormal: function() {\n      var random = d3.random.normal.apply(d3, arguments);\n      return function() {\n        return Math.exp(random());\n      };\n    },\n    bates: function(m) {\n      var random = d3.random.irwinHall(m);\n      return function() {\n        return random() / m;\n      };\n    },\n    irwinHall: function(m) {\n      return function() {\n        for (var s = 0, j = 0; j < m; j++) s += Math.random();\n        return s;\n      };\n    }\n  };\n  d3.scale = {};\n  function d3_scaleExtent(domain) {\n    var start = domain[0], stop = domain[domain.length - 1];\n    return start < stop ? [ start, stop ] : [ stop, start ];\n  }\n  function d3_scaleRange(scale) {\n    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n  }\n  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\n    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);\n    return function(x) {\n      return i(u(x));\n    };\n  }\n  function d3_scale_nice(domain, nice) {\n    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;\n    if (x1 < x0) {\n      dx = i0, i0 = i1, i1 = dx;\n      dx = x0, x0 = x1, x1 = dx;\n    }\n    domain[i0] = nice.floor(x0);\n    domain[i1] = nice.ceil(x1);\n    return domain;\n  }\n  function d3_scale_niceStep(step) {\n    return step ? {\n      floor: function(x) {\n        return Math.floor(x / step) * step;\n      },\n      ceil: function(x) {\n        return Math.ceil(x / step) * step;\n      }\n    } : d3_scale_niceIdentity;\n  }\n  var d3_scale_niceIdentity = {\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\n    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;\n    if (domain[k] < domain[0]) {\n      domain = domain.slice().reverse();\n      range = range.slice().reverse();\n    }\n    while (++j <= k) {\n      u.push(uninterpolate(domain[j - 1], domain[j]));\n      i.push(interpolate(range[j - 1], range[j]));\n    }\n    return function(x) {\n      var j = d3.bisect(domain, x, 1, k) - 1;\n      return i[j](u[j](x));\n    };\n  }\n  d3.scale.linear = function() {\n    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);\n  };\n  function d3_scale_linear(domain, range, interpolate, clamp) {\n    var output, input;\n    function rescale() {\n      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\n      output = linear(domain, range, uninterpolate, interpolate);\n      input = linear(range, domain, uninterpolate, d3_interpolate);\n      return scale;\n    }\n    function scale(x) {\n      return output(x);\n    }\n    scale.invert = function(y) {\n      return input(y);\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(Number);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.rangeRound = function(x) {\n      return scale.range(x).interpolate(d3_interpolateRound);\n    };\n    scale.clamp = function(x) {\n      if (!arguments.length) return clamp;\n      clamp = x;\n      return rescale();\n    };\n    scale.interpolate = function(x) {\n      if (!arguments.length) return interpolate;\n      interpolate = x;\n      return rescale();\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      d3_scale_linearNice(domain, m);\n      return rescale();\n    };\n    scale.copy = function() {\n      return d3_scale_linear(domain, range, interpolate, clamp);\n    };\n    return rescale();\n  }\n  function d3_scale_linearRebind(scale, linear) {\n    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n  }\n  function d3_scale_linearNice(domain, m) {\n    return d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n  }\n  function d3_scale_linearTickRange(domain, m) {\n    if (m == null) m = 10;\n    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;\n    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;\n    extent[0] = Math.ceil(extent[0] / step) * step;\n    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\n    extent[2] = step;\n    return extent;\n  }\n  function d3_scale_linearTicks(domain, m) {\n    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\n  }\n  function d3_scale_linearTickFormat(domain, m, format) {\n    var range = d3_scale_linearTickRange(domain, m);\n    if (format) {\n      var match = d3_format_re.exec(format);\n      match.shift();\n      if (match[8] === \"s\") {\n        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));\n        if (!match[7]) match[7] = \".\" + d3_scale_linearPrecision(prefix.scale(range[2]));\n        match[8] = \"f\";\n        format = d3.format(match.join(\"\"));\n        return function(d) {\n          return format(prefix.scale(d)) + prefix.symbol;\n        };\n      }\n      if (!match[7]) match[7] = \".\" + d3_scale_linearFormatPrecision(match[8], range);\n      format = match.join(\"\");\n    } else {\n      format = \",.\" + d3_scale_linearPrecision(range[2]) + \"f\";\n    }\n    return d3.format(format);\n  }\n  var d3_scale_linearFormatSignificant = {\n    s: 1,\n    g: 1,\n    p: 1,\n    r: 1,\n    e: 1\n  };\n  function d3_scale_linearPrecision(value) {\n    return -Math.floor(Math.log(value) / Math.LN10 + .01);\n  }\n  function d3_scale_linearFormatPrecision(type, range) {\n    var p = d3_scale_linearPrecision(range[2]);\n    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== \"e\") : p - (type === \"%\") * 2;\n  }\n  d3.scale.log = function() {\n    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);\n  };\n  function d3_scale_log(linear, base, positive, domain) {\n    function log(x) {\n      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\n    }\n    function pow(x) {\n      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\n    }\n    function scale(x) {\n      return linear(log(x));\n    }\n    scale.invert = function(x) {\n      return pow(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      positive = x[0] >= 0;\n      linear.domain((domain = x.map(Number)).map(log));\n      return scale;\n    };\n    scale.base = function(_) {\n      if (!arguments.length) return base;\n      base = +_;\n      linear.domain(domain.map(log));\n      return scale;\n    };\n    scale.nice = function() {\n      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\n      linear.domain(niced);\n      domain = niced.map(pow);\n      return scale;\n    };\n    scale.ticks = function() {\n      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;\n      if (isFinite(j - i)) {\n        if (positive) {\n          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);\n          ticks.push(pow(i));\n        } else {\n          ticks.push(pow(i));\n          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);\n        }\n        for (i = 0; ticks[i] < u; i++) {}\n        for (j = ticks.length; ticks[j - 1] > v; j--) {}\n        ticks = ticks.slice(i, j);\n      }\n      return ticks;\n    };\n    scale.tickFormat = function(n, format) {\n      if (!arguments.length) return d3_scale_logFormat;\n      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== \"function\") format = d3.format(format);\n      var k = Math.max(.1, n / scale.ticks().length), f = positive ? (e = 1e-12, Math.ceil) : (e = -1e-12, \n      Math.floor), e;\n      return function(d) {\n        return d / pow(f(log(d) + e)) <= k ? format(d) : \"\";\n      };\n    };\n    scale.copy = function() {\n      return d3_scale_log(linear.copy(), base, positive, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  var d3_scale_logFormat = d3.format(\".0e\"), d3_scale_logNiceNegative = {\n    floor: function(x) {\n      return -Math.ceil(-x);\n    },\n    ceil: function(x) {\n      return -Math.floor(-x);\n    }\n  };\n  d3.scale.pow = function() {\n    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);\n  };\n  function d3_scale_pow(linear, exponent, domain) {\n    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);\n    function scale(x) {\n      return linear(powp(x));\n    }\n    scale.invert = function(x) {\n      return powb(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      linear.domain((domain = x.map(Number)).map(powp));\n      return scale;\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      return scale.domain(d3_scale_linearNice(domain, m));\n    };\n    scale.exponent = function(x) {\n      if (!arguments.length) return exponent;\n      powp = d3_scale_powPow(exponent = x);\n      powb = d3_scale_powPow(1 / exponent);\n      linear.domain(domain.map(powp));\n      return scale;\n    };\n    scale.copy = function() {\n      return d3_scale_pow(linear.copy(), exponent, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_scale_powPow(e) {\n    return function(x) {\n      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\n    };\n  }\n  d3.scale.sqrt = function() {\n    return d3.scale.pow().exponent(.5);\n  };\n  d3.scale.ordinal = function() {\n    return d3_scale_ordinal([], {\n      t: \"range\",\n      a: [ [] ]\n    });\n  };\n  function d3_scale_ordinal(domain, ranger) {\n    var index, range, rangeBand;\n    function scale(x) {\n      return range[((index.get(x) || (ranger.t === \"range\" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];\n    }\n    function steps(start, step) {\n      return d3.range(domain.length).map(function(i) {\n        return start + step * i;\n      });\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = [];\n      index = new d3_Map();\n      var i = -1, n = x.length, xi;\n      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\n      return scale[ranger.t].apply(scale, ranger.a);\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      rangeBand = 0;\n      ranger = {\n        t: \"range\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangePoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = (stop - start) / (Math.max(1, domain.length - 1) + padding);\n      range = steps(domain.length < 2 ? (start + stop) / 2 : start + step * padding / 2, step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangePoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);\n      range = steps(start + step * outerPadding, step);\n      if (reverse) range.reverse();\n      rangeBand = step * (1 - padding);\n      ranger = {\n        t: \"rangeBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding)), error = stop - start - (domain.length - padding) * step;\n      range = steps(start + Math.round(error / 2), step);\n      if (reverse) range.reverse();\n      rangeBand = Math.round(step * (1 - padding));\n      ranger = {\n        t: \"rangeRoundBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBand = function() {\n      return rangeBand;\n    };\n    scale.rangeExtent = function() {\n      return d3_scaleExtent(ranger.a[0]);\n    };\n    scale.copy = function() {\n      return d3_scale_ordinal(domain, ranger);\n    };\n    return scale.domain(domain);\n  }\n  d3.scale.category10 = function() {\n    return d3.scale.ordinal().range(d3_category10);\n  };\n  d3.scale.category20 = function() {\n    return d3.scale.ordinal().range(d3_category20);\n  };\n  d3.scale.category20b = function() {\n    return d3.scale.ordinal().range(d3_category20b);\n  };\n  d3.scale.category20c = function() {\n    return d3.scale.ordinal().range(d3_category20c);\n  };\n  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);\n  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);\n  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);\n  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);\n  d3.scale.quantile = function() {\n    return d3_scale_quantile([], []);\n  };\n  function d3_scale_quantile(domain, range) {\n    var thresholds;\n    function rescale() {\n      var k = 0, q = range.length;\n      thresholds = [];\n      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);\n      return scale;\n    }\n    function scale(x) {\n      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.quantiles = function() {\n      return thresholds;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantile(domain, range);\n    };\n    return rescale();\n  }\n  d3.scale.quantize = function() {\n    return d3_scale_quantize(0, 1, [ 0, 1 ]);\n  };\n  function d3_scale_quantize(x0, x1, range) {\n    var kx, i;\n    function scale(x) {\n      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\n    }\n    function rescale() {\n      kx = range.length / (x1 - x0);\n      i = range.length - 1;\n      return scale;\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return [ x0, x1 ];\n      x0 = +x[0];\n      x1 = +x[x.length - 1];\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      y = y < 0 ? NaN : y / kx + x0;\n      return [ y, y + 1 / kx ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantize(x0, x1, range);\n    };\n    return rescale();\n  }\n  d3.scale.threshold = function() {\n    return d3_scale_threshold([ .5 ], [ 0, 1 ]);\n  };\n  function d3_scale_threshold(domain, range) {\n    function scale(x) {\n      if (x <= x) return range[d3.bisect(domain, x)];\n    }\n    scale.domain = function(_) {\n      if (!arguments.length) return domain;\n      domain = _;\n      return scale;\n    };\n    scale.range = function(_) {\n      if (!arguments.length) return range;\n      range = _;\n      return scale;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return [ domain[y - 1], domain[y] ];\n    };\n    scale.copy = function() {\n      return d3_scale_threshold(domain, range);\n    };\n    return scale;\n  }\n  d3.scale.identity = function() {\n    return d3_scale_identity([ 0, 1 ]);\n  };\n  function d3_scale_identity(domain) {\n    function identity(x) {\n      return +x;\n    }\n    identity.invert = identity;\n    identity.domain = identity.range = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(identity);\n      return identity;\n    };\n    identity.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    identity.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    identity.copy = function() {\n      return d3_scale_identity(domain);\n    };\n    return identity;\n  }\n  d3.svg = {};\n  d3.svg.arc = function() {\n    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n    function arc() {\n      var r0 = innerRadius.apply(this, arguments), r1 = outerRadius.apply(this, arguments), a0 = startAngle.apply(this, arguments) + d3_svg_arcOffset, a1 = endAngle.apply(this, arguments) + d3_svg_arcOffset, da = (a1 < a0 && (da = a0, \n      a0 = a1, a1 = da), a1 - a0), df = da < π ? \"0\" : \"1\", c0 = Math.cos(a0), s0 = Math.sin(a0), c1 = Math.cos(a1), s1 = Math.sin(a1);\n      return da >= d3_svg_arcMax ? r0 ? \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,1 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,1 0,\" + r1 + \"M0,\" + r0 + \"A\" + r0 + \",\" + r0 + \" 0 1,0 0,\" + -r0 + \"A\" + r0 + \",\" + r0 + \" 0 1,0 0,\" + r0 + \"Z\" : \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,1 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,1 0,\" + r1 + \"Z\" : r0 ? \"M\" + r1 * c0 + \",\" + r1 * s0 + \"A\" + r1 + \",\" + r1 + \" 0 \" + df + \",1 \" + r1 * c1 + \",\" + r1 * s1 + \"L\" + r0 * c1 + \",\" + r0 * s1 + \"A\" + r0 + \",\" + r0 + \" 0 \" + df + \",0 \" + r0 * c0 + \",\" + r0 * s0 + \"Z\" : \"M\" + r1 * c0 + \",\" + r1 * s0 + \"A\" + r1 + \",\" + r1 + \" 0 \" + df + \",1 \" + r1 * c1 + \",\" + r1 * s1 + \"L0,0\" + \"Z\";\n    }\n    arc.innerRadius = function(v) {\n      if (!arguments.length) return innerRadius;\n      innerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.outerRadius = function(v) {\n      if (!arguments.length) return outerRadius;\n      outerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return arc;\n    };\n    arc.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return arc;\n    };\n    arc.centroid = function() {\n      var r = (innerRadius.apply(this, arguments) + outerRadius.apply(this, arguments)) / 2, a = (startAngle.apply(this, arguments) + endAngle.apply(this, arguments)) / 2 + d3_svg_arcOffset;\n      return [ Math.cos(a) * r, Math.sin(a) * r ];\n    };\n    return arc;\n  };\n  var d3_svg_arcOffset = -halfπ, d3_svg_arcMax = τ - ε;\n  function d3_svg_arcInnerRadius(d) {\n    return d.innerRadius;\n  }\n  function d3_svg_arcOuterRadius(d) {\n    return d.outerRadius;\n  }\n  function d3_svg_arcStartAngle(d) {\n    return d.startAngle;\n  }\n  function d3_svg_arcEndAngle(d) {\n    return d.endAngle;\n  }\n  function d3_svg_line(projection) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;\n    function line(data) {\n      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points), tension));\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);\n        } else if (points.length) {\n          segment();\n          points = [];\n        }\n      }\n      if (points.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    line.x = function(_) {\n      if (!arguments.length) return x;\n      x = _;\n      return line;\n    };\n    line.y = function(_) {\n      if (!arguments.length) return y;\n      y = _;\n      return line;\n    };\n    line.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return line;\n    };\n    line.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      return line;\n    };\n    line.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return line;\n    };\n    return line;\n  }\n  d3.svg.line = function() {\n    return d3_svg_line(d3_identity);\n  };\n  var d3_svg_lineInterpolators = d3.map({\n    linear: d3_svg_lineLinear,\n    \"linear-closed\": d3_svg_lineLinearClosed,\n    step: d3_svg_lineStep,\n    \"step-before\": d3_svg_lineStepBefore,\n    \"step-after\": d3_svg_lineStepAfter,\n    basis: d3_svg_lineBasis,\n    \"basis-open\": d3_svg_lineBasisOpen,\n    \"basis-closed\": d3_svg_lineBasisClosed,\n    bundle: d3_svg_lineBundle,\n    cardinal: d3_svg_lineCardinal,\n    \"cardinal-open\": d3_svg_lineCardinalOpen,\n    \"cardinal-closed\": d3_svg_lineCardinalClosed,\n    monotone: d3_svg_lineMonotone\n  });\n  d3_svg_lineInterpolators.forEach(function(key, value) {\n    value.key = key;\n    value.closed = /-closed$/.test(key);\n  });\n  function d3_svg_lineLinear(points) {\n    return points.join(\"L\");\n  }\n  function d3_svg_lineLinearClosed(points) {\n    return d3_svg_lineLinear(points) + \"Z\";\n  }\n  function d3_svg_lineStep(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\n    if (n > 1) path.push(\"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepBefore(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepAfter(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineCardinalOpen(points, tension) {\n    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, points.length - 1), d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineCardinalClosed(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), \n    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));\n  }\n  function d3_svg_lineCardinal(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineHermite(points, tangents) {\n    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\n      return d3_svg_lineLinear(points);\n    }\n    var quad = points.length != tangents.length, path = \"\", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;\n    if (quad) {\n      path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\n      p0 = points[1];\n      pi = 2;\n    }\n    if (tangents.length > 1) {\n      t = tangents[1];\n      p = points[pi];\n      pi++;\n      path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      for (var i = 2; i < tangents.length; i++, pi++) {\n        p = points[pi];\n        t = tangents[i];\n        path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      }\n    }\n    if (quad) {\n      var lp = points[pi];\n      path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\n    }\n    return path;\n  }\n  function d3_svg_lineCardinalTangents(points, tension) {\n    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;\n    while (++i < n) {\n      p0 = p1;\n      p1 = p2;\n      p2 = points[i];\n      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineBasis(points) {\n    if (points.length < 3) return d3_svg_lineLinear(points);\n    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    points.push(points[n - 1]);\n    while (++i <= n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    points.pop();\n    path.push(\"L\", pi);\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisOpen(points) {\n    if (points.length < 4) return d3_svg_lineLinear(points);\n    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];\n    while (++i < 3) {\n      pi = points[i];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\n    --i;\n    while (++i < n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisClosed(points) {\n    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];\n    while (++i < 4) {\n      pi = points[i % n];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    --i;\n    while (++i < m) {\n      pi = points[i % n];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBundle(points, tension) {\n    var n = points.length - 1;\n    if (n) {\n      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;\n      while (++i <= n) {\n        p = points[i];\n        t = i / n;\n        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\n        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\n      }\n    }\n    return d3_svg_lineBasis(points);\n  }\n  function d3_svg_lineDot4(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n  }\n  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];\n  function d3_svg_lineBasisBezier(path, x, y) {\n    path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\n  }\n  function d3_svg_lineSlope(p0, p1) {\n    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\n  }\n  function d3_svg_lineFiniteDifferences(points) {\n    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);\n    while (++i < j) {\n      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\n    }\n    m[i] = d;\n    return m;\n  }\n  function d3_svg_lineMonotoneTangents(points) {\n    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;\n    while (++i < j) {\n      d = d3_svg_lineSlope(points[i], points[i + 1]);\n      if (abs(d) < ε) {\n        m[i] = m[i + 1] = 0;\n      } else {\n        a = m[i] / d;\n        b = m[i + 1] / d;\n        s = a * a + b * b;\n        if (s > 9) {\n          s = d * 3 / Math.sqrt(s);\n          m[i] = s * a;\n          m[i + 1] = s * b;\n        }\n      }\n    }\n    i = -1;\n    while (++i <= j) {\n      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\n      tangents.push([ s || 0, m[i] * s || 0 ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineMonotone(points) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\n  }\n  d3.svg.line.radial = function() {\n    var line = d3_svg_line(d3_svg_lineRadial);\n    line.radius = line.x, delete line.x;\n    line.angle = line.y, delete line.y;\n    return line;\n  };\n  function d3_svg_lineRadial(points) {\n    var point, i = -1, n = points.length, r, a;\n    while (++i < n) {\n      point = points[i];\n      r = point[0];\n      a = point[1] + d3_svg_arcOffset;\n      point[0] = r * Math.cos(a);\n      point[1] = r * Math.sin(a);\n    }\n    return points;\n  }\n  function d3_svg_area(projection) {\n    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = \"L\", tension = .7;\n    function area(data) {\n      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {\n        return x;\n      } : d3_functor(x1), fy1 = y0 === y1 ? function() {\n        return y;\n      } : d3_functor(y1), x, y;\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);\n          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);\n        } else if (points0.length) {\n          segment();\n          points0 = [];\n          points1 = [];\n        }\n      }\n      if (points0.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    area.x = function(_) {\n      if (!arguments.length) return x1;\n      x0 = x1 = _;\n      return area;\n    };\n    area.x0 = function(_) {\n      if (!arguments.length) return x0;\n      x0 = _;\n      return area;\n    };\n    area.x1 = function(_) {\n      if (!arguments.length) return x1;\n      x1 = _;\n      return area;\n    };\n    area.y = function(_) {\n      if (!arguments.length) return y1;\n      y0 = y1 = _;\n      return area;\n    };\n    area.y0 = function(_) {\n      if (!arguments.length) return y0;\n      y0 = _;\n      return area;\n    };\n    area.y1 = function(_) {\n      if (!arguments.length) return y1;\n      y1 = _;\n      return area;\n    };\n    area.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return area;\n    };\n    area.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      interpolateReverse = interpolate.reverse || interpolate;\n      L = interpolate.closed ? \"M\" : \"L\";\n      return area;\n    };\n    area.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return area;\n    };\n    return area;\n  }\n  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\n  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\n  d3.svg.area = function() {\n    return d3_svg_area(d3_identity);\n  };\n  d3.svg.area.radial = function() {\n    var area = d3_svg_area(d3_svg_lineRadial);\n    area.radius = area.x, delete area.x;\n    area.innerRadius = area.x0, delete area.x0;\n    area.outerRadius = area.x1, delete area.x1;\n    area.angle = area.y, delete area.y;\n    area.startAngle = area.y0, delete area.y0;\n    area.endAngle = area.y1, delete area.y1;\n    return area;\n  };\n  d3.svg.chord = function() {\n    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n    function chord(d, i) {\n      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);\n      return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\n    }\n    function subgroup(self, f, d, i) {\n      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) + d3_svg_arcOffset, a1 = endAngle.call(self, subgroup, i) + d3_svg_arcOffset;\n      return {\n        r: r,\n        a0: a0,\n        a1: a1,\n        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],\n        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]\n      };\n    }\n    function equals(a, b) {\n      return a.a0 == b.a0 && a.a1 == b.a1;\n    }\n    function arc(r, p, a) {\n      return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\n    }\n    function curve(r0, p0, r1, p1) {\n      return \"Q 0,0 \" + p1;\n    }\n    chord.radius = function(v) {\n      if (!arguments.length) return radius;\n      radius = d3_functor(v);\n      return chord;\n    };\n    chord.source = function(v) {\n      if (!arguments.length) return source;\n      source = d3_functor(v);\n      return chord;\n    };\n    chord.target = function(v) {\n      if (!arguments.length) return target;\n      target = d3_functor(v);\n      return chord;\n    };\n    chord.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return chord;\n    };\n    chord.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return chord;\n    };\n    return chord;\n  };\n  function d3_svg_chordRadius(d) {\n    return d.radius;\n  }\n  d3.svg.diagonal = function() {\n    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;\n    function diagonal(d, i) {\n      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {\n        x: p0.x,\n        y: m\n      }, {\n        x: p3.x,\n        y: m\n      }, p3 ];\n      p = p.map(projection);\n      return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\n    }\n    diagonal.source = function(x) {\n      if (!arguments.length) return source;\n      source = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.target = function(x) {\n      if (!arguments.length) return target;\n      target = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.projection = function(x) {\n      if (!arguments.length) return projection;\n      projection = x;\n      return diagonal;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalProjection(d) {\n    return [ d.x, d.y ];\n  }\n  d3.svg.diagonal.radial = function() {\n    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;\n    diagonal.projection = function(x) {\n      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalRadialProjection(projection) {\n    return function() {\n      var d = projection.apply(this, arguments), r = d[0], a = d[1] + d3_svg_arcOffset;\n      return [ r * Math.cos(a), r * Math.sin(a) ];\n    };\n  }\n  d3.svg.symbol = function() {\n    var type = d3_svg_symbolType, size = d3_svg_symbolSize;\n    function symbol(d, i) {\n      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\n    }\n    symbol.type = function(x) {\n      if (!arguments.length) return type;\n      type = d3_functor(x);\n      return symbol;\n    };\n    symbol.size = function(x) {\n      if (!arguments.length) return size;\n      size = d3_functor(x);\n      return symbol;\n    };\n    return symbol;\n  };\n  function d3_svg_symbolSize() {\n    return 64;\n  }\n  function d3_svg_symbolType() {\n    return \"circle\";\n  }\n  function d3_svg_symbolCircle(size) {\n    var r = Math.sqrt(size / π);\n    return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\n  }\n  var d3_svg_symbols = d3.map({\n    circle: d3_svg_symbolCircle,\n    cross: function(size) {\n      var r = Math.sqrt(size / 5) / 2;\n      return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\n    },\n    diamond: function(size) {\n      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;\n      return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\n    },\n    square: function(size) {\n      var r = Math.sqrt(size) / 2;\n      return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\n    },\n    \"triangle-down\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\n    },\n    \"triangle-up\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\n    }\n  });\n  d3.svg.symbolTypes = d3_svg_symbols.keys();\n  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\n  function d3_transition(groups, id) {\n    d3_subclass(groups, d3_transitionPrototype);\n    groups.id = id;\n    return groups;\n  }\n  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;\n  d3_transitionPrototype.call = d3_selectionPrototype.call;\n  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\n  d3_transitionPrototype.node = d3_selectionPrototype.node;\n  d3_transitionPrototype.size = d3_selectionPrototype.size;\n  d3.transition = function(selection) {\n    return arguments.length ? d3_transitionInheritId ? selection.transition() : selection : d3_selectionRoot.transition();\n  };\n  d3.transition.prototype = d3_transitionPrototype;\n  d3_transitionPrototype.select = function(selector) {\n    var id = this.id, subgroups = [], subgroup, subnode, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\n          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n          d3_transitionNode(subnode, i, id, node.__transition__[id]);\n          subgroup.push(subnode);\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_transition(subgroups, id);\n  };\n  d3_transitionPrototype.selectAll = function(selector) {\n    var id = this.id, subgroups = [], subgroup, subnodes, node, subnode, transition;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          transition = node.__transition__[id];\n          subnodes = selector.call(node, node.__data__, i, j);\n          subgroups.push(subgroup = []);\n          for (var k = -1, o = subnodes.length; ++k < o; ) {\n            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, id, transition);\n            subgroup.push(subnode);\n          }\n        }\n      }\n    }\n    return d3_transition(subgroups, id);\n  };\n  d3_transitionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_transition(subgroups, this.id);\n  };\n  d3_transitionPrototype.tween = function(name, tween) {\n    var id = this.id;\n    if (arguments.length < 2) return this.node().__transition__[id].tween.get(name);\n    return d3_selection_each(this, tween == null ? function(node) {\n      node.__transition__[id].tween.remove(name);\n    } : function(node) {\n      node.__transition__[id].tween.set(name, tween);\n    });\n  };\n  function d3_transition_tween(groups, name, value, tween) {\n    var id = groups.id;\n    return d3_selection_each(groups, typeof value === \"function\" ? function(node, i, j) {\n      node.__transition__[id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\n    } : (value = tween(value), function(node) {\n      node.__transition__[id].tween.set(name, value);\n    }));\n  }\n  d3_transitionPrototype.attr = function(nameNS, value) {\n    if (arguments.length < 2) {\n      for (value in nameNS) this.attr(value, nameNS[value]);\n      return this;\n    }\n    var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrTween(b) {\n      return b == null ? attrNull : (b += \"\", function() {\n        var a = this.getAttribute(name), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttribute(name, i(t));\n        });\n      });\n    }\n    function attrTweenNS(b) {\n      return b == null ? attrNullNS : (b += \"\", function() {\n        var a = this.getAttributeNS(name.space, name.local), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttributeNS(name.space, name.local, i(t));\n        });\n      });\n    }\n    return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.attrTween = function(nameNS, tween) {\n    var name = d3.ns.qualify(nameNS);\n    function attrTween(d, i) {\n      var f = tween.call(this, d, i, this.getAttribute(name));\n      return f && function(t) {\n        this.setAttribute(name, f(t));\n      };\n    }\n    function attrTweenNS(d, i) {\n      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\n      return f && function(t) {\n        this.setAttributeNS(name.space, name.local, f(t));\n      };\n    }\n    return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.style(priority, name[priority], value);\n        return this;\n      }\n      priority = \"\";\n    }\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleString(b) {\n      return b == null ? styleNull : (b += \"\", function() {\n        var a = d3_window.getComputedStyle(this, null).getPropertyValue(name), i;\n        return a !== b && (i = d3_interpolate(a, b), function(t) {\n          this.style.setProperty(name, i(t), priority);\n        });\n      });\n    }\n    return d3_transition_tween(this, \"style.\" + name, value, styleString);\n  };\n  d3_transitionPrototype.styleTween = function(name, tween, priority) {\n    if (arguments.length < 3) priority = \"\";\n    function styleTween(d, i) {\n      var f = tween.call(this, d, i, d3_window.getComputedStyle(this, null).getPropertyValue(name));\n      return f && function(t) {\n        this.style.setProperty(name, f(t), priority);\n      };\n    }\n    return this.tween(\"style.\" + name, styleTween);\n  };\n  d3_transitionPrototype.text = function(value) {\n    return d3_transition_tween(this, \"text\", value, d3_transition_text);\n  };\n  function d3_transition_text(b) {\n    if (b == null) b = \"\";\n    return function() {\n      this.textContent = b;\n    };\n  }\n  d3_transitionPrototype.remove = function() {\n    return this.each(\"end.transition\", function() {\n      var p;\n      if (this.__transition__.count < 2 && (p = this.parentNode)) p.removeChild(this);\n    });\n  };\n  d3_transitionPrototype.ease = function(value) {\n    var id = this.id;\n    if (arguments.length < 1) return this.node().__transition__[id].ease;\n    if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\n    return d3_selection_each(this, function(node) {\n      node.__transition__[id].ease = value;\n    });\n  };\n  d3_transitionPrototype.delay = function(value) {\n    var id = this.id;\n    if (arguments.length < 1) return this.node().__transition__[id].delay;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node.__transition__[id].delay = +value.call(node, node.__data__, i, j);\n    } : (value = +value, function(node) {\n      node.__transition__[id].delay = value;\n    }));\n  };\n  d3_transitionPrototype.duration = function(value) {\n    var id = this.id;\n    if (arguments.length < 1) return this.node().__transition__[id].duration;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node.__transition__[id].duration = Math.max(1, value.call(node, node.__data__, i, j));\n    } : (value = Math.max(1, value), function(node) {\n      node.__transition__[id].duration = value;\n    }));\n  };\n  d3_transitionPrototype.each = function(type, listener) {\n    var id = this.id;\n    if (arguments.length < 2) {\n      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;\n      d3_transitionInheritId = id;\n      d3_selection_each(this, function(node, i, j) {\n        d3_transitionInherit = node.__transition__[id];\n        type.call(node, node.__data__, i, j);\n      });\n      d3_transitionInherit = inherit;\n      d3_transitionInheritId = inheritId;\n    } else {\n      d3_selection_each(this, function(node) {\n        var transition = node.__transition__[id];\n        (transition.event || (transition.event = d3.dispatch(\"start\", \"end\"))).on(type, listener);\n      });\n    }\n    return this;\n  };\n  d3_transitionPrototype.transition = function() {\n    var id0 = this.id, id1 = ++d3_transitionId, subgroups = [], subgroup, group, node, transition;\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if (node = group[i]) {\n          transition = Object.create(node.__transition__[id0]);\n          transition.delay += transition.duration;\n          d3_transitionNode(node, i, id1, transition);\n        }\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, id1);\n  };\n  function d3_transitionNode(node, i, id, inherit) {\n    var lock = node.__transition__ || (node.__transition__ = {\n      active: 0,\n      count: 0\n    }), transition = lock[id];\n    if (!transition) {\n      var time = inherit.time;\n      transition = lock[id] = {\n        tween: new d3_Map(),\n        time: time,\n        ease: inherit.ease,\n        delay: inherit.delay,\n        duration: inherit.duration\n      };\n      ++lock.count;\n      d3.timer(function(elapsed) {\n        var d = node.__data__, ease = transition.ease, delay = transition.delay, duration = transition.duration, timer = d3_timer_active, tweened = [];\n        timer.t = delay + time;\n        if (delay <= elapsed) return start(elapsed - delay);\n        timer.c = start;\n        function start(elapsed) {\n          if (lock.active > id) return stop();\n          lock.active = id;\n          transition.event && transition.event.start.call(node, d, i);\n          transition.tween.forEach(function(key, value) {\n            if (value = value.call(node, d, i)) {\n              tweened.push(value);\n            }\n          });\n          d3.timer(function() {\n            timer.c = tick(elapsed || 1) ? d3_true : tick;\n            return 1;\n          }, 0, time);\n        }\n        function tick(elapsed) {\n          if (lock.active !== id) return stop();\n          var t = elapsed / duration, e = ease(t), n = tweened.length;\n          while (n > 0) {\n            tweened[--n].call(node, e);\n          }\n          if (t >= 1) {\n            transition.event && transition.event.end.call(node, d, i);\n            return stop();\n          }\n        }\n        function stop() {\n          if (--lock.count) delete lock[id]; else delete node.__transition__;\n          return 1;\n        }\n      }, 0, time);\n    }\n  }\n  d3.svg.axis = function() {\n    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;\n    function axis(g) {\n      g.each(function() {\n        var g = d3.select(this);\n        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();\n        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(\".tick\").data(ticks, scale1), tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", ε), tickExit = d3.transition(tick.exit()).style(\"opacity\", ε).remove(), tickUpdate = d3.transition(tick.order()).style(\"opacity\", 1), tickSpacing = Math.max(innerTickSize, 0) + tickPadding, tickTransform;\n        var range = d3_scaleRange(scale1), path = g.selectAll(\".domain\").data([ 0 ]), pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), \n        d3.transition(path));\n        tickEnter.append(\"line\");\n        tickEnter.append(\"text\");\n        var lineEnter = tickEnter.select(\"line\"), lineUpdate = tickUpdate.select(\"line\"), text = tick.select(\"text\").text(tickFormat), textEnter = tickEnter.select(\"text\"), textUpdate = tickUpdate.select(\"text\"), sign = orient === \"top\" || orient === \"left\" ? -1 : 1, x1, x2, y1, y2;\n        if (orient === \"bottom\" || orient === \"top\") {\n          tickTransform = d3_svg_axisX, x1 = \"x\", y1 = \"y\", x2 = \"x2\", y2 = \"y2\";\n          text.attr(\"dy\", sign < 0 ? \"0em\" : \".71em\").style(\"text-anchor\", \"middle\");\n          pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + sign * outerTickSize + \"V0H\" + range[1] + \"V\" + sign * outerTickSize);\n        } else {\n          tickTransform = d3_svg_axisY, x1 = \"y\", y1 = \"x\", x2 = \"y2\", y2 = \"x2\";\n          text.attr(\"dy\", \".32em\").style(\"text-anchor\", sign < 0 ? \"end\" : \"start\");\n          pathUpdate.attr(\"d\", \"M\" + sign * outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + sign * outerTickSize);\n        }\n        lineEnter.attr(y2, sign * innerTickSize);\n        textEnter.attr(y1, sign * tickSpacing);\n        lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);\n        textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);\n        if (scale1.rangeBand) {\n          var x = scale1, dx = x.rangeBand() / 2;\n          scale0 = scale1 = function(d) {\n            return x(d) + dx;\n          };\n        } else if (scale0.rangeBand) {\n          scale0 = scale1;\n        } else {\n          tickExit.call(tickTransform, scale1, scale0);\n        }\n        tickEnter.call(tickTransform, scale0, scale1);\n        tickUpdate.call(tickTransform, scale1, scale1);\n      });\n    }\n    axis.scale = function(x) {\n      if (!arguments.length) return scale;\n      scale = x;\n      return axis;\n    };\n    axis.orient = function(x) {\n      if (!arguments.length) return orient;\n      orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\n      return axis;\n    };\n    axis.ticks = function() {\n      if (!arguments.length) return tickArguments_;\n      tickArguments_ = arguments;\n      return axis;\n    };\n    axis.tickValues = function(x) {\n      if (!arguments.length) return tickValues;\n      tickValues = x;\n      return axis;\n    };\n    axis.tickFormat = function(x) {\n      if (!arguments.length) return tickFormat_;\n      tickFormat_ = x;\n      return axis;\n    };\n    axis.tickSize = function(x) {\n      var n = arguments.length;\n      if (!n) return innerTickSize;\n      innerTickSize = +x;\n      outerTickSize = +arguments[n - 1];\n      return axis;\n    };\n    axis.innerTickSize = function(x) {\n      if (!arguments.length) return innerTickSize;\n      innerTickSize = +x;\n      return axis;\n    };\n    axis.outerTickSize = function(x) {\n      if (!arguments.length) return outerTickSize;\n      outerTickSize = +x;\n      return axis;\n    };\n    axis.tickPadding = function(x) {\n      if (!arguments.length) return tickPadding;\n      tickPadding = +x;\n      return axis;\n    };\n    axis.tickSubdivide = function() {\n      return arguments.length && axis;\n    };\n    return axis;\n  };\n  var d3_svg_axisDefaultOrient = \"bottom\", d3_svg_axisOrients = {\n    top: 1,\n    right: 1,\n    bottom: 1,\n    left: 1\n  };\n  function d3_svg_axisX(selection, x0, x1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = x0(d);\n      return \"translate(\" + (isFinite(v0) ? v0 : x1(d)) + \",0)\";\n    });\n  }\n  function d3_svg_axisY(selection, y0, y1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = y0(d);\n      return \"translate(0,\" + (isFinite(v0) ? v0 : y1(d)) + \")\";\n    });\n  }\n  d3.svg.brush = function() {\n    var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];\n    function brush(g) {\n      g.each(function() {\n        var g = d3.select(this).style(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\n        var background = g.selectAll(\".background\").data([ 0 ]);\n        background.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\n        g.selectAll(\".extent\").data([ 0 ]).enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\n        var resize = g.selectAll(\".resize\").data(resizes, d3_identity);\n        resize.exit().remove();\n        resize.enter().append(\"g\").attr(\"class\", function(d) {\n          return \"resize \" + d;\n        }).style(\"cursor\", function(d) {\n          return d3_svg_brushCursor[d];\n        }).append(\"rect\").attr(\"x\", function(d) {\n          return /[ew]$/.test(d) ? -3 : null;\n        }).attr(\"y\", function(d) {\n          return /^[ns]/.test(d) ? -3 : null;\n        }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\n        resize.style(\"display\", brush.empty() ? \"none\" : null);\n        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;\n        if (x) {\n          range = d3_scaleRange(x);\n          backgroundUpdate.attr(\"x\", range[0]).attr(\"width\", range[1] - range[0]);\n          redrawX(gUpdate);\n        }\n        if (y) {\n          range = d3_scaleRange(y);\n          backgroundUpdate.attr(\"y\", range[0]).attr(\"height\", range[1] - range[0]);\n          redrawY(gUpdate);\n        }\n        redraw(gUpdate);\n      });\n    }\n    brush.event = function(g) {\n      g.each(function() {\n        var event_ = event.of(this, arguments), extent1 = {\n          x: xExtent,\n          y: yExtent,\n          i: xExtentDomain,\n          j: yExtentDomain\n        }, extent0 = this.__chart__ || extent1;\n        this.__chart__ = extent1;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.brush\", function() {\n            xExtentDomain = extent0.i;\n            yExtentDomain = extent0.j;\n            xExtent = extent0.x;\n            yExtent = extent0.y;\n            event_({\n              type: \"brushstart\"\n            });\n          }).tween(\"brush:brush\", function() {\n            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);\n            xExtentDomain = yExtentDomain = null;\n            return function(t) {\n              xExtent = extent1.x = xi(t);\n              yExtent = extent1.y = yi(t);\n              event_({\n                type: \"brush\",\n                mode: \"resize\"\n              });\n            };\n          }).each(\"end.brush\", function() {\n            xExtentDomain = extent1.i;\n            yExtentDomain = extent1.j;\n            event_({\n              type: \"brush\",\n              mode: \"resize\"\n            });\n            event_({\n              type: \"brushend\"\n            });\n          });\n        } else {\n          event_({\n            type: \"brushstart\"\n          });\n          event_({\n            type: \"brush\",\n            mode: \"resize\"\n          });\n          event_({\n            type: \"brushend\"\n          });\n        }\n      });\n    };\n    function redraw(g) {\n      g.selectAll(\".resize\").attr(\"transform\", function(d) {\n        return \"translate(\" + xExtent[+/e$/.test(d)] + \",\" + yExtent[+/^s/.test(d)] + \")\";\n      });\n    }\n    function redrawX(g) {\n      g.select(\".extent\").attr(\"x\", xExtent[0]);\n      g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", xExtent[1] - xExtent[0]);\n    }\n    function redrawY(g) {\n      g.select(\".extent\").attr(\"y\", yExtent[0]);\n      g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", yExtent[1] - yExtent[0]);\n    }\n    function brushstart() {\n      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed(\"extent\"), dragRestore = d3_event_dragSuppress(), center, origin = d3.mouse(target), offset;\n      var w = d3.select(d3_window).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\n      if (d3.event.changedTouches) {\n        w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\n      } else {\n        w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\n      }\n      g.interrupt().selectAll(\"*\").interrupt();\n      if (dragging) {\n        origin[0] = xExtent[0] - origin[0];\n        origin[1] = yExtent[0] - origin[1];\n      } else if (resizing) {\n        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);\n        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];\n        origin[0] = xExtent[ex];\n        origin[1] = yExtent[ey];\n      } else if (d3.event.altKey) center = origin.slice();\n      g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\n      d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\n      event_({\n        type: \"brushstart\"\n      });\n      brushmove();\n      function keydown() {\n        if (d3.event.keyCode == 32) {\n          if (!dragging) {\n            center = null;\n            origin[0] -= xExtent[1];\n            origin[1] -= yExtent[1];\n            dragging = 2;\n          }\n          d3_eventPreventDefault();\n        }\n      }\n      function keyup() {\n        if (d3.event.keyCode == 32 && dragging == 2) {\n          origin[0] += xExtent[1];\n          origin[1] += yExtent[1];\n          dragging = 0;\n          d3_eventPreventDefault();\n        }\n      }\n      function brushmove() {\n        var point = d3.mouse(target), moved = false;\n        if (offset) {\n          point[0] += offset[0];\n          point[1] += offset[1];\n        }\n        if (!dragging) {\n          if (d3.event.altKey) {\n            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];\n            origin[0] = xExtent[+(point[0] < center[0])];\n            origin[1] = yExtent[+(point[1] < center[1])];\n          } else center = null;\n        }\n        if (resizingX && move1(point, x, 0)) {\n          redrawX(g);\n          moved = true;\n        }\n        if (resizingY && move1(point, y, 1)) {\n          redrawY(g);\n          moved = true;\n        }\n        if (moved) {\n          redraw(g);\n          event_({\n            type: \"brush\",\n            mode: dragging ? \"move\" : \"resize\"\n          });\n        }\n      }\n      function move1(point, scale, i) {\n        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;\n        if (dragging) {\n          r0 -= position;\n          r1 -= size + position;\n        }\n        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\n        if (dragging) {\n          max = (min += position) + size;\n        } else {\n          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\n          if (position < min) {\n            max = min;\n            min = position;\n          } else {\n            max = position;\n          }\n        }\n        if (extent[0] != min || extent[1] != max) {\n          if (i) yExtentDomain = null; else xExtentDomain = null;\n          extent[0] = min;\n          extent[1] = max;\n          return true;\n        }\n      }\n      function brushend() {\n        brushmove();\n        g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\n        d3.select(\"body\").style(\"cursor\", null);\n        w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\n        dragRestore();\n        event_({\n          type: \"brushend\"\n        });\n      }\n    }\n    brush.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.clamp = function(z) {\n      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;\n      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;\n      return brush;\n    };\n    brush.extent = function(z) {\n      var x0, x1, y0, y1, t;\n      if (!arguments.length) {\n        if (x) {\n          if (xExtentDomain) {\n            x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n          } else {\n            x0 = xExtent[0], x1 = xExtent[1];\n            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n          }\n        }\n        if (y) {\n          if (yExtentDomain) {\n            y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n          } else {\n            y0 = yExtent[0], y1 = yExtent[1];\n            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n          }\n        }\n        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];\n      }\n      if (x) {\n        x0 = z[0], x1 = z[1];\n        if (y) x0 = x0[0], x1 = x1[0];\n        xExtentDomain = [ x0, x1 ];\n        if (x.invert) x0 = x(x0), x1 = x(x1);\n        if (x1 < x0) t = x0, x0 = x1, x1 = t;\n        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];\n      }\n      if (y) {\n        y0 = z[0], y1 = z[1];\n        if (x) y0 = y0[1], y1 = y1[1];\n        yExtentDomain = [ y0, y1 ];\n        if (y.invert) y0 = y(y0), y1 = y(y1);\n        if (y1 < y0) t = y0, y0 = y1, y1 = t;\n        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];\n      }\n      return brush;\n    };\n    brush.clear = function() {\n      if (!brush.empty()) {\n        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];\n        xExtentDomain = yExtentDomain = null;\n      }\n      return brush;\n    };\n    brush.empty = function() {\n      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\n    };\n    return d3.rebind(brush, event, \"on\");\n  };\n  var d3_svg_brushCursor = {\n    n: \"ns-resize\",\n    e: \"ew-resize\",\n    s: \"ns-resize\",\n    w: \"ew-resize\",\n    nw: \"nwse-resize\",\n    ne: \"nesw-resize\",\n    se: \"nwse-resize\",\n    sw: \"nesw-resize\"\n  };\n  var d3_svg_brushResizes = [ [ \"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\" ], [ \"e\", \"w\" ], [ \"n\", \"s\" ], [] ];\n  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;\n  var d3_time_formatUtc = d3_time_format.utc;\n  var d3_time_formatIso = d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n  d3_time_format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\n  function d3_time_formatIsoNative(date) {\n    return date.toISOString();\n  }\n  d3_time_formatIsoNative.parse = function(string) {\n    var date = new Date(string);\n    return isNaN(date) ? null : date;\n  };\n  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\n  d3_time.second = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 1e3) * 1e3);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\n  }, function(date) {\n    return date.getSeconds();\n  });\n  d3_time.seconds = d3_time.second.range;\n  d3_time.seconds.utc = d3_time.second.utc.range;\n  d3_time.minute = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 6e4) * 6e4);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\n  }, function(date) {\n    return date.getMinutes();\n  });\n  d3_time.minutes = d3_time.minute.range;\n  d3_time.minutes.utc = d3_time.minute.utc.range;\n  d3_time.hour = d3_time_interval(function(date) {\n    var timezone = date.getTimezoneOffset() / 60;\n    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\n  }, function(date) {\n    return date.getHours();\n  });\n  d3_time.hours = d3_time.hour.range;\n  d3_time.hours.utc = d3_time.hour.utc.range;\n  d3_time.month = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setDate(1);\n    return date;\n  }, function(date, offset) {\n    date.setMonth(date.getMonth() + offset);\n  }, function(date) {\n    return date.getMonth();\n  });\n  d3_time.months = d3_time.month.range;\n  d3_time.months.utc = d3_time.month.utc.range;\n  function d3_time_scale(linear, methods, format) {\n    function scale(x) {\n      return linear(x);\n    }\n    scale.invert = function(x) {\n      return d3_time_scaleDate(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\n      linear.domain(x);\n      return scale;\n    };\n    function tickMethod(extent, count) {\n      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);\n      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {\n        return d / 31536e6;\n      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\n    }\n    scale.nice = function(interval, skip) {\n      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" && tickMethod(extent, interval);\n      if (method) interval = method[0], skip = method[1];\n      function skipped(date) {\n        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\n      }\n      return scale.domain(d3_scale_nice(domain, skip > 1 ? {\n        floor: function(date) {\n          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);\n          return date;\n        },\n        ceil: function(date) {\n          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);\n          return date;\n        }\n      } : interval));\n    };\n    scale.ticks = function(interval, skip) {\n      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" ? tickMethod(extent, interval) : !interval.range && [ {\n        range: interval\n      }, skip ];\n      if (method) interval = method[0], skip = method[1];\n      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\n    };\n    scale.tickFormat = function() {\n      return format;\n    };\n    scale.copy = function() {\n      return d3_time_scale(linear.copy(), methods, format);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_time_scaleDate(t) {\n    return new Date(t);\n  }\n  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];\n  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];\n  var d3_time_scaleLocalFormat = d3_time_format.multi([ [ \".%L\", function(d) {\n    return d.getMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getDay() && d.getDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  var d3_time_scaleMilliseconds = {\n    range: function(start, stop, step) {\n      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);\n    },\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  d3_time_scaleLocalMethods.year = d3_time.year;\n  d3_time.scale = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\n  };\n  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function(m) {\n    return [ m[0].utc, m[1] ];\n  });\n  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([ [ \".%L\", function(d) {\n    return d.getUTCMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getUTCSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getUTCMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getUTCHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getUTCDay() && d.getUTCDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getUTCDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getUTCMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  d3_time_scaleUtcMethods.year = d3_time.year.utc;\n  d3_time.scale.utc = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);\n  };\n  d3.text = d3_xhrType(function(request) {\n    return request.responseText;\n  });\n  d3.json = function(url, callback) {\n    return d3_xhr(url, \"application/json\", d3_json, callback);\n  };\n  function d3_json(request) {\n    return JSON.parse(request.responseText);\n  }\n  d3.html = function(url, callback) {\n    return d3_xhr(url, \"text/html\", d3_html, callback);\n  };\n  function d3_html(request) {\n    var range = d3_document.createRange();\n    range.selectNode(d3_document.body);\n    return range.createContextualFragment(request.responseText);\n  }\n  d3.xml = d3_xhrType(function(request) {\n    return request.responseXML;\n  });\n  if (typeof define === \"function\" && define.amd) define(d3); else if (typeof module === \"object\" && module.exports) module.exports = d3;\n  this.d3 = d3;\n}();\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./bower_components/d3/d3.js\n ** module id = 9\n ** module chunks = 0\n **/"],"sourceRoot":""}