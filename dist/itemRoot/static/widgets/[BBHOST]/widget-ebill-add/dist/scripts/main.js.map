{"version":3,"sources":["webpack:///widget-ebill-add/webpack/universalModuleDefinition","webpack:///widget-ebill-add/scripts/main.js","webpack:///widget-ebill-add/webpack/bootstrap 380af1f61cd32718bb3e","webpack:///widget-ebill-add/./scripts/main.js","webpack:///widget-ebill-add/(webpack)/buildin/module.js","webpack:///widget-ebill-add/external \"base\"","webpack:///widget-ebill-add/external \"core\"","webpack:///widget-ebill-add/external \"ui\"","webpack:///widget-ebill-add/external \"module-payments\"","webpack:///widget-ebill-add/external \"module-accounts\"","webpack:///widget-ebill-add/external \"module-ebilling\"","webpack:///widget-ebill-add/./scripts/controllers.js","webpack:///widget-ebill-add/./scripts/models.js","webpack:///widget-ebill-add/./scripts/directives.js"],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE_3__","__WEBPACK_EXTERNAL_MODULE_4__","__WEBPACK_EXTERNAL_MODULE_5__","__WEBPACK_EXTERNAL_MODULE_6__","__WEBPACK_EXTERNAL_MODULE_7__","__WEBPACK_EXTERNAL_MODULE_8__","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","__WEBPACK_AMD_DEFINE_RESULT__","run","lpCoreBus","lpWidget","lpEBillService","setConfig","url","getPreference","model","name","publish","$inject","base","core","ui","payments","accounts","ebilling","deps","createModule","controller","service","directive","undefined","webpackPolyfill","deprecate","paths","children","_","utils","wizard","MainCtrl","bpService","bpModel","FindPayeeCtrl","$scope","lpCoreUtils","search","ctrl","searchValue","searchVendors","then","billers","listGroup","loadVendors","pay","goToStep","getTopVendors","vendors","topVendors","selectBiller","option","currentBiller","clone","paymentMethod","paymentMethods","ELECTRONIC","address","addresses","nextStep","createBiller","CHECK","lazySearch","debounce","searching","Boolean","clearSearch","cancelSearch","ConnectPayeeCtrl","back","element","ConnectForm","$setPristine","submitted","errors","connect","addPayee","biller","connected","eBillsStatus","setupEBills","setAccountConfirmationStatus","status","isAccountConfirmed","SetupEBillsCtrl","logErrors","errs","exitEBillSetup","PayeeAddedCtrl","eBillsEnabled","get","addNewPayee","payment","openDashboard","createPayment","paymentModel","createPaymentTemplate","PayCtrl","lpCoreI18n","calendarService","$filter","$q","formatDate","date","translate","entry","value","instant","frequencies","map","endOptions","isConnecting","updateDeliveryDate","startDate","daysToDeliver","urgentTransfer","businessDaysToDeliver","getBusinessDay","result","estDeliveryDate","$watch","scheduleDate","showUrgentTransfer","canExpeditePayments","isValidPayment","warnings","account","push","code","amount","isScheduledTransfer","scheduledTransfer","frequency","endOn","timesToRepeat","length","transformPayment","makeAPayment","sent","cancel","getAccounts","payee","fetchPayee","all","results","eBills","eBill","errObj","ConfigureCtrl","fiService","fiModel","goBack","previousStep","tempQueryParams","lpEBillPayService","getModel","payeeId","ebillEligible","ebills","isCurrentBillerCheck","$http","billPaymentsEndpoint","resolvePortalPlaceholders","instantPaymentOrdersDataSrc","res","data","billerGroups","err","params","createPayee","post","response","forEach","key","accountCode","alias","nickName","description","bookedBalance","totalAmountDue","availableBalance","balance","isPrimaryAccount","primaryBillPaymentAccount","setup","calendarEndpoint","offset","businessDay","lpSelect","linkFn","scope","elem","handler","ev","type","keyCode","$apply","$event","on","$on","off","restrict","compile","attrs","$set","link"],"mappings":"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","file":"scripts/main.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"base\"), require(\"core\"), require(\"ui\"), require(\"module-payments\"), require(\"module-accounts\"), require(\"module-ebilling\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"base\", \"core\", \"ui\", \"module-payments\", \"module-accounts\", \"module-ebilling\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"widget-ebill-add\"] = factory(require(\"base\"), require(\"core\"), require(\"ui\"), require(\"module-payments\"), require(\"module-accounts\"), require(\"module-ebilling\"));\n\telse\n\t\troot[\"widget-ebill-add\"] = factory(root[\"base\"], root[\"core\"], root[\"ui\"], root[\"module-payments\"], root[\"module-accounts\"], root[\"module-ebilling\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_3__, __WEBPACK_EXTERNAL_MODULE_4__, __WEBPACK_EXTERNAL_MODULE_5__, __WEBPACK_EXTERNAL_MODULE_6__, __WEBPACK_EXTERNAL_MODULE_7__, __WEBPACK_EXTERNAL_MODULE_8__) {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"base\"), require(\"core\"), require(\"ui\"), require(\"module-payments\"), require(\"module-accounts\"), require(\"module-ebilling\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"base\", \"core\", \"ui\", \"module-payments\", \"module-accounts\", \"module-ebilling\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"widget-ebill-add\"] = factory(require(\"base\"), require(\"core\"), require(\"ui\"), require(\"module-payments\"), require(\"module-accounts\"), require(\"module-ebilling\"));\n\telse\n\t\troot[\"widget-ebill-add\"] = factory(root[\"base\"], root[\"core\"], root[\"ui\"], root[\"module-payments\"], root[\"module-accounts\"], root[\"module-ebilling\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_3__, __WEBPACK_EXTERNAL_MODULE_4__, __WEBPACK_EXTERNAL_MODULE_5__, __WEBPACK_EXTERNAL_MODULE_6__, __WEBPACK_EXTERNAL_MODULE_7__, __WEBPACK_EXTERNAL_MODULE_8__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n\n\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/_karma_webpack_//\";\n\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(1);\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(module) {'use strict';\n\n\t/**\n\t * @module ebill-connect\n\t * @version 1.0.0\n\t * @file ebill-connect description\n\t * @copyright Backbase Amsterdam\n\t * @requires module:lp/main\n\t * @requires module:lp/modules/core\n\t * @requires interact\n\t *\n\t * @example Require Widget\n\t * // add this in the index.html\n\t * window.requireWidget( __WIDGET__ ,'widgets/ebill-connect');\n\t */\n\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, module) {\n\n\t    'use strict';\n\n\t    module.name = 'widget-ebill-add';\n\n\t    /**\n\t     * Dependencies\n\t     */\n\t    var base = __webpack_require__(3);\n\t    var core = __webpack_require__(4);\n\t    var ui = __webpack_require__(5);\n\n\t    var payments = __webpack_require__(6);\n\t    var accounts = __webpack_require__(7);\n\t    var ebilling = __webpack_require__(8);\n\n\t    var deps = [core.name, ui.name, payments.name, accounts.name, ebilling.name];\n\n\t    // @ngInject\n\t    function run(lpCoreBus, lpWidget, lpEBillService) {\n\t        /* lp-ebills-setup-view directive uses this service and endpoint must be set */\n\t        lpEBillService.setConfig({\n\t            url: lpWidget.getPreference('billPaymentsDataSrc')\n\t        });\n\n\t        if (lpWidget.model && lpWidget.model.name) {\n\t            lpCoreBus.publish('cxp.item.loaded', { id: lpWidget.model.name });\n\t        }\n\t    }\n\n\t    module.exports = base.createModule(module.name, deps).controller(__webpack_require__(9)).service(__webpack_require__(10)).directive(__webpack_require__(11)).run(run);\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)(module)))\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function(module) {\r\n\t\tif(!module.webpackPolyfill) {\r\n\t\t\tmodule.deprecate = function() {};\r\n\t\t\tmodule.paths = [];\r\n\t\t\t// module.parent = undefined by default\r\n\t\t\tmodule.children = [];\r\n\t\t\tmodule.webpackPolyfill = 1;\r\n\t\t}\r\n\t\treturn module;\r\n\t}\r\n\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_4__;\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_5__;\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_6__;\n\n/***/ },\n/* 7 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_7__;\n\n/***/ },\n/* 8 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_8__;\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;'use strict';\n\n\t/* globals define */\n\n\t/**\n\t * Controllers\n\t * @module controllers\n\t */\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports) {\n\n\t    'use strict';\n\n\t    var _ = __webpack_require__(3).utils;\n\t    var wizard = {};\n\n\t    /**\n\t     * MainCtrl description.\n\t     */\n\n\t    // @ngInject\n\t    exports.MainCtrl = function (bpService, bpModel) {\n\t        this.wizard = wizard;\n\t        this.bpService = bpService;\n\t        this.bpModel = bpModel;\n\t    };\n\n\t    /**\n\t     * FindPayeeCtrl description.\n\t     */\n\n\t    // @ngInject\n\t    exports.FindPayeeCtrl = function ($scope, lpWidget, lpCoreUtils, bpService, bpModel) {\n\t        var ctrl = this;\n\n\t        ctrl.searchValue = '';\n\n\t        ctrl.pay = function () {\n\t            wizard.goToStep(4);\n\t        };\n\n\t        ctrl.loadVendors = function () {\n\t            bpService.getTopVendors().then(function (vendors) {\n\t                ctrl.topVendors = vendors;\n\t                ctrl.listGroup = vendors;\n\t            });\n\t        };\n\n\t        ctrl.selectBiller = function (option) {\n\t            bpModel.currentBiller = _.clone(option);\n\t            bpModel.currentBiller.paymentMethod = bpModel.paymentMethods.ELECTRONIC;\n\t            bpModel.currentBiller.address = {};\n\t            bpModel.currentBiller.addresses = [];\n\n\t            wizard.nextStep();\n\t        };\n\n\t        ctrl.createBiller = function (name) {\n\t            bpModel.currentBiller = {\n\t                paymentMethod: bpModel.paymentMethods.CHECK,\n\t                name: name,\n\t                address: {}\n\t            };\n\t            wizard.nextStep();\n\t        };\n\n\t        function search() {\n\t            if (ctrl.searchValue) {\n\t                bpService.searchVendors({\n\t                    name: ctrl.searchValue\n\t                }).then(function (billers) {\n\t                    ctrl.listGroup = billers;\n\t                });\n\t            } else {\n\t                // If there is no search value -- load top vendors instead\n\t                ctrl.loadVendors();\n\t            }\n\t        }\n\n\t        var lazySearch = lpCoreUtils.debounce(search, 500);\n\n\t        ctrl.search = function () {\n\t            ctrl.searching = Boolean(ctrl.searchValue);\n\t            lazySearch();\n\t        };\n\n\t        ctrl.clearSearch = function () {\n\t            bpService.cancelSearch();\n\t            ctrl.searchValue = '';\n\t            ctrl.listGroup = ctrl.topVendors;\n\t            ctrl.searching = false;\n\t        };\n\n\t        // init calls\n\t        ctrl.loadVendors();\n\t    };\n\n\t    // @ngInject\n\t    exports.ConnectPayeeCtrl = function (lpCoreUtils, bpService, bpModel, lpCoreBus) {\n\t        var ctrl = this;\n\n\t        ctrl.back = function (element) {\n\t            element.ConnectForm.$setPristine();\n\t            element.ConnectForm.submitted = false;\n\n\t            bpModel.currentBiller = null;\n\t            bpService.errors = null;\n\n\t            wizard.goToStep(1);\n\t        };\n\n\t        ctrl.connect = function () {\n\t            bpService.addPayee(bpModel.currentBiller).then(function (biller) {\n\t                if (bpService.errors === null) {\n\t                    bpModel.currentBiller = biller;\n\t                    bpModel.currentBiller.connected = true;\n\t                    lpCoreBus.publish('lp-retail:eBill:Payees:load');\n\n\t                    if (bpModel.currentBiller.eBillsStatus === 'ELIGIBLE') {\n\t                        bpService.setupEBills(bpModel.currentBiller).then(function () {\n\t                            bpModel.currentBiller.setupEBills = true;\n\t                            wizard.nextStep();\n\t                        });\n\t                    } else {\n\t                        wizard.nextStep();\n\t                    }\n\t                }\n\t                if (biller) {\n\t                    bpModel.currentBiller.addresses = biller.addresses;\n\t                }\n\t            });\n\t        };\n\n\t        ctrl.setAccountConfirmationStatus = function (status) {\n\t            ctrl.isAccountConfirmed = status;\n\t        };\n\t    };\n\n\t    // @ngInject\n\t    exports.SetupEBillsCtrl = function (bpService, bpModel) {\n\t        var ctrl = this;\n\t        ctrl.errors = [];\n\n\t        ctrl.logErrors = function (errs) {\n\t            ctrl.errors = errs;\n\t        };\n\n\t        ctrl.exitEBillSetup = function () {\n\t            ctrl.errors = [];\n\t            bpModel.currentBiller.setupEBills = false;\n\t        };\n\t    };\n\n\t    // @ngInject\n\t    exports.PayeeAddedCtrl = function (bpService, bpModel, lpCoreBus) {\n\n\t        this.eBillsEnabled = function () {\n\t            return _.get(bpModel, 'currentBiller.eBillsStatus') === 'ACTIVE';\n\t        };\n\n\t        this.addNewPayee = function () {\n\t            bpModel.currentBiller = null;\n\t            bpModel.payment = null;\n\t            bpService.errors = null;\n\n\t            wizard.goToStep(1);\n\t        };\n\n\t        this.openDashboard = function () {\n\t            lpCoreBus.publish('launchpad-retail.openEBillDashboard');\n\t        };\n\n\t        this.createPayment = function () {\n\t            bpModel.payment = bpModel.paymentModel.createPaymentTemplate();\n\t            wizard.goToStep(4);\n\t        };\n\t    };\n\n\t    // @ngInject\n\t    exports.PayCtrl = function (bpService, bpModel, lpCoreI18n, calendarService, $filter, $scope, $q) {\n\n\t        var ctrl = this;\n\n\t        var formatDate = function formatDate(date) {\n\t            return $filter('date')(date, 'yyyy-MM-dd');\n\t        };\n\n\t        var translate = function translate(entry) {\n\t            entry.value = lpCoreI18n.instant(entry.id);\n\t            return entry;\n\t        };\n\n\t        ctrl.frequencies = _.map(bpModel.paymentModel.frequencies, translate);\n\t        ctrl.endOptions = _.map(bpModel.paymentModel.endOptions, translate);\n\t        ctrl.isConnecting = true;\n\n\t        $scope.payment = bpModel.payment;\n\n\t        var updateDeliveryDate = function updateDeliveryDate(startDate) {\n\t            if (startDate) {\n\t                var daysToDeliver = $scope.payment.urgentTransfer ? 1 : bpModel.currentBiller.businessDaysToDeliver;\n\t                var date = formatDate(startDate);\n\t                calendarService.getBusinessDay(date, daysToDeliver).then(function (result) {\n\t                    $scope.payment.estDeliveryDate = result;\n\t                });\n\t            }\n\t        };\n\n\t        $scope.$watch('payment.urgentTransfer', function () {\n\t            updateDeliveryDate($scope.payment.scheduleDate);\n\t        });\n\n\t        $scope.$watch('payment.scheduleDate', function (startDate) {\n\t            updateDeliveryDate(startDate);\n\t        });\n\n\t        this.showUrgentTransfer = function () {\n\t            return bpModel.currentBiller.canExpeditePayments && bpModel.currentBiller.paymentMethod === bpModel.paymentMethods.CHECK;\n\t        };\n\n\t        var isValidPayment = function isValidPayment(payment) {\n\t            ctrl.warnings = [];\n\t            if (!payment.account) {\n\t                ctrl.warnings.push({ code: 'ERROR_SELECT_ACCOUNT' });\n\t            }\n\t            if (!payment.scheduleDate) {\n\t                ctrl.warnings.push({ code: 'ERROR_ENTER_PROCESSING_DATE' });\n\t            }\n\t            if (!payment.amount) {\n\t                ctrl.warnings.push({ code: 'ERROR_ENTER_AMOUNT' });\n\t            }\n\n\t            if (payment.isScheduledTransfer) {\n\t                if (!payment.scheduledTransfer.frequency) {\n\t                    ctrl.warnings.push({ code: 'ERROR_SELECT_FREQUENCY' });\n\t                }\n\t                if (payment.scheduledTransfer.endOn === 'after' && !payment.scheduledTransfer.timesToRepeat) {\n\t                    ctrl.warnings.push({ code: 'ERROR_ENTER_TIMES_TO_REPEAT' });\n\t                }\n\t            }\n\n\t            if (ctrl.warnings.length > 0) {\n\t                return false;\n\t            }\n\t            return true;\n\t        };\n\n\t        this.pay = function (payment) {\n\t            if (isValidPayment(payment)) {\n\t                var pay = bpModel.paymentModel.transformPayment(bpModel.currentBiller, payment);\n\t                bpService.makeAPayment(pay).then(function () {\n\t                    if (bpService.errors === null) {\n\t                        payment.sent = true;\n\t                    }\n\t                });\n\t            }\n\t        };\n\n\t        this.cancel = function () {\n\t            wizard.goToStep(1);\n\t        };\n\n\t        // Load necessary resources\n\t        var accounts = bpService.getAccounts();\n\t        var payee = bpService.fetchPayee(bpModel.currentBiller);\n\n\t        $q.all([accounts, payee]).then(function (results) {\n\t            ctrl.accounts = results[0];\n\t            ctrl.eBills = results[1].eBill;\n\n\t            // Select first account as default\n\t            $scope.payment.account = ctrl.accounts[0];\n\t        }, function (errObj) {\n\t            // TODO: log to screen about data fetch problems\n\t        })['finally'](function () {\n\t            ctrl.isConnecting = false;\n\t        });\n\t    };\n\n\t    // @ngInject\n\t    exports.ConfigureCtrl = function (fiService) {\n\t        var ctrl = this;\n\t        ctrl.fiModel = fiService.fiModel;\n\t        ctrl.goBack = wizard.previousStep;\n\t    };\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;'use strict';\n\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, module) {\n\t    'use strict';\n\n\t    var _ = __webpack_require__(3).utils;\n\n\t    // Uncomment this when using widget standalone\n\t    var tempQueryParams = '';\n\n\t    // @ngInject\n\t    exports.bpModel = function (lpEBillPayService) {\n\n\t        this.paymentMethods = {\n\t            CHECK: 'CHECK',\n\t            ELECTRONIC: 'ELECTRONIC'\n\t        };\n\n\t        this.paymentModel = lpEBillPayService.getModel();\n\n\t        this.currentBiller = {\n\t            payeeId: null,\n\t            ebillEligible: null,\n\t            paymentMethod: null,\n\t            ebills: null\n\t        };\n\n\t        this.payment = null;\n\n\t        this.isCurrentBillerCheck = function () {\n\t            return this.currentBiller.paymentMethod === this.paymentMethods.CHECK;\n\t        };\n\t    };\n\n\t    // Bill Payments Service\n\n\t    // @ngInject\n\t    exports.bpService = function ($http, $filter, lpWidget, lpCoreUtils, lpEBillService) {\n\t        var model = this;\n\t        var billPaymentsEndpoint = lpCoreUtils.resolvePortalPlaceholders(lpWidget.getPreference('billPaymentsDataSrc'));\n\t        var instantPaymentOrdersDataSrc = lpCoreUtils.resolvePortalPlaceholders(lpWidget.getPreference('instantPaymentOrdersDataSrc'));\n\n\t        model.getTopVendors = function () {\n\t            model.isConnecting = true;\n\t            model.errors = null;\n\t            return $http.get(billPaymentsEndpoint + '/top-billers' + tempQueryParams).then(function (res) {\n\t                model.billers = res && res.data && res.data.billerGroups || [];\n\t                return model.billers;\n\t            }, function (err) {\n\t                model.errors = err.data.errors;\n\t            })['finally'](function () {\n\t                model.isConnecting = false;\n\t            });\n\t        };\n\n\t        model.searchVendors = function (params) {\n\t            model.isConnecting = true;\n\t            model.errors = null;\n\t            return $http.get(billPaymentsEndpoint + '/billers' + tempQueryParams, { params: params }).then(function (res) {\n\t                model.billers = res && res.data && res.data.billers || [];\n\t                return model.billers;\n\t            }, function (err) {\n\t                model.errors = err.data.errors;\n\t            })['finally'](function () {\n\t                model.isConnecting = false;\n\t            });\n\t        };\n\n\t        model.cancelSearch = function () {\n\t            model.isConnecting = false;\n\t        };\n\n\t        /**\n\t         * Adds biller to users biller list\n\t         */\n\t        model.addPayee = function (payee) {\n\t            model.isConnecting = true;\n\t            model.errors = null;\n\t            var createPayee = {\n\t                id: payee.id,\n\t                name: payee.name,\n\t                account: payee.account,\n\t                address: payee.address,\n\t                paymentMethod: payee.paymentMethod\n\t            };\n\t            // TODO: update url\n\t            return $http.post(billPaymentsEndpoint + '/payees' + tempQueryParams, createPayee).then(function (response) {\n\t                model.isConnecting = false;\n\t                if (response.data.errors && response.data.errors.length > 0) {\n\t                    model.errors = response.data.errors;\n\t                    return payee;\n\t                }\n\t                payee = response.data;\n\t                payee.ebillEligible = response.data.eBillsStatus === 'ELIGIBLE';\n\t                return payee;\n\t            }, function (response) {\n\t                model.isConnecting = false;\n\t                model.errors = response.data && response.data.errors;\n\t                if (response.data.addresses) {\n\t                    payee.addresses = response.data.addresses;\n\t                    return payee;\n\t                }\n\t            });\n\t        };\n\n\t        model.getAccounts = function () {\n\t            model.isConnecting = true;\n\t            model.errors = null;\n\t            return $http.get(billPaymentsEndpoint + '/accounts' + tempQueryParams).then(function (response) {\n\t                model.isConnecting = false;\n\t                var accounts = [];\n\t                _.forEach(response.data.accounts, function (value, key) {\n\t                    var account = {\n\t                        id: value.accountCode,\n\t                        alias: value.nickName || value.description,\n\t                        bookedBalance: value.totalAmountDue,\n\t                        availableBalance: value.balance,\n\t                        isPrimaryAccount: value.primaryBillPaymentAccount\n\t                    };\n\t                    accounts.push(account);\n\t                });\n\n\t                return accounts;\n\t            }, function (response) {\n\t                model.isConnecting = false;\n\t                model.errors = response.data && response.data.errors;\n\t            });\n\t        };\n\n\t        /**\n\t         * Schedule a payment.\n\t         * If payment.urgentTransfer === true creates an expedited payment\n\t         * (marked to be processed as soon as it is created).\n\t         */\n\t        model.makeAPayment = function (payment) {\n\t            model.isConnecting = true;\n\t            model.errors = null;\n\t            return $http.post(instantPaymentOrdersDataSrc + tempQueryParams, payment).then(function (response) {\n\t                model.isConnecting = false;\n\t                return payment;\n\t            }, function (response) {\n\t                model.isConnecting = false;\n\t                model.errors = [{\n\t                    code: '500'\n\t                }];\n\t            });\n\t        };\n\n\t        model.fetchPayee = function (payee) {\n\t            return $http.get(billPaymentsEndpoint + '/payees/' + payee.payeeId + tempQueryParams).then(function (response) {\n\t                return response.data;\n\t            });\n\t        };\n\n\t        model.setupEBills = function (payee) {\n\t            model.isConnecting = true;\n\t            return lpEBillService.setup(payee).then(function (data) {\n\t                model.isConnecting = false;\n\t                payee.ebills = data;\n\t            }, function (response) {\n\t                model.isConnecting = false;\n\t                model.errors = response.data && response.data.errors;\n\t            });\n\t        };\n\t    };\n\n\t    // @ngInject\n\t    exports.calendarService = function ($http, lpWidget, lpCoreUtils) {\n\t        var model = this;\n\t        var calendarEndpoint = lpCoreUtils.resolvePortalPlaceholders(lpWidget.getPreference('calendarDataSrc'));\n\n\t        /**\n\t         * Get the business day after specified business days (offset).\n\t         */\n\t        model.getBusinessDay = function (startDate, offset) {\n\t            model.isConnecting = true;\n\t            model.errors = null;\n\t            return $http.get(calendarEndpoint + '/business-days-after' + tempQueryParams, { params: { date: startDate, offset: offset } }).then(function (response) {\n\t                model.isConnecting = false;\n\t                if (response.data.errors.length > 0) {\n\t                    model.errors = response.data.errors;\n\t                }\n\t                return response.data.businessDay;\n\t            }, function (response) {\n\t                model.isConnecting = false;\n\t                model.errors = response.data && response.data.errors;\n\t            });\n\t        };\n\t    };\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;'use strict';\n\n\t/* globals define */\n\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, module) {\n\t    'use strict';\n\n\t    //@ngInject\n\n\t    exports.lpSelect = function () {\n\n\t        function linkFn(scope, elem) {\n\t            var handler = function handler(ev) {\n\t                if (ev.type === 'keyup' && ev.keyCode !== 13) {\n\t                    return;\n\t                }\n\n\t                scope.$apply(function () {\n\t                    scope.lpSelect.call(null, { $event: ev });\n\t                });\n\t            };\n\n\t            elem.on('click', handler);\n\t            elem.on('keyup', handler);\n\n\t            // todo: test it\n\t            scope.$on('$destroy', function () {\n\t                // console.log('destroy linkFn');\n\t                elem.off(handler);\n\t            });\n\t        }\n\n\t        return {\n\t            restrict: 'A',\n\t            scope: {\n\t                lpSelect: '&'\n\t            },\n\t            compile: function compile(elem, attrs) {\n\t                // alter dom before linking\\\n\t                attrs.$set('tabindex', 0);\n\t                return linkFn;\n\t            },\n\t            link: linkFn\n\t        };\n\t    };\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** scripts/main.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/_karma_webpack_//\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 380af1f61cd32718bb3e\n **/","/**\n * @module ebill-connect\n * @version 1.0.0\n * @file ebill-connect description\n * @copyright Backbase Amsterdam\n * @requires module:lp/main\n * @requires module:lp/modules/core\n * @requires interact\n *\n * @example Require Widget\n * // add this in the index.html\n * window.requireWidget( __WIDGET__ ,'widgets/ebill-connect');\n */\n\ndefine( function (require, exports, module) {\n\n    'use strict';\n\n    module.name = 'widget-ebill-add';\n\n    /**\n     * Dependencies\n     */\n    var base = require('base');\n    var core = require('core');\n    var ui = require('ui');\n\n    var payments = require('module-payments');\n    var accounts = require('module-accounts');\n    var ebilling = require('module-ebilling');\n\n    var deps = [\n        core.name,\n        ui.name,\n        payments.name,\n        accounts.name,\n        ebilling.name\n    ];\n\n    // @ngInject\n    function run(lpCoreBus, lpWidget, lpEBillService) {\n        /* lp-ebills-setup-view directive uses this service and endpoint must be set */\n        lpEBillService.setConfig({\n            url: lpWidget.getPreference('billPaymentsDataSrc')\n        });\n\n        if(lpWidget.model && lpWidget.model.name){\n            lpCoreBus.publish('cxp.item.loaded', {id: lpWidget.model.name});\n        }\n    }\n\n    module.exports = base.createModule(module.name, deps)\n        .controller(require('./controllers'))\n        .service(require('./models'))\n        .directive(require('./directives'))\n        .run(run);\n});\n\n\n\n/** WEBPACK FOOTER **\n ** ./scripts/main.js\n **/","module.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tmodule.children = [];\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n}\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)/buildin/module.js\n ** module id = 2\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"base\"\n ** module id = 3\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_4__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"core\"\n ** module id = 4\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_5__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"ui\"\n ** module id = 5\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_6__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"module-payments\"\n ** module id = 6\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_7__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"module-accounts\"\n ** module id = 7\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_8__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"module-ebilling\"\n ** module id = 8\n ** module chunks = 0\n **/"," /* globals define */\n\n/**\n * Controllers\n * @module controllers\n */\ndefine(function(require, exports) {\n\n    'use strict';\n\n    var _ = require('base').utils;\n    var wizard = {};\n\n    /**\n     * MainCtrl description.\n     */\n\n    // @ngInject\n    exports.MainCtrl = function(bpService, bpModel) {\n        this.wizard = wizard;\n        this.bpService = bpService;\n        this.bpModel = bpModel;\n    };\n\n    /**\n     * FindPayeeCtrl description.\n     */\n\n    // @ngInject\n    exports.FindPayeeCtrl = function($scope, lpWidget, lpCoreUtils, bpService, bpModel) {\n        var ctrl = this;\n\n        ctrl.searchValue = '';\n\n        ctrl.pay = function () {\n            wizard.goToStep(4);\n        };\n\n        ctrl.loadVendors = function() {\n            bpService.getTopVendors()\n                .then(function(vendors) {\n                    ctrl.topVendors = vendors;\n                    ctrl.listGroup = vendors;\n                });\n        };\n\n        ctrl.selectBiller = function(option) {\n            bpModel.currentBiller = _.clone(option);\n            bpModel.currentBiller.paymentMethod = bpModel.paymentMethods.ELECTRONIC;\n            bpModel.currentBiller.address = {};\n            bpModel.currentBiller.addresses = [];\n\n            wizard.nextStep();\n        };\n\n        ctrl.createBiller = function(name) {\n            bpModel.currentBiller = {\n                paymentMethod: bpModel.paymentMethods.CHECK,\n                name: name,\n                address: {}\n            };\n            wizard.nextStep();\n        };\n\n        function search() {\n            if (ctrl.searchValue) {\n                bpService.searchVendors({\n                    name: ctrl.searchValue\n                }).then(function(billers) {\n                    ctrl.listGroup = billers;\n                });\n            } else {\n                // If there is no search value -- load top vendors instead\n                ctrl.loadVendors();\n            }\n        }\n\n        var lazySearch = lpCoreUtils.debounce(search, 500);\n\n        ctrl.search = function() {\n            ctrl.searching = Boolean(ctrl.searchValue);\n            lazySearch();\n        };\n\n        ctrl.clearSearch = function() {\n            bpService.cancelSearch();\n            ctrl.searchValue = '';\n            ctrl.listGroup = ctrl.topVendors;\n            ctrl.searching = false;\n        };\n\n        // init calls\n        ctrl.loadVendors();\n    };\n\n    // @ngInject\n    exports.ConnectPayeeCtrl = function(lpCoreUtils, bpService, bpModel, lpCoreBus) {\n        var ctrl = this;\n\n        ctrl.back = function(element) {\n            element.ConnectForm.$setPristine();\n            element.ConnectForm.submitted = false;\n\n            bpModel.currentBiller = null;\n            bpService.errors = null;\n\n            wizard.goToStep(1);\n        };\n\n        ctrl.connect = function() {\n            bpService.addPayee(bpModel.currentBiller).then(function(biller) {\n                if (bpService.errors === null) {\n                    bpModel.currentBiller = biller;\n                    bpModel.currentBiller.connected = true;\n                    lpCoreBus.publish('lp-retail:eBill:Payees:load');\n\n                    if (bpModel.currentBiller.eBillsStatus === 'ELIGIBLE') {\n                        bpService.setupEBills(bpModel.currentBiller)\n                            .then(function() {\n                                bpModel.currentBiller.setupEBills = true;\n                                wizard.nextStep();\n                            });\n                    } else {\n                        wizard.nextStep();\n                    }\n                }\n                if (biller) {\n                  bpModel.currentBiller.addresses = biller.addresses;\n                }\n            });\n        };\n\n        ctrl.setAccountConfirmationStatus = function(status) {\n            ctrl.isAccountConfirmed = status;\n        };\n\n    };\n\n    // @ngInject\n    exports.SetupEBillsCtrl = function(bpService, bpModel) {\n        var ctrl = this;\n        ctrl.errors = [];\n\n        ctrl.logErrors = function(errs) {\n            ctrl.errors = errs;\n        };\n\n        ctrl.exitEBillSetup = function() {\n            ctrl.errors = [];\n            bpModel.currentBiller.setupEBills = false;\n        };\n    };\n\n    // @ngInject\n    exports.PayeeAddedCtrl = function(bpService, bpModel, lpCoreBus) {\n\n        this.eBillsEnabled = function() {\n            return _.get(bpModel, 'currentBiller.eBillsStatus') === 'ACTIVE';\n        };\n\n        this.addNewPayee = function() {\n            bpModel.currentBiller = null;\n            bpModel.payment = null;\n            bpService.errors = null;\n\n            wizard.goToStep(1);\n        };\n\n        this.openDashboard = function() {\n            lpCoreBus.publish('launchpad-retail.openEBillDashboard');\n        };\n\n        this.createPayment = function() {\n            bpModel.payment = bpModel.paymentModel.createPaymentTemplate();\n            wizard.goToStep(4);\n        };\n    };\n\n    // @ngInject\n    exports.PayCtrl = function(bpService, bpModel, lpCoreI18n, calendarService, $filter, $scope, $q) {\n\n        var ctrl = this;\n\n        var formatDate = function(date) {\n            return $filter('date')(date, 'yyyy-MM-dd');\n        };\n\n        var translate = function(entry){\n            entry.value = lpCoreI18n.instant(entry.id);\n            return entry;\n        };\n\n        ctrl.frequencies = _.map(bpModel.paymentModel.frequencies, translate);\n        ctrl.endOptions = _.map(bpModel.paymentModel.endOptions, translate);\n        ctrl.isConnecting = true;\n\n        $scope.payment = bpModel.payment;\n\n        var updateDeliveryDate = function(startDate) {\n            if (startDate) {\n                var daysToDeliver = $scope.payment.urgentTransfer ? 1 : bpModel.currentBiller.businessDaysToDeliver;\n                var date = formatDate(startDate);\n                calendarService.getBusinessDay(date, daysToDeliver)\n                    .then(function(result) {\n                        $scope.payment.estDeliveryDate = result;\n                    });\n            }\n        };\n\n        $scope.$watch('payment.urgentTransfer', function() {\n            updateDeliveryDate($scope.payment.scheduleDate);\n        });\n\n        $scope.$watch('payment.scheduleDate', function(startDate) {\n            updateDeliveryDate(startDate);\n        });\n\n        this.showUrgentTransfer = function() {\n            return bpModel.currentBiller.canExpeditePayments && bpModel.currentBiller.paymentMethod === bpModel.paymentMethods.CHECK;\n        };\n\n        var isValidPayment = function(payment) {\n            ctrl.warnings = [];\n            if (!payment.account) { ctrl.warnings.push({ code: 'ERROR_SELECT_ACCOUNT' }); }\n            if (!payment.scheduleDate) { ctrl.warnings.push({ code: 'ERROR_ENTER_PROCESSING_DATE' }); }\n            if (!payment.amount) { ctrl.warnings.push({ code: 'ERROR_ENTER_AMOUNT' }); }\n\n            if (payment.isScheduledTransfer) {\n                if (!payment.scheduledTransfer.frequency) { ctrl.warnings.push({ code: 'ERROR_SELECT_FREQUENCY' }); }\n                if (payment.scheduledTransfer.endOn === 'after' && !payment.scheduledTransfer.timesToRepeat) { ctrl.warnings.push({ code: 'ERROR_ENTER_TIMES_TO_REPEAT' }); }\n            }\n\n            if (ctrl.warnings.length > 0) { return false; }\n            return true;\n        };\n\n        this.pay = function(payment) {\n            if (isValidPayment(payment)) {\n                var pay = bpModel.paymentModel.transformPayment(bpModel.currentBiller, payment);\n                bpService.makeAPayment(pay).then(function() {\n                    if (bpService.errors === null) {\n                        payment.sent = true;\n                    }\n               });\n            }\n        };\n\n        this.cancel = function() {\n             wizard.goToStep(1);\n        };\n\n        // Load necessary resources\n        var accounts = bpService.getAccounts();\n        var payee = bpService.fetchPayee(bpModel.currentBiller);\n\n        $q.all([ accounts, payee ]).then(function(results) {\n            ctrl.accounts = results[0];\n            ctrl.eBills = results[1].eBill;\n\n            // Select first account as default\n            $scope.payment.account = ctrl.accounts[0];\n\n        }, function(errObj){\n            // TODO: log to screen about data fetch problems\n        })['finally'](function() {\n            ctrl.isConnecting = false;\n        });\n    };\n\n    // @ngInject\n    exports.ConfigureCtrl = function(fiService) {\n        var ctrl = this;\n        ctrl.fiModel = fiService.fiModel;\n        ctrl.goBack = wizard.previousStep;\n    };\n\n});\n\n\n\n/** WEBPACK FOOTER **\n ** ./scripts/controllers.js\n **/","define(function(require, exports, module){\n    'use strict';\n\n    var _ = require('base').utils;\n\n    // Uncomment this when using widget standalone\n    var tempQueryParams = '';\n\n    // @ngInject\n    exports.bpModel = function(lpEBillPayService) {\n\n        this.paymentMethods = {\n            CHECK: 'CHECK',\n            ELECTRONIC: 'ELECTRONIC'\n        };\n\n        this.paymentModel = lpEBillPayService.getModel();\n\n        this.currentBiller = {\n            payeeId: null,\n            ebillEligible: null,\n            paymentMethod: null,\n            ebills: null\n        };\n\n        this.payment = null;\n\n        this.isCurrentBillerCheck = function() {\n            return this.currentBiller.paymentMethod === this.paymentMethods.CHECK;\n        };\n    };\n\n    // Bill Payments Service\n\n    // @ngInject\n    exports.bpService = function($http, $filter, lpWidget, lpCoreUtils, lpEBillService) {\n        var model = this;\n        var billPaymentsEndpoint = lpCoreUtils.resolvePortalPlaceholders(lpWidget.getPreference('billPaymentsDataSrc'));\n        var instantPaymentOrdersDataSrc = lpCoreUtils.resolvePortalPlaceholders(lpWidget.getPreference('instantPaymentOrdersDataSrc'));\n\n        model.getTopVendors = function() {\n            model.isConnecting = true;\n            model.errors = null;\n            return $http.get(billPaymentsEndpoint + '/top-billers' + tempQueryParams)\n                .then(function(res) {\n                    model.billers = (res && res.data && res.data.billerGroups) || [];\n                    return model.billers;\n                }, function(err) {\n                    model.errors = err.data.errors;\n                })['finally'](function() {\n                    model.isConnecting = false;\n                });\n        };\n\n        model.searchVendors = function(params) {\n            model.isConnecting = true;\n            model.errors = null;\n            return $http.get(billPaymentsEndpoint + '/billers' + tempQueryParams, { params: params })\n                .then(function(res) {\n                    model.billers = res && res.data && res.data.billers || [];\n                    return model.billers;\n                }, function(err) {\n                    model.errors = err.data.errors;\n                })['finally'](function() {\n                    model.isConnecting = false;\n                });\n        };\n\n        model.cancelSearch = function() {\n            model.isConnecting = false;\n        };\n\n        /**\n         * Adds biller to users biller list\n         */\n        model.addPayee = function(payee) {\n            model.isConnecting = true;\n            model.errors = null;\n            var createPayee = {\n                id: payee.id,\n                name: payee.name,\n                account: payee.account,\n                address: payee.address,\n                paymentMethod: payee.paymentMethod\n            };\n            // TODO: update url\n            return $http.post(billPaymentsEndpoint + '/payees' + tempQueryParams, createPayee)\n                .then(function(response) {\n                    model.isConnecting = false;\n                    if (response.data.errors && response.data.errors.length > 0) {\n                        model.errors = response.data.errors;\n                        return payee;\n                    }\n                    payee = response.data;\n                    payee.ebillEligible = response.data.eBillsStatus === 'ELIGIBLE';\n                    return payee;\n                }, function(response) {\n                    model.isConnecting = false;\n                    model.errors = response.data && response.data.errors;\n                    if (response.data.addresses) {\n                        payee.addresses = response.data.addresses;\n                        return payee;\n                    }\n                });\n        };\n\n        model.getAccounts = function() {\n            model.isConnecting = true;\n            model.errors = null;\n            return $http.get(billPaymentsEndpoint + '/accounts' + tempQueryParams)\n                .then(function(response) {\n                    model.isConnecting = false;\n                    var accounts = [];\n                    _.forEach(response.data.accounts, function(value, key) {\n                        var account = {\n                            id: value.accountCode,\n                            alias: value.nickName || value.description,\n                            bookedBalance: value.totalAmountDue,\n                            availableBalance: value.balance,\n                            isPrimaryAccount: value.primaryBillPaymentAccount\n                        };\n                        accounts.push(account);\n                    });\n\n                    return accounts;\n                }, function(response) {\n                    model.isConnecting = false;\n                    model.errors = response.data && response.data.errors;\n                });\n        };\n\n        /**\n         * Schedule a payment.\n         * If payment.urgentTransfer === true creates an expedited payment\n         * (marked to be processed as soon as it is created).\n         */\n        model.makeAPayment = function(payment) {\n            model.isConnecting = true;\n            model.errors = null;\n            return $http.post(instantPaymentOrdersDataSrc + tempQueryParams, payment)\n                .then(function(response) {\n                    model.isConnecting = false;\n                    return payment;\n                }, function(response) {\n                    model.isConnecting = false;\n                    model.errors = [{\n                        code: '500'\n                    }];\n                });\n        };\n\n        model.fetchPayee = function(payee) {\n            return $http.get(billPaymentsEndpoint + '/payees/' + payee.payeeId +\n                tempQueryParams).then(function(response) {\n                    return response.data;\n                });\n        };\n\n        model.setupEBills = function(payee) {\n            model.isConnecting = true;\n            return lpEBillService.setup(payee)\n                .then(function(data) {\n                    model.isConnecting = false;\n                    payee.ebills = data;\n                }, function(response) {\n                    model.isConnecting = false;\n                    model.errors = response.data && response.data.errors;\n                });\n        };\n    };\n\n    // @ngInject\n    exports.calendarService = function($http, lpWidget, lpCoreUtils) {\n        var model = this;\n        var calendarEndpoint = lpCoreUtils.resolvePortalPlaceholders(lpWidget.getPreference('calendarDataSrc'));\n\n        /**\n         * Get the business day after specified business days (offset).\n         */\n        model.getBusinessDay = function(startDate, offset) {\n            model.isConnecting = true;\n            model.errors = null;\n            return $http.get(calendarEndpoint + '/business-days-after' +\n                tempQueryParams, { params: {date: startDate, offset: offset} })\n                .then(function(response) {\n                    model.isConnecting = false;\n                    if (response.data.errors.length > 0) {\n                        model.errors = response.data.errors;\n                    }\n                    return response.data.businessDay;\n                }, function(response) {\n                    model.isConnecting = false;\n                    model.errors = response.data && response.data.errors;\n                });\n        };\n\n    };\n});\n\n\n\n/** WEBPACK FOOTER **\n ** ./scripts/models.js\n **/","/* globals define */\n\ndefine( function (require, exports, module) {\n    'use strict';\n\n    //@ngInject\n    exports.lpSelect = function() {\n\n        function linkFn(scope, elem){\n            var handler = function (ev) {\n                if(ev.type === 'keyup' && ev.keyCode !== 13) {\n                    return;\n                }\n\n                scope.$apply(function(){\n                    scope.lpSelect.call(null, {$event: ev});\n                });\n            };\n\n            elem.on('click', handler);\n            elem.on('keyup', handler);\n\n            // todo: test it\n            scope.$on('$destroy', function() {\n                // console.log('destroy linkFn');\n                elem.off(handler);\n            });\n        }\n\n        return {\n            restrict: 'A',\n            scope: {\n                lpSelect: '&'\n            },\n            compile: function(elem, attrs) {\n                // alter dom before linking\\\n                attrs.$set('tabindex', 0);\n                return linkFn;\n            },\n            link: linkFn\n        };\n    };\n\n});\n\n\n\n/** WEBPACK FOOTER **\n ** ./scripts/directives.js\n **/"],"sourceRoot":""}