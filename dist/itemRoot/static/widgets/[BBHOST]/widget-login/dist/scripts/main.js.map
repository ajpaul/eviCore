{"version":3,"sources":["webpack:///widget-login/webpack/universalModuleDefinition","webpack:///widget-login/scripts/main.js","webpack:///widget-login/webpack/bootstrap 0b12226810a314dffbb4","webpack:///widget-login/./scripts/main.js","webpack:///widget-login/(webpack)/buildin/module.js","webpack:///widget-login/external \"base\"","webpack:///widget-login/external \"core\"","webpack:///widget-login/external \"ui\"","webpack:///widget-login/./scripts/login-service.js","webpack:///widget-login/./scripts/controllers.js","webpack:///widget-login/./scripts/directives.js"],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE_3__","__WEBPACK_EXTERNAL_MODULE_4__","__WEBPACK_EXTERNAL_MODULE_5__","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","__WEBPACK_AMD_DEFINE_RESULT__","run","lpWidget","LoginService","configure","redirect","getPreference","$inject","name","base","core","ui","deps","createModule","service","controller","directive","undefined","webpackPolyfill","deprecate","paths","children","$http","$window","lpPortal","lpCoreUtils","self","config","loginUrl","logoutUrl","successPage","loginStorageConfig","userId","userData","_config","extend","doLogin","password","promise","getLoginPromise","success","response","successView","error","handleSuccessfulLogin","errors","code","data","j_username","j_password","portal_name","page_name","page","post","buildQueryString","headers","Accept","Content-Type","Cache-Control","Pragma","Expires","location","protocol","indexOf","replace","currentLocation","pathname","split","search","hash","href","doLogout","sessionStorage","clear","getStoredData","getItem","LoginController","$scope","i18nUtils","widget","utils","stored","loadMessages","bundle","messages","user","isNull","remember","allowSubmit","$broadcast","then","addEventListener","refreshHTML","autofill","restrict","link","scope","element","attrs","ngModel","$on","$setViewValue","val"],"mappings":";CAAA,SAAAA,EAAAC,GACA,gBAAAC,UAAA,gBAAAC,QACAA,OAAAD,QAAAD,EAAAG,QAAA,QAAAA,QAAA,QAAAA,QAAA,OACA,kBAAAC,gBAAAC,IACAD,QAAA,oBAAAJ,GACA,gBAAAC,SACAA,QAAA,gBAAAD,EAAAG,QAAA,QAAAA,QAAA,QAAAA,QAAA,OAEAJ,EAAA,gBAAAC,EAAAD,EAAA,KAAAA,EAAA,KAAAA,EAAA,KACCO,KAAA,SAAAC,EAAAC,EAAAC,GACD,MCAgB,UAAUC,GCN1B,QAAAC,GAAAC,GAGA,GAAAC,EAAAD,GACA,MAAAC,GAAAD,GAAAX,OAGA,IAAAC,GAAAW,EAAAD,IACAX,WACAa,GAAAF,EACAG,QAAA,EAUA,OANAL,GAAAE,GAAAI,KAAAd,EAAAD,QAAAC,IAAAD,QAAAU,GAGAT,EAAAa,QAAA,EAGAb,EAAAD,QAvBA,GAAAY,KAqCA,OATAF,GAAAM,EAAAP,EAGAC,EAAAO,EAAAL,EAGAF,EAAAQ,EAAA,GAGAR,EAAA,KDgBM,SAAST,EAAQD,QAASU,GAE/BT,EAAOD,QAAUU,EAAoB,IAKhC,SAAST,EAAQD,QAASU,GAE/B,GAAIS,IAA0D,SAASlB,GAAS,YErDjFkB,GAAQ,SAAUjB,QAASF,QAASC,GAAQ,QAgB/BmB,GAAIC,EAAUC,GAEnBA,EAAaC,WACTC,SAAUH,EAASI,cAAc,cFkDxCL,EAAIM,SAAW,WAAY,gBEjE5BzB,EAAO0B,KAAO,cAEd,IAAIC,GAAOlB,EAAQ,GACfmB,EAAOnB,EAAQ,GACfoB,EAAKpB,EAAQ,GAEbqB,GACAF,EAAKF,KACLG,EAAGH,KAWP1B,GAAOD,QAAU4B,EAAKI,aAAa/B,EAAO0B,KAAMI,GAC3CE,QAAQvB,EAAQ,IAChBwB,WAAWxB,EAAQ,IACnByB,UAAUzB,EAAQ,IAClBU,IAAIA,IA3BLL,KAAAf,QAAAU,EAAAV,QAAAC,KAAAmC,SAAAjB,IAAAlB,EAAAD,QAAAmB,MFuFsBJ,KAAKf,QAASU,EAAoB,GAAGT,KAI7D,SAASA,EAAQD,SGrGvBC,EAAAD,QAAA,SAAAC,GAQA,MAPAA,GAAAoC,kBACApC,EAAAqC,UAAA,aACArC,EAAAsC,SAEAtC,EAAAuC,YACAvC,EAAAoC,gBAAA,GAEApC,IH6GM,SAASA,EAAQD,SIrHvBC,EAAAD,QAAAM,GJ2HM,SAASL,EAAQD,SK3HvBC,EAAAD,QAAAO,GLiIM,SAASN,EAAQD,SMjIvBC,EAAAD,QAAAQ,GNuIM,SAASP,EAAQD,QAASU,GAE/B,GAAIS,EOzILA,GAAO,SAASjB,QAASF,QAASC,GAC9B,YAGAD,SAAQsB,aAAe,SAASmB,EAAOC,EAASC,EAAUC,GAMtD,GAAIC,GAAOxC,KACPyC,GACAC,SAAUJ,EAAS7C,KAAO,2BAC1BkD,UAAWL,EAAS7C,KAAO,wCAA0C6C,EAAShB,KAC9EsB,YAAa,MAEbC,GACAC,OAAQ,mBACRC,SAAU,qBAdqD/C,MAkB9DkB,UAAY,SAAS8B,GACtBT,EAAYU,OAAOR,EAAQO,IAnBoChD,KAyB9DkD,QAAU,SAASJ,EAAQK,GAC5B,GAAIC,GAAUpD,KAAKqD,gBAAgBP,EAAQK,GAAUG,QAAQ,SAAUC,GAG/DA,IAAaA,EAASC,YACtBhB,EAAKiB,MAAQ,uBAEbjB,EAAKiB,MAAQ,KACbjB,EAAKkB,sBAAsBH,UAEhCE,MAAM,SAASF,GACdf,EAAKiB,MAAQF,EAASI,OAAO,GAAGC,MAGpC,OAAOR,IAGXpD,KAAKqD,gBAAkB,SAASP,EAAQK,GAEpC,GAAIU,IACAC,WAAYhB,EACZiB,WAAYZ,EACZa,YAAa1B,EAAShB,KACtB2C,UAAW3B,EAAS4B,KAAK5C,KAQ7B,OAJGmB,GAAOtB,WACN0C,EAAK1C,SAAWsB,EAAOtB,UAGpBiB,EAAM+B,KAAK1B,EAAOC,SAAUH,EAAY6B,iBAAiBP,IAC5DQ,SACIC,OAAU,mBACVC,eAAgB,qCAChBC,gBAAiB,sCACjBC,OAAU,WACVC,QAAW,QA9D4C1E,KAuE9D0D,sBAAwB,SAAUH,GAOnC,GAJkD,IAA/ClB,EAAQsC,SAASC,SAASC,QAAQ,WACjCtB,EAASC,YAAc,MAGtBD,EAASC,YAGVnB,EAAQsC,SAASG,QAAQxC,EAAS7C,KAAO8D,EAASC,iBAC/C,CACH,GAAIuB,EAIAA,GAF8C,IAA/C1C,EAAQsC,SAASC,SAASC,QAAQ,SAG7BxC,EAAQsC,SAASK,SAASC,MAAM,MAAM,GAAK5C,EAAQsC,SAASO,OAAS7C,EAAQsC,SAASQ,KAExE9C,EAAQsC,SAASS,KAEvC/C,EAAQsC,SAASG,QAAQC,KA5FkC/E,KAmG9DqF,SAAW,WACZhD,EAAQiD,eAAeC,QACvBlD,EAAQsC,SAASS,KAAO3C,EAAOE,WArGgC3C,KAyG9DwF,cAAgB,WACjB,MAAOnD,GAAQiD,eAAeG,QAAS5C,EAAmBE,YP8IjEpD,QAAQsB,aAAaI,SAAW,QAAS,UAAW,WAAY,gBO5P9DX,KAAAf,QAAAU,EAAAV,QAAAC,KAAAmC,SAAAjB,IAAAlB,EAAAD,QAAAmB,KP+PD,SAASlB,EAAQD,QAASU,GAE/B,GAAIS,EQjQLA,GAAO,SAAUjB,QAASF,SACtB,YAGAA,SAAQ+F,gBAAkB,SAASC,EAAQC,EAAWrD,EAAavB,EAAUC,GACzE,GAAI4E,GAAS7E,EACT8E,EAAQvD,EACRwD,EAAS9E,EAAauE,eAE1BI,GAAUI,aAAaH,GAAQvC,QAAQ,SAAS2C,GAC5CN,EAAOO,SAAWD,EAAOC,WAGnCP,EAAOQ,QAEIL,EAAMM,OAAOL,IACdD,EAAM7C,OAAO0C,EAAOQ,MAChB3F,GAAIuF,EACJM,UAAU,IAIlBV,EAAOW,YAAc,WACjB,MAAOX,GAAOQ,KAAK3F,IAGvBmF,EAAOzC,QAAU,WACbyC,EAAOY,WAAW,mBAElBtF,EAAaiC,QAAQyC,EAAOQ,KAAK3F,GAAImF,EAAOQ,KAAKhD,SAAUwC,EAAOQ,KAAKE,UAAUG,KAAK,SAAS3C,GAEvF5C,EAAawC,QACbkC,EAAOlC,MAAQkC,EAAOO,UAAYP,EAAOO,SAASjF,EAAawC,QAAUxC,EAAawC,UAKlGoC,EAAOY,iBAAiB,mBAAoB,WACxCZ,EAAOa,iBRyQd/G,QAAQ+F,gBAAgBrE,SAAW,SAAU,YAAa,cAAe,WAAY,iBQ/SnFX,KAAAf,QAAAU,EAAAV,QAAAC,KAAAmC,SAAAjB,IAAAlB,EAAAD,QAAAmB,KRiTD,SAASlB,EAAQD,QAASU,GAE/B,GAAIS,ESnTLA,GAAO,SAASjB,QAASF,QAASC,GAC9B,YAGAD,SAAQgH,SAAW,WACf,OACI9G,QAAS,WACT+G,SAAU,IACVC,KAAM,SAAUC,EAAOC,EAASC,EAAOC,GACnCH,EAAMI,IAAI,kBAAmB,WACzBD,EAAQE,cAAcJ,EAAQK,aAV3C1G,KAAAf,QAAAU,EAAAV,QAAAC,KAAAmC,SAAAjB,IAAAlB,EAAAD,QAAAmB","file":"scripts/main.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"base\"), require(\"core\"), require(\"ui\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"base\", \"core\", \"ui\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"widget-login\"] = factory(require(\"base\"), require(\"core\"), require(\"ui\"));\n\telse\n\t\troot[\"widget-login\"] = factory(root[\"base\"], root[\"core\"], root[\"ui\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_3__, __WEBPACK_EXTERNAL_MODULE_4__, __WEBPACK_EXTERNAL_MODULE_5__) {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"base\"), require(\"core\"), require(\"ui\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"base\", \"core\", \"ui\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"widget-login\"] = factory(require(\"base\"), require(\"core\"), require(\"ui\"));\n\telse\n\t\troot[\"widget-login\"] = factory(root[\"base\"], root[\"core\"], root[\"ui\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_3__, __WEBPACK_EXTERNAL_MODULE_4__, __WEBPACK_EXTERNAL_MODULE_5__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n\n\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(1);\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(module) {'use strict';\n\n\t/**\n\t *  ----------------------------------------------------------------\n\t *  Copyright Â© Backbase B.V.\n\t *  ----------------------------------------------------------------\n\t *  Author : Backbase R&D - Amsterdam - New York\n\t *  Filename : main.js\n\t *  Description: Provides the ability to login using simple authentication\n\t *  ----------------------------------------------------------------\n\t */\n\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, module) {\n\n\t    'use strict';\n\n\t    module.name = 'widget-login';\n\n\t    var base = __webpack_require__(3);\n\t    var core = __webpack_require__(4);\n\t    var ui = __webpack_require__(5);\n\n\t    var deps = [core.name, ui.name];\n\n\t    // @ngInject\n\t    function run(lpWidget, LoginService) {\n\t        // Module is Bootstrapped\n\t        LoginService.configure({\n\t            redirect: lpWidget.getPreference('redirect')\n\t        });\n\t    }\n\n\t    module.exports = base.createModule(module.name, deps).service(__webpack_require__(6)).controller(__webpack_require__(7)).directive(__webpack_require__(8)).run(run);\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)(module)))\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function(module) {\r\n\t\tif(!module.webpackPolyfill) {\r\n\t\t\tmodule.deprecate = function() {};\r\n\t\t\tmodule.paths = [];\r\n\t\t\t// module.parent = undefined by default\r\n\t\t\tmodule.children = [];\r\n\t\t\tmodule.webpackPolyfill = 1;\r\n\t\t}\r\n\t\treturn module;\r\n\t}\r\n\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_4__;\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_5__;\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;'use strict';\n\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, module) {\n\t    'use strict';\n\n\t    // @ngInject\n\n\t    exports.LoginService = function ($http, $window, lpPortal, lpCoreUtils) {\n\n\t        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t        // Login model\n\t        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n\t        var self = this;\n\t        var config = {\n\t            loginUrl: lpPortal.root + '/j_spring_security_check',\n\t            logoutUrl: lpPortal.root + '/j_spring_security_logout?portalName=' + lpPortal.name,\n\t            successPage: null\n\t        };\n\t        var loginStorageConfig = {\n\t            userId: 'launchpad.userId',\n\t            userData: 'launchpad.userData'\n\t        };\n\n\t        // Allow user to configure some attributes\n\t        this.configure = function (_config) {\n\t            lpCoreUtils.extend(config, _config);\n\t        };\n\n\t        /**\n\t         * Login\n\t         */\n\t        this.doLogin = function (userId, password) {\n\t            var promise = this.getLoginPromise(userId, password).success(function (response) {\n\t                // if responce is not empty and it is not a json with successView assume\n\t                // creds were wrong, the response is the HTML of the login failure page\n\t                if (response && !response.successView) {\n\t                    self.error = 'CANNOT_AUTHENTICATE';\n\t                } else {\n\t                    self.error = null;\n\t                    self.handleSuccessfulLogin(response || {});\n\t                }\n\t            }).error(function (response) {\n\t                self.error = response.errors[0].code;\n\t            });\n\n\t            return promise;\n\t        };\n\n\t        this.getLoginPromise = function (userId, password) {\n\t            /*eslint-disable camelcase*/\n\t            var data = {\n\t                j_username: userId,\n\t                j_password: password,\n\t                portal_name: lpPortal.name,\n\t                page_name: lpPortal.page.name\n\t            };\n\t            /*eslint-enable */\n\n\t            if (config.redirect) {\n\t                data.redirect = config.redirect;\n\t            }\n\n\t            return $http.post(config.loginUrl, lpCoreUtils.buildQueryString(data), {\n\t                headers: {\n\t                    'Accept': 'application/json',\n\t                    'Content-Type': 'application/x-www-form-urlencoded;',\n\t                    'Cache-Control': 'no-cache, no-store, must-revalidate',\n\t                    'Pragma': 'no-cache',\n\t                    'Expires': '0'\n\t                }\n\t            });\n\t        };\n\n\t        /**\n\t         * Handle succesful authentication attempt.\n\t         */\n\t        this.handleSuccessfulLogin = function (response) {\n\n\t            //TODO: why do i get a success view? how can i force a reload?\n\t            if ($window.location.protocol.indexOf('file:') === 0) {\n\t                response.successView = null;\n\t            }\n\n\t            if (response.successView) {\n\t                // Redirect\n\t                //TODO: paramaterize the context path\n\t                $window.location.replace(lpPortal.root + response.successView);\n\t            } else {\n\t                var currentLocation;\n\t                // Refresh\n\t                if ($window.location.protocol.indexOf('file:') === 0) {\n\t                    //need to strip out url to state when running on the files system\n\t                    currentLocation = $window.location.pathname.split('//')[0] + $window.location.search + $window.location.hash;\n\t                } else {\n\t                    currentLocation = $window.location.href;\n\t                }\n\t                $window.location.replace(currentLocation);\n\t            }\n\t        };\n\n\t        /**\n\t         * Logout\n\t         */\n\t        this.doLogout = function () {\n\t            $window.sessionStorage.clear();\n\t            $window.location.href = config.logoutUrl;\n\t        };\n\n\t        // Retrieve stored user data\n\t        this.getStoredData = function () {\n\t            return $window.sessionStorage.getItem(loginStorageConfig.userData);\n\t        };\n\t    };\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;'use strict';\n\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports) {\n\t    'use strict';\n\n\t    // @ngInject\n\n\t    exports.LoginController = function ($scope, i18nUtils, lpCoreUtils, lpWidget, LoginService) {\n\t        var widget = lpWidget;\n\t        var utils = lpCoreUtils;\n\t        var stored = LoginService.getStoredData();\n\n\t        i18nUtils.loadMessages(widget).success(function (bundle) {\n\t            $scope.messages = bundle.messages;\n\t        });\n\n\t        $scope.user = {};\n\n\t        if (!utils.isNull(stored)) {\n\t            utils.extend($scope.user, {\n\t                id: stored,\n\t                remember: true\n\t            });\n\t        }\n\n\t        $scope.allowSubmit = function () {\n\t            return $scope.user.id;\n\t        };\n\n\t        $scope.doLogin = function () {\n\t            $scope.$broadcast('autofill:update');\n\n\t            LoginService.doLogin($scope.user.id, $scope.user.password, $scope.user.remember).then(function (data) {\n\t                // Always assign error from service to our scope, so it can be visible\n\t                if (LoginService.error) {\n\t                    $scope.error = $scope.messages && $scope.messages[LoginService.error] || LoginService.error;\n\t                }\n\t            });\n\t        };\n\n\t        widget.addEventListener('preferencesSaved', function () {\n\t            widget.refreshHTML();\n\t        });\n\t    };\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;'use strict';\n\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, module) {\n\t    'use strict';\n\n\t    // @ngInject\n\n\t    exports.autofill = function () {\n\t        return {\n\t            require: '?ngModel',\n\t            restrict: 'A',\n\t            link: function link(scope, element, attrs, ngModel) {\n\t                scope.$on('autofill:update', function () {\n\t                    ngModel.$setViewValue(element.val());\n\t                });\n\t            }\n\t        };\n\t    };\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** scripts/main.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 0b12226810a314dffbb4\n **/","/**\n *  ----------------------------------------------------------------\n *  Copyright Â© Backbase B.V.\n *  ----------------------------------------------------------------\n *  Author : Backbase R&D - Amsterdam - New York\n *  Filename : main.js\n *  Description: Provides the ability to login using simple authentication\n *  ----------------------------------------------------------------\n */\n\ndefine( function (require, exports, module) {\n\n    'use strict';\n\n    module.name = 'widget-login';\n\n    var base = require('base');\n    var core = require('core');\n    var ui = require('ui');\n\n    var deps = [\n        core.name,\n        ui.name\n    ];\n\n    // @ngInject\n    function run(lpWidget, LoginService) {\n        // Module is Bootstrapped\n        LoginService.configure({\n            redirect: lpWidget.getPreference('redirect')\n        });\n    }\n\n    module.exports = base.createModule(module.name, deps)\n        .service(require('./login-service'))\n        .controller(require('./controllers'))\n        .directive(require('./directives'))\n        .run(run);\n});\n\n\n\n/** WEBPACK FOOTER **\n ** ./scripts/main.js\n **/","module.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tmodule.children = [];\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n}\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)/buildin/module.js\n ** module id = 2\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"base\"\n ** module id = 3\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_4__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"core\"\n ** module id = 4\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_5__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"ui\"\n ** module id = 5\n ** module chunks = 0\n **/","define(function(require, exports, module) {\n    'use strict';\n\n    // @ngInject\n    exports.LoginService = function($http, $window, lpPortal, lpCoreUtils) {\n\n        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n        // Login model\n        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n        var self = this;\n        var config = {\n            loginUrl: lpPortal.root + '/j_spring_security_check',\n            logoutUrl: lpPortal.root + '/j_spring_security_logout?portalName=' + lpPortal.name,\n            successPage: null\n        };\n        var loginStorageConfig = {\n            userId: 'launchpad.userId',\n            userData: 'launchpad.userData'\n        };\n\n        // Allow user to configure some attributes\n        this.configure = function(_config) {\n            lpCoreUtils.extend(config, _config);\n        };\n\n        /**\n         * Login\n         */\n        this.doLogin = function(userId, password) {\n            var promise = this.getLoginPromise(userId, password).success(function( response ) {\n                // if responce is not empty and it is not a json with successView assume\n                // creds were wrong, the response is the HTML of the login failure page\n                if (response && !response.successView) {\n                    self.error = 'CANNOT_AUTHENTICATE';\n                } else {\n                    self.error = null;\n                    self.handleSuccessfulLogin(response || {});\n                }\n            }).error(function(response) {\n                self.error = response.errors[0].code;\n            });\n\n            return promise;\n        };\n\n        this.getLoginPromise = function(userId, password) {\n            /*eslint-disable camelcase*/\n            var data = {\n                j_username: userId,\n                j_password: password,\n                portal_name: lpPortal.name,\n                page_name: lpPortal.page.name\n            };\n            /*eslint-enable */\n\n            if(config.redirect) {\n                data.redirect = config.redirect;\n            }\n\n            return $http.post(config.loginUrl, lpCoreUtils.buildQueryString(data), {\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/x-www-form-urlencoded;',\n                    'Cache-Control': 'no-cache, no-store, must-revalidate',\n                    'Pragma': 'no-cache',\n                    'Expires': '0'\n                }\n            });\n        };\n\n\n        /**\n         * Handle succesful authentication attempt.\n         */\n        this.handleSuccessfulLogin = function( response ) {\n\n            //TODO: why do i get a success view? how can i force a reload?\n            if($window.location.protocol.indexOf('file:') === 0) {\n                response.successView = null;\n            }\n\n            if ( response.successView ) {\n                // Redirect\n                //TODO: paramaterize the context path\n                $window.location.replace(lpPortal.root + response.successView);\n            } else {\n                var currentLocation;\n                // Refresh\n                if($window.location.protocol.indexOf('file:') === 0) {\n                    //need to strip out url to state when running on the files system\n                    currentLocation =\n                        $window.location.pathname.split('//')[0] + $window.location.search + $window.location.hash;\n                } else {\n                    currentLocation = $window.location.href;\n                }\n                $window.location.replace(currentLocation);\n            }\n        };\n\n        /**\n         * Logout\n         */\n        this.doLogout = function() {\n            $window.sessionStorage.clear();\n            $window.location.href = config.logoutUrl;\n        };\n\n        // Retrieve stored user data\n        this.getStoredData = function() {\n            return $window.sessionStorage.getItem( loginStorageConfig.userData );\n        };\n    };\n});\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./scripts/login-service.js\n **/","define(function (require, exports) {\n    'use strict';\n\n    // @ngInject\n    exports.LoginController = function($scope, i18nUtils, lpCoreUtils, lpWidget, LoginService) {\n        var widget = lpWidget;\n        var utils = lpCoreUtils;\n        var stored = LoginService.getStoredData();\n\n        i18nUtils.loadMessages(widget).success(function(bundle) {\n            $scope.messages = bundle.messages;\n        });\n\n\t\t$scope.user = {};\n\n        if (!utils.isNull(stored)) {\n            utils.extend($scope.user, {\n                id: stored,\n                remember: true\n            });\n        }\n\n        $scope.allowSubmit = function() {\n            return $scope.user.id;\n        };\n\n        $scope.doLogin = function() {\n            $scope.$broadcast('autofill:update');\n\n            LoginService.doLogin($scope.user.id, $scope.user.password, $scope.user.remember).then(function(data) {\n                // Always assign error from service to our scope, so it can be visible\n                if (LoginService.error) {\n                    $scope.error = $scope.messages && $scope.messages[LoginService.error] || LoginService.error;\n                }\n            });\n        };\n\n        widget.addEventListener('preferencesSaved', function () {\n            widget.refreshHTML();\n        });\n\n    };\n});\n\n\n\n/** WEBPACK FOOTER **\n ** ./scripts/controllers.js\n **/","define(function(require, exports, module) {\n    'use strict';\n\n    // @ngInject\n    exports.autofill = function() {\n        return {\n            require: '?ngModel',\n            restrict: 'A',\n            link: function (scope, element, attrs, ngModel) {\n                scope.$on('autofill:update', function() {\n                    ngModel.$setViewValue(element.val());\n                });\n            }\n        };\n    };\n});\n\n\n\n/** WEBPACK FOOTER **\n ** ./scripts/directives.js\n **/"],"sourceRoot":""}