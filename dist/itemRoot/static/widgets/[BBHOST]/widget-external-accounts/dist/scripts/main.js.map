{"version":3,"sources":["webpack:///widget-external-accounts/webpack/universalModuleDefinition","webpack:///widget-external-accounts/scripts/main.js","webpack:///widget-external-accounts/webpack/bootstrap 0b10d6d511f6ce711263","webpack:///widget-external-accounts/./scripts/main.js","webpack:///widget-external-accounts/(webpack)/buildin/module.js","webpack:///widget-external-accounts/external \"base\"","webpack:///widget-external-accounts/external \"ui\"","webpack:///widget-external-accounts/external \"core\"","webpack:///widget-external-accounts/external \"module-accounts\"","webpack:///widget-external-accounts/./scripts/financial-institute-model.js","webpack:///widget-external-accounts/./scripts/controllers.js","webpack:///widget-external-accounts/./scripts/directives.js","webpack:///widget-external-accounts/external \"jquery\""],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE_3__","__WEBPACK_EXTERNAL_MODULE_4__","__WEBPACK_EXTERNAL_MODULE_5__","__WEBPACK_EXTERNAL_MODULE_6__","__WEBPACK_EXTERNAL_MODULE_10__","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","__WEBPACK_AMD_DEFINE_RESULT__","run","lpWidget","lpCoreBus","model","name","publish","$inject","base","ui","core","accounts","deps","createModule","controller","directive","undefined","webpackPolyfill","deprecate","paths","children","FinancialInstituteModel","httpService","$resource","lpCoreUtils","FIModel","config","self","enableGrouping","financialInstitutesEndpoint","resolvePortalPlaceholders","financialInstitutesService","membershipRequestsEndpoint","membershipRequestsService","selected","selectedMembership","financialInstitutes","membershipRequests","errors","warnings","prototype","searchFinancialInstitutes","searchConfig","loadMore","search","promise","query","$promise","then","response","i","length","push","addError","captionCode","setSelected","fi","loadMembershipRequests","loadMembershipRequestByID","membershipRequestID","get","getRequiredCredentials","credentials","requiredUserCredentials","createMembershipRequest","financialInstitute","MembershipRequest","membershipRequest","institutionId","credential","credentialId","value","fieldValue","$save","updateMembershipRequest","updatedRequest","status","error","found","addWarning","warning","clearErrors","clearWarnings","getInstance","ExternalAccountsController","$scope","$timeout","i18nUtils","initialize","fiModel","getPreference","partialsDir","getWidgetBaseUrl","increment","parseInt","searchIndex","typeFilters","all","label","code","loan","credit-cards","checking","typeFilter","contextLabel","loadMessages","locale","success","bundle","messages","isConnecting","f","l","accountTypes","restartWizard","reset","goToWizardStep","loadAccounts","close","FinancialInstitutionListController","$element","noMoreFIs","selectFI","$event","which","type","wizardNextStep","searchForFinancialInstitute","resetSearchIndex","searchForFIByKeyword","debounce","disableEnterSubmit","preventDefault","filterFIsByType","forEach","filter","CredentialsViewController","pollCount","authenticateWithSelectedFI","handleAuthenticationResponse","updateRequiredCredentials","membership","pollForAuth","membershipId","data","extraAuthRequired","$","lazyLoader","$window","restrict","scope","callBack","stopLoading","link","element","attrs","win","getHeight","widgetElement","height","offset","top","doLoadMore","scrollTop","off","on","closest","$watch","newValue","oldValue"],"mappings":"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","file":"scripts/main.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"base\"), require(\"ui\"), require(\"core\"), require(\"module-accounts\"), require(\"jquery\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"base\", \"ui\", \"core\", \"module-accounts\", \"jquery\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"widget-external-accounts\"] = factory(require(\"base\"), require(\"ui\"), require(\"core\"), require(\"module-accounts\"), require(\"jquery\"));\n\telse\n\t\troot[\"widget-external-accounts\"] = factory(root[\"base\"], root[\"ui\"], root[\"core\"], root[\"module-accounts\"], root[\"jquery\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_3__, __WEBPACK_EXTERNAL_MODULE_4__, __WEBPACK_EXTERNAL_MODULE_5__, __WEBPACK_EXTERNAL_MODULE_6__, __WEBPACK_EXTERNAL_MODULE_10__) {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"base\"), require(\"ui\"), require(\"core\"), require(\"module-accounts\"), require(\"jquery\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"base\", \"ui\", \"core\", \"module-accounts\", \"jquery\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"widget-external-accounts\"] = factory(require(\"base\"), require(\"ui\"), require(\"core\"), require(\"module-accounts\"), require(\"jquery\"));\n\telse\n\t\troot[\"widget-external-accounts\"] = factory(root[\"base\"], root[\"ui\"], root[\"core\"], root[\"module-accounts\"], root[\"jquery\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_3__, __WEBPACK_EXTERNAL_MODULE_4__, __WEBPACK_EXTERNAL_MODULE_5__, __WEBPACK_EXTERNAL_MODULE_6__, __WEBPACK_EXTERNAL_MODULE_10__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n\n\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(1);\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(module) {'use strict';\n\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, module) {\n\t    'use strict';\n\n\t    module.name = 'widgets-external-accounts';\n\n\t    var base = __webpack_require__(3);\n\t    var ui = __webpack_require__(4);\n\t    var core = __webpack_require__(5);\n\t    var accounts = __webpack_require__(6);\n\n\t    var deps = [core.name, ui.name, accounts.name];\n\n\t    // @ngInject\n\t    function run(lpWidget, lpCoreBus) {\n\t        if (lpWidget && lpWidget.model && lpWidget.model.name) {\n\t            lpCoreBus.publish('cxp.item.loaded', { id: lpWidget.model.name });\n\t        }\n\t    }\n\n\t    module.exports = base.createModule(module.name, deps).factory(__webpack_require__(7)).controller(__webpack_require__(8)).directive(__webpack_require__(9)).run(run);\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)(module)))\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function(module) {\r\n\t\tif(!module.webpackPolyfill) {\r\n\t\t\tmodule.deprecate = function() {};\r\n\t\t\tmodule.paths = [];\r\n\t\t\t// module.parent = undefined by default\r\n\t\t\tmodule.children = [];\r\n\t\t\tmodule.webpackPolyfill = 1;\r\n\t\t}\r\n\t\treturn module;\r\n\t}\r\n\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_4__;\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_5__;\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_6__;\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;'use strict';\n\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, module) {\n\t    'use strict';\n\n\t    // @ngInject\n\n\t    exports.FinancialInstituteModel = function (httpService, $resource, lpCoreUtils) {\n\n\t        /**\n\t         * Financial Institutes service constructor\n\t         * @param config\n\t         * @constructor\n\t         */\n\t        var FIModel = function FIModel(config) {\n\n\t            var self = this;\n\n\t            self.enableGrouping = config.enableGrouping;\n\n\t            config.financialInstitutesEndpoint = lpCoreUtils.resolvePortalPlaceholders(config.financialInstitutesEndpoint);\n\t            self.financialInstitutesService = $resource(config.financialInstitutesEndpoint);\n\n\t            config.membershipRequestsEndpoint = lpCoreUtils.resolvePortalPlaceholders(config.membershipRequestsEndpoint);\n\t            self.membershipRequestsService = $resource(config.membershipRequestsEndpoint);\n\n\t            self.selected = {};\n\t            self.selectedMembership = {};\n\t            self.financialInstitutes = [];\n\t            self.membershipRequests = [];\n\t            self.errors = [];\n\t            self.warnings = [];\n\t        };\n\n\t        /**\n\t         * Loads the financial institutes from the back end\n\t         * @param searchConfig { name, accountType[]}\n\t         * @returns promise\n\t         */\n\t        FIModel.prototype.searchFinancialInstitutes = function (searchConfig, loadMore) {\n\n\t            var self = this;\n\n\t            searchConfig.search = 'search';\n\n\t            var promise = self.financialInstitutesService.query(searchConfig).$promise;\n\n\t            promise.then(function (response) {\n\n\t                if (!loadMore) {\n\t                    self.financialInstitutes = response;\n\t                } else {\n\t                    for (var i = 0; i < response.length; i++) {\n\t                        self.financialInstitutes.push(response[i]);\n\t                    }\n\t                }\n\t            }, function (response) {\n\n\t                self.addError({ captionCode: 'badConnection' });\n\t            });\n\n\t            return promise;\n\t        };\n\n\t        /**\n\t         * Sets the passed FI as the currently selected one\n\t         * @param fi {}\n\t         */\n\t        FIModel.prototype.setSelected = function (fi) {\n\n\t            var self = this;\n\n\t            self.selected = fi;\n\t        };\n\n\t        /**\n\t         * Loads membership requests from the service\n\t         * @returns promise\n\t         */\n\t        FIModel.prototype.loadMembershipRequests = function () {\n\n\t            var self = this;\n\n\t            var promise = self.membershipRequestsService.query().$promise;\n\n\t            promise.then(function (response) {\n\n\t                self.membershipRequests = response;\n\t            }, function () {\n\n\t                self.addError({ captionCode: 'badConnection' });\n\t            });\n\n\t            return promise;\n\t        };\n\n\t        /**\n\t         * Loads a single membership request By ID\n\t         * @param membershipRequestID\n\t         * @returns promise\n\t         */\n\t        FIModel.prototype.loadMembershipRequestByID = function (membershipRequestID) {\n\n\t            var self = this;\n\n\t            var promise = self.membershipRequestsService.get({ id: membershipRequestID }).$promise;\n\n\t            promise.then(function (response) {\n\n\t                self.selectedMembership = response;\n\t            }, function () {\n\n\t                self.addError({ captionCode: 'badConnection' });\n\t            });\n\n\t            return promise;\n\t        };\n\n\t        /**\n\t         * Returns a list of the required credentials to be supplied by user\n\t         * @param fiId - financial institute ID\n\t         */\n\t        FIModel.prototype.getRequiredCredentials = function () {\n\n\t            var self = this;\n\n\t            var config = {\n\t                'id': self.selected.id,\n\t                'credentials': 'credentials'\n\t            };\n\n\t            var promise = self.financialInstitutesService.query(config).$promise;\n\n\t            promise.then(function (response) {\n\n\t                self.selected.requiredUserCredentials = response;\n\t            }, function (response) {\n\n\t                self.addError({ captionCode: 'badConnection' });\n\t            });\n\n\t            return promise;\n\t        };\n\n\t        /**\n\t         * Creates a membership request, then delegates the resulting response to the correct handler\n\t         * @param financialInstitute {}\n\t         * @returns promise\n\t         */\n\t        FIModel.prototype.createMembershipRequest = function (financialInstitute) {\n\n\t            var self = this;\n\t            var MembershipRequest = self.membershipRequestsService;\n\t            var membershipRequest = new MembershipRequest();\n\n\t            membershipRequest.institutionId = financialInstitute.id;\n\t            membershipRequest.credentials = [];\n\n\t            for (var i = 0; i < financialInstitute.requiredUserCredentials.length; i++) {\n\t                var credential = {};\n\t                credential.credentialId = financialInstitute.requiredUserCredentials[i].id;\n\t                credential.value = financialInstitute.requiredUserCredentials[i].fieldValue;\n\n\t                membershipRequest.credentials.push(credential);\n\t            }\n\n\t            var promise = membershipRequest.$save();\n\n\t            promise.then(function (response) {\n\n\t                self.selectedMembership = response;\n\t            }, function () {\n\n\t                self.addError({ captionCode: 'invalidCredentials' });\n\t            });\n\n\t            return promise;\n\t        };\n\n\t        /**\n\t         * Updates and already existing membership request\n\t         * @param membershipRequest\n\t         * @returns promise\n\t         */\n\t        FIModel.prototype.updateMembershipRequest = function (membershipRequest) {\n\n\t            var self = this;\n\n\t            //small hack to deal with API\n\t            var MembershipRequest = self.membershipRequestsService;\n\t            var updatedRequest = new MembershipRequest();\n\t            updatedRequest.institutionId = membershipRequest.institutionId;\n\t            updatedRequest.credentials = [];\n\n\t            for (var i = 0; i < self.selected.requiredUserCredentials.length; i++) {\n\t                var credential = {};\n\t                credential.credentialId = self.selected.requiredUserCredentials[i].id;\n\t                credential.value = self.selected.requiredUserCredentials[i].fieldValue;\n\n\t                updatedRequest.credentials.push(credential);\n\t            }\n\n\t            var promise = updatedRequest.$save({ id: membershipRequest.id, credentials: 'credentials' });\n\n\t            promise.then(function (response) {\n\t                self.selectedMembership = response;\n\t            }, function (response) {\n\n\t                if (response.status === 401) {\n\t                    self.addError({ captionCode: 'invalidCredentials' });\n\t                } else {\n\t                    self.addError({ captionCode: 'badConnection' });\n\t                }\n\t            });\n\n\t            return promise;\n\t        };\n\n\t        /**\n\t         * Adds an error to the list of errors on the model\n\t         * @param error\n\t         */\n\t        FIModel.prototype.addError = function (error) {\n\n\t            var self = this;\n\t            var found = false;\n\n\t            for (var i = 0; i < self.errors.length; i++) {\n\t                if (self.errors[i].captionCode === error.captionCode) {\n\t                    //error already exists\n\t                    found = true;\n\t                }\n\t            }\n\n\t            if (!found) {\n\t                self.errors.push(error);\n\t            }\n\t        };\n\n\t        /**\n\t         * Adds an warning to the list of warnings on the model\n\t         * @param warning\n\t         */\n\t        FIModel.prototype.addWarning = function (warning) {\n\n\t            var self = this;\n\t            var found = false;\n\n\t            for (var i = 0; i < self.warnings.length; i++) {\n\t                if (self.warnings[i].captionCode === warning.captionCode) {\n\t                    //warning already exists\n\t                    found = true;\n\t                }\n\t            }\n\n\t            if (!found) {\n\t                self.warnings.push(warning);\n\t            }\n\t        };\n\n\t        FIModel.prototype.clearErrors = function () {\n\n\t            var self = this;\n\n\t            self.errors = [];\n\t        };\n\n\t        FIModel.prototype.clearWarnings = function () {\n\n\t            var self = this;\n\n\t            self.warnings = [];\n\t        };\n\n\t        return {\n\t            getInstance: function getInstance(config) {\n\t                return new FIModel(config);\n\t            }\n\t        };\n\t    };\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;'use strict';\n\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, module) {\n\t    'use strict';\n\n\t    // @ngInject\n\n\t    exports.ExternalAccountsController = function ($scope, lpWidget, $timeout, FinancialInstituteModel, i18nUtils, lpCoreUtils, lpCoreBus) {\n\t        var initialize = function initialize() {\n\t            //NB!!! fi = financial institute\n\t            $scope.fiModel = FinancialInstituteModel.getInstance({\n\t                financialInstitutesEndpoint: lpWidget.getPreference('financialInstitutionsSrc'),\n\t                membershipRequestsEndpoint: lpWidget.getPreference('membershipRequestsSrc')\n\t            });\n\n\t            $scope.partialsDir = lpCoreUtils.getWidgetBaseUrl(lpWidget) + '/partials/';\n\n\t            $scope.increment = parseInt(lpWidget.getPreference('amountToLoad'), 10) || 5;\n\t            $scope.searchIndex = 1;\n\n\t            $scope.typeFilters = {\n\t                'all': {\n\t                    label: 'All',\n\t                    code: '',\n\t                    selected: true\n\t                },\n\t                'loan': {\n\t                    label: 'Loans',\n\t                    code: 'LOAN',\n\t                    selected: false\n\t                },\n\t                'credit-cards': {\n\t                    label: 'Credit Cards',\n\t                    code: 'CREDIT_CARD',\n\t                    selected: false\n\t                },\n\t                'checking': {\n\t                    label: 'Checking/Savings',\n\t                    code: 'CHECKING,SAVINGS',\n\t                    selected: false\n\t                }\n\t            };\n\n\t            $scope.search = {\n\t                name: '',\n\t                typeFilter: ''\n\t            };\n\n\t            $scope.contextLabel = 'All';\n\n\t            i18nUtils.loadMessages(lpWidget, $scope.locale).success(function (bundle) {\n\t                $scope.messages = bundle.messages;\n\t            });\n\n\t            //load initial list with empty search\n\t            $scope.fiModel.isConnecting = true;\n\t            $scope.fiModel.searchFinancialInstitutes({\n\t                f: $scope.searchIndex,\n\t                l: $scope.increment,\n\t                name: '',\n\t                accountTypes: []\n\t            }).then(function () {\n\t                //increment the searchIndex for next load\n\t                $scope.searchIndex = $scope.searchIndex + $scope.increment;\n\t            })['finally'](function () {\n\t                $scope.fiModel.isConnecting = false;\n\t            });\n\t        };\n\n\t        $scope.restartWizard = function () {\n\n\t            $scope.reset();\n\t            $scope.goToWizardStep(1);\n\t        };\n\n\t        $scope.reset = function () {\n\n\t            $scope.fiModel.isConnecting = false;\n\t            $scope.fiModel.selectedMembership = {};\n\t            $scope.fiModel.clearErrors();\n\t            $scope.fiModel.clearWarnings();\n\t        };\n\n\t        $scope.loadAccounts = function () {\n\t            $scope.reset();\n\t            $timeout(function () {\n\t                //$scope.fiModel.selected.isConnecting = false;\n\t            }, 2000);\n\t        };\n\n\t        $scope.close = function () {\n\n\t            lpCoreBus.publish('launchpad-retail.closeActivePanel');\n\t        };\n\n\t        initialize();\n\t    };\n\n\t    // @ngInject\n\t    exports.FinancialInstitutionListController = function ($scope, $element, $timeout, lpCoreUtils) {\n\n\t        $scope.noMoreFIs = false;\n\n\t        /**\n\t         * Sets the passed financial institute as the currently selected one\n\t         * @param fi\n\t         */\n\t        $scope.selectFI = function (fi, $event) {\n\n\t            if ($event.which === 13 || $event.type === 'click') {\n\n\t                $scope.fiModel.setSelected(fi);\n\t                $scope.fiModel.isConnecting = true;\n\n\t                var promise = $scope.fiModel.getRequiredCredentials();\n\n\t                promise.then(function (response) {\n\n\t                    var credential;\n\t                    for (var i = 0; i < $scope.fiModel.selected.requiredUserCredentials.length; i++) {\n\t                        credential = $scope.fiModel.selected.requiredUserCredentials[i];\n\t                        credential.fieldValue = '';\n\t                    }\n\t                    $scope.fiModel.isConnecting = false;\n\t                    $scope.wizardNextStep();\n\t                }, function () {\n\n\t                    $scope.fiModel.isConnecting = false;\n\t                });\n\t            }\n\t        };\n\n\t        $scope.searchForFinancialInstitute = function (loadMore) {\n\n\t            $scope.fiModel.isConnecting = true;\n\n\t            return $scope.fiModel.searchFinancialInstitutes({\n\t                f: $scope.searchIndex,\n\t                l: $scope.increment,\n\t                name: $scope.search.name,\n\t                accountTypes: $scope.search.typeFilter\n\t            }, loadMore).then(function (response) {\n\n\t                $scope.fiModel.isConnecting = false;\n\t                //if the response is smaller than increment then there aren't any results left\n\t                if (response.length < $scope.increment) {\n\t                    $scope.noMoreFIs = true;\n\t                } else {\n\t                    $scope.searchIndex = $scope.searchIndex + $scope.increment;\n\t                }\n\t            }, function () {\n\n\t                $scope.fiModel.isConnecting = false;\n\t            });\n\t        };\n\n\t        $scope.resetSearchIndex = function () {\n\n\t            $scope.searchIndex = 1;\n\t            $scope.noMoreFIs = false;\n\t        };\n\n\t        $scope.searchForFIByKeyword = lpCoreUtils.debounce(function () {\n\t            $scope.resetSearchIndex();\n\t            $scope.searchForFinancialInstitute();\n\t        }, 500);\n\n\t        /**\n\t         * Function to prevent default action on enter key pressed\n\t         * fixes ie10 issue (LPES-2861)\n\t         * @param  {object} $event angular key event\n\t         */\n\t        $scope.disableEnterSubmit = function ($event) {\n\t            if ($event && $event.which === 13) {\n\t                $event.preventDefault();\n\t                return;\n\t            }\n\t        };\n\n\t        $scope.filterFIsByType = function (type, $event) {\n\n\t            if ($event && $event.which !== 13) {\n\t                return;\n\t            }\n\n\t            $scope.resetSearchIndex();\n\t            //set the type filter and active state\n\t            lpCoreUtils.forEach($scope.typeFilters, function (filter) {\n\t                filter.selected = false;\n\t            });\n\t            $scope.search.typeFilter = $scope.typeFilters[type].code;\n\t            $scope.typeFilters[type].selected = true;\n\n\t            //set the type filter label\n\t            $scope.contextLabel = type ? $scope.typeFilters[type].label : 'All';\n\t            $scope.searchForFinancialInstitute();\n\t        };\n\t    };\n\n\t    // @ngInject\n\t    exports.CredentialsViewController = function ($scope, $timeout) {\n\n\t        $scope.pollCount = 0;\n\n\t        $scope.authenticateWithSelectedFI = function () {\n\n\t            $scope.fiModel.clearErrors();\n\t            $scope.fiModel.isConnecting = true;\n\n\t            var promise;\n\n\t            //if we are re-handling auth, the membership will have already been created\n\t            if ($scope.fiModel.selectedMembership.id) {\n\t                promise = $scope.fiModel.updateMembershipRequest($scope.fiModel.selectedMembership);\n\t            } else {\n\t                //create membership\n\t                promise = $scope.fiModel.createMembershipRequest($scope.fiModel.selected);\n\t            }\n\n\t            promise.then(function (response) {\n\n\t                $scope.handleAuthenticationResponse(response);\n\t            }, function () {\n\n\t                $scope.fiModel.isConnecting = false;\n\t            });\n\t        };\n\n\t        $scope.updateRequiredCredentials = function (membership) {\n\n\t            $scope.fiModel.addWarning({ captionCode: 'extraAuth' });\n\t            $scope.fiModel.selected.requiredUserCredentials = membership.credentials;\n\t            $scope.fiModel.isConnecting = false;\n\t        };\n\n\t        $scope.pollForAuth = function (membershipId) {\n\n\t            $timeout(function () {\n\n\t                if ($scope.pollCount < 10) {\n\t                    var promise = $scope.fiModel.loadMembershipRequestByID(membershipId);\n\n\t                    promise.then(function (membership) {\n\t                        $scope.handleAuthenticationResponse(membership);\n\t                        $scope.pollCount++;\n\t                    }, function () {\n\n\t                        $scope.fiModel.isConnecting = false;\n\t                        $scope.pollCount = 0;\n\t                    });\n\t                } else {\n\t                    $scope.fiModel.addError({ captionCode: 'badConnection' });\n\t                    $scope.pollCount = 0;\n\t                }\n\t            }, 2000);\n\t        };\n\n\t        $scope.handleAuthenticationResponse = function (data) {\n\n\t            switch (data.status) {\n\t                case 'CREATED':\n\t                    $scope.wizardNextStep();\n\t                    $scope.loadAccounts();\n\t                    break;\n\t                case 'CHALLENGE':\n\t                    $scope.fiModel.selected.extraAuthRequired = true;\n\t                    $scope.updateRequiredCredentials(data);\n\t                    break;\n\t                case 'PENDING':\n\t                    $scope.pollForAuth(data.id);\n\t                    break;\n\t            }\n\t        };\n\t    };\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;'use strict';\n\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, module) {\n\t    'use strict';\n\n\t    var $ = __webpack_require__(10);\n\n\t    // @ngInject\n\t    exports.lazyLoader = function ($window, lpCoreUtils) {\n\t        return {\n\t            restrict: 'A',\n\t            scope: {\n\t                callBack: '=',\n\t                stopLoading: '='\n\t            },\n\t            link: function link(scope, element, attrs) {\n\t                var win;\n\n\t                var getHeight = function getHeight() {\n\t                    return scope.widgetElement.height() + scope.widgetElement.offset().top;\n\t                };\n\n\t                var doLoadMore = lpCoreUtils.debounce(function () {\n\t                    if (win.scrollTop() > getHeight() - 150) {\n\t                        win.off('scroll', doLoadMore);\n\t                        scope.callBack(true).then(function () {\n\t                            if (!scope.stopLoading) {\n\t                                win.on('scroll', doLoadMore);\n\t                            }\n\t                        });\n\t                    }\n\t                }, 10);\n\n\t                var initialize = function initialize() {\n\t                    win = $($window);\n\t                    scope.widgetElement = element.closest('.widget');\n\t                    win.on('scroll', doLoadMore);\n\t                };\n\n\t                scope.$watch('stopLoading', function (newValue, oldValue) {\n\n\t                    if (newValue) {\n\t                        $($window).off('scroll', doLoadMore);\n\t                    } else if (oldValue && !newValue) {\n\t                        win.on('scroll', doLoadMore);\n\t                    }\n\t                });\n\n\t                initialize();\n\t            }\n\n\t        };\n\t    };\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ },\n/* 10 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_10__;\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** scripts/main.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 0b10d6d511f6ce711263\n **/","define(function (require, exports, module) {\n    'use strict';\n\n    module.name = 'widgets-external-accounts';\n\n    var base = require('base');\n    var ui = require('ui');\n    var core = require('core');\n    var accounts = require('module-accounts');\n\n    var deps = [\n        core.name,\n        ui.name,\n        accounts.name\n    ];\n\n    // @ngInject\n    function run(lpWidget, lpCoreBus) {\n        if (lpWidget && lpWidget.model && lpWidget.model.name) {\n            lpCoreBus.publish('cxp.item.loaded', { id: lpWidget.model.name });\n        }\n    }\n\n    module.exports = base.createModule(module.name, deps)\n        .factory(require('./financial-institute-model'))\n        .controller(require('./controllers'))\n        .directive(require('./directives'))\n        .run(run)\n});\n\n\n\n/** WEBPACK FOOTER **\n ** ./scripts/main.js\n **/","module.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tmodule.children = [];\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n}\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)/buildin/module.js\n ** module id = 2\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"base\"\n ** module id = 3\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_4__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"ui\"\n ** module id = 4\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_5__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"core\"\n ** module id = 5\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_6__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"module-accounts\"\n ** module id = 6\n ** module chunks = 0\n **/","define(function(require, exports, module) {\n    'use strict';\n\n    // @ngInject\n    exports.FinancialInstituteModel = function(httpService, $resource, lpCoreUtils) {\n\n        /**\n         * Financial Institutes service constructor\n         * @param config\n         * @constructor\n         */\n        var FIModel = function(config) {\n\n            var self = this;\n\n            self.enableGrouping = config.enableGrouping;\n\n            config.financialInstitutesEndpoint = lpCoreUtils.resolvePortalPlaceholders(config.financialInstitutesEndpoint);\n            self.financialInstitutesService = $resource(config.financialInstitutesEndpoint);\n\n            config.membershipRequestsEndpoint = lpCoreUtils.resolvePortalPlaceholders(config.membershipRequestsEndpoint);\n            self.membershipRequestsService = $resource(config.membershipRequestsEndpoint);\n\n            self.selected = {};\n            self.selectedMembership = {};\n            self.financialInstitutes = [];\n            self.membershipRequests = [];\n            self.errors = [];\n            self.warnings = [];\n        };\n\n        /**\n         * Loads the financial institutes from the back end\n         * @param searchConfig { name, accountType[]}\n         * @returns promise\n         */\n        FIModel.prototype.searchFinancialInstitutes = function(searchConfig, loadMore) {\n\n            var self = this;\n\n            searchConfig.search = 'search';\n\n            var promise = self.financialInstitutesService.query(searchConfig).$promise;\n\n            promise.then(function(response) {\n\n                if(!loadMore) {\n                    self.financialInstitutes = response;\n                } else {\n                    for(var i = 0; i < response.length; i++) {\n                        self.financialInstitutes.push(response[i]);\n                    }\n                }\n            }, function(response) {\n\n                self.addError({captionCode: 'badConnection'});\n            });\n\n            return promise;\n        };\n\n        /**\n         * Sets the passed FI as the currently selected one\n         * @param fi {}\n         */\n        FIModel.prototype.setSelected = function(fi) {\n\n            var self = this;\n\n            self.selected = fi;\n        };\n\n        /**\n         * Loads membership requests from the service\n         * @returns promise\n         */\n        FIModel.prototype.loadMembershipRequests = function() {\n\n            var self = this;\n\n            var promise = self.membershipRequestsService.query().$promise;\n\n            promise.then(function(response) {\n\n                self.membershipRequests = response;\n            }, function() {\n\n                self.addError({captionCode: 'badConnection'});\n            });\n\n            return promise;\n        };\n\n        /**\n         * Loads a single membership request By ID\n         * @param membershipRequestID\n         * @returns promise\n         */\n        FIModel.prototype.loadMembershipRequestByID = function(membershipRequestID) {\n\n            var self = this;\n\n            var promise = self.membershipRequestsService.get({id: membershipRequestID}).$promise;\n\n            promise.then(function(response) {\n\n                self.selectedMembership = response;\n            }, function() {\n\n                self.addError({captionCode: 'badConnection'});\n            });\n\n            return promise;\n        };\n\n        /**\n         * Returns a list of the required credentials to be supplied by user\n         * @param fiId - financial institute ID\n         */\n        FIModel.prototype.getRequiredCredentials = function() {\n\n            var self = this;\n\n            var config = {\n                'id': self.selected.id,\n                'credentials': 'credentials'\n            };\n\n            var promise = self.financialInstitutesService.query(config).$promise;\n\n            promise.then(function(response) {\n\n                self.selected.requiredUserCredentials = response;\n            }, function(response) {\n\n                self.addError({captionCode: 'badConnection'});\n            });\n\n            return promise;\n        };\n\n        /**\n         * Creates a membership request, then delegates the resulting response to the correct handler\n         * @param financialInstitute {}\n         * @returns promise\n         */\n        FIModel.prototype.createMembershipRequest = function(financialInstitute) {\n\n            var self = this;\n            var MembershipRequest = self.membershipRequestsService;\n            var membershipRequest = new MembershipRequest();\n\n            membershipRequest.institutionId = financialInstitute.id;\n            membershipRequest.credentials = [];\n\n            for(var i = 0; i < financialInstitute.requiredUserCredentials.length; i++) {\n                var credential = {};\n                credential.credentialId = financialInstitute.requiredUserCredentials[i].id;\n                credential.value = financialInstitute.requiredUserCredentials[i].fieldValue;\n\n                membershipRequest.credentials.push(credential);\n            }\n\n            var promise = membershipRequest.$save();\n\n            promise.then(function(response) {\n\n                self.selectedMembership = response;\n            }, function() {\n\n                self.addError({captionCode: 'invalidCredentials'});\n            });\n\n            return promise;\n        };\n\n        /**\n         * Updates and already existing membership request\n         * @param membershipRequest\n         * @returns promise\n         */\n        FIModel.prototype.updateMembershipRequest = function(membershipRequest) {\n\n            var self = this;\n\n            //small hack to deal with API\n            var MembershipRequest = self.membershipRequestsService;\n            var updatedRequest = new MembershipRequest();\n            updatedRequest.institutionId = membershipRequest.institutionId;\n            updatedRequest.credentials = [];\n\n            for(var i = 0; i < self.selected.requiredUserCredentials.length; i++) {\n                var credential = {};\n                credential.credentialId = self.selected.requiredUserCredentials[i].id;\n                credential.value = self.selected.requiredUserCredentials[i].fieldValue;\n\n                updatedRequest.credentials.push(credential);\n            }\n\n            var promise = updatedRequest.$save({id: membershipRequest.id, credentials: 'credentials'});\n\n            promise.then(function(response) {\n                self.selectedMembership = response;\n            }, function(response) {\n\n                if(response.status === 401) {\n                    self.addError({captionCode: 'invalidCredentials'});\n                } else {\n                    self.addError({captionCode: 'badConnection'});\n                }\n\n            });\n\n            return promise;\n        };\n\n        /**\n         * Adds an error to the list of errors on the model\n         * @param error\n         */\n        FIModel.prototype.addError = function(error) {\n\n            var self = this;\n            var found = false;\n\n            for(var i = 0; i < self.errors.length; i++) {\n                if(self.errors[i].captionCode === error.captionCode) {\n                    //error already exists\n                    found = true;\n                }\n            }\n\n            if(!found) {\n                self.errors.push(error);\n            }\n        };\n\n        /**\n         * Adds an warning to the list of warnings on the model\n         * @param warning\n         */\n        FIModel.prototype.addWarning = function(warning) {\n\n            var self = this;\n            var found = false;\n\n            for(var i = 0; i < self.warnings.length; i++) {\n                if(self.warnings[i].captionCode === warning.captionCode) {\n                    //warning already exists\n                    found = true;\n                }\n            }\n\n            if(!found) {\n                self.warnings.push(warning);\n            }\n        };\n\n        FIModel.prototype.clearErrors = function() {\n\n            var self = this;\n\n            self.errors = [];\n        };\n\n        FIModel.prototype.clearWarnings = function() {\n\n            var self = this;\n\n            self.warnings = [];\n        };\n\n        return {\n            getInstance: function(config) {\n                return new FIModel(config);\n            }\n        };\n    };\n});\n\n\n\n/** WEBPACK FOOTER **\n ** ./scripts/financial-institute-model.js\n **/","define(function(require, exports, module) {\n    'use strict';\n\n    // @ngInject\n    exports.ExternalAccountsController = function($scope, lpWidget, $timeout, FinancialInstituteModel, i18nUtils, lpCoreUtils, lpCoreBus) {\n        var initialize = function () {\n            //NB!!! fi = financial institute\n            $scope.fiModel = FinancialInstituteModel.getInstance({\n                financialInstitutesEndpoint: lpWidget.getPreference('financialInstitutionsSrc'),\n                membershipRequestsEndpoint: lpWidget.getPreference('membershipRequestsSrc')\n            });\n\n            $scope.partialsDir = lpCoreUtils.getWidgetBaseUrl(lpWidget) + '/partials/';\n\n            $scope.increment = parseInt(lpWidget.getPreference('amountToLoad'), 10) || 5;\n            $scope.searchIndex = 1;\n\n            $scope.typeFilters = {\n                'all': {\n                    label: 'All',\n                    code: '',\n                    selected: true\n                },\n                'loan': {\n                    label: 'Loans',\n                    code: 'LOAN',\n                    selected: false\n                },\n                'credit-cards': {\n                    label: 'Credit Cards',\n                    code: 'CREDIT_CARD',\n                    selected: false\n                },\n                'checking': {\n                    label: 'Checking/Savings',\n                    code: 'CHECKING,SAVINGS',\n                    selected: false\n                }\n            };\n\n            $scope.search = {\n                name: '',\n                typeFilter: ''\n            };\n\n            $scope.contextLabel = 'All';\n\n            i18nUtils.loadMessages(lpWidget, $scope.locale).success(function(bundle) {\n                $scope.messages = bundle.messages;\n            });\n\n            //load initial list with empty search\n            $scope.fiModel.isConnecting = true;\n            $scope.fiModel.searchFinancialInstitutes({\n                f: $scope.searchIndex,\n                l: $scope.increment,\n                name: '',\n                accountTypes: []\n            }).then(function() {\n                //increment the searchIndex for next load\n                $scope.searchIndex = $scope.searchIndex + $scope.increment;\n            })['finally'](function() {\n                $scope.fiModel.isConnecting = false;\n            });\n        };\n\n        $scope.restartWizard = function() {\n\n            $scope.reset();\n            $scope.goToWizardStep(1);\n        };\n\n        $scope.reset = function() {\n\n            $scope.fiModel.isConnecting = false;\n            $scope.fiModel.selectedMembership = {};\n            $scope.fiModel.clearErrors();\n            $scope.fiModel.clearWarnings();\n        };\n\n        $scope.loadAccounts = function() {\n            $scope.reset();\n            $timeout(function() {\n                //$scope.fiModel.selected.isConnecting = false;\n            }, 2000);\n\n        };\n\n        $scope.close = function() {\n\n            lpCoreBus.publish('launchpad-retail.closeActivePanel');\n        };\n\n        initialize();\n\n    };\n\n    // @ngInject\n    exports.FinancialInstitutionListController = function($scope, $element, $timeout, lpCoreUtils) {\n\n        $scope.noMoreFIs = false;\n\n        /**\n         * Sets the passed financial institute as the currently selected one\n         * @param fi\n         */\n        $scope.selectFI = function(fi, $event) {\n\n            if($event.which === 13 || $event.type === 'click') {\n\n                $scope.fiModel.setSelected(fi);\n                $scope.fiModel.isConnecting = true;\n\n                var promise = $scope.fiModel.getRequiredCredentials();\n\n                promise.then(function (response) {\n\n                    var credential;\n                    for (var i = 0; i < $scope.fiModel.selected.requiredUserCredentials.length; i++) {\n                        credential = $scope.fiModel.selected.requiredUserCredentials[i];\n                        credential.fieldValue = '';\n                    }\n                    $scope.fiModel.isConnecting = false;\n                    $scope.wizardNextStep();\n                }, function () {\n\n                    $scope.fiModel.isConnecting = false;\n                });\n\n            }\n\n        };\n\n        $scope.searchForFinancialInstitute = function(loadMore) {\n\n            $scope.fiModel.isConnecting = true;\n\n             return $scope.fiModel.searchFinancialInstitutes({\n                f: $scope.searchIndex,\n                l: $scope.increment,\n                name: $scope.search.name,\n                accountTypes: $scope.search.typeFilter\n            }, loadMore).then(function(response) {\n\n                $scope.fiModel.isConnecting = false;\n                //if the response is smaller than increment then there aren't any results left\n                if(response.length < $scope.increment) {\n                    $scope.noMoreFIs = true;\n                } else {\n                    $scope.searchIndex = $scope.searchIndex + $scope.increment;\n                }\n            }, function() {\n\n                $scope.fiModel.isConnecting = false;\n            });\n\n        };\n\n        $scope.resetSearchIndex = function() {\n\n            $scope.searchIndex = 1;\n            $scope.noMoreFIs = false;\n        };\n\n        $scope.searchForFIByKeyword = lpCoreUtils.debounce(function() {\n            $scope.resetSearchIndex();\n            $scope.searchForFinancialInstitute();\n        }, 500);\n\n\n        /**\n         * Function to prevent default action on enter key pressed\n         * fixes ie10 issue (LPES-2861)\n         * @param  {object} $event angular key event\n         */\n        $scope.disableEnterSubmit = function($event) {\n            if($event && $event.which === 13) {\n                $event.preventDefault();\n                return;\n            }\n        };\n\n        $scope.filterFIsByType = function(type, $event) {\n\n            if($event && $event.which !== 13) {\n                return;\n            }\n\n            $scope.resetSearchIndex();\n            //set the type filter and active state\n            lpCoreUtils.forEach($scope.typeFilters, function(filter) {\n                filter.selected = false;\n            });\n            $scope.search.typeFilter = $scope.typeFilters[type].code;\n            $scope.typeFilters[type].selected = true;\n\n            //set the type filter label\n            $scope.contextLabel = type ? $scope.typeFilters[type].label : 'All';\n            $scope.searchForFinancialInstitute();\n        };\n\n    };\n\n    // @ngInject\n    exports.CredentialsViewController = function($scope, $timeout) {\n\n        $scope.pollCount = 0;\n\n        $scope.authenticateWithSelectedFI = function() {\n\n            $scope.fiModel.clearErrors();\n            $scope.fiModel.isConnecting = true;\n\n            var promise;\n\n            //if we are re-handling auth, the membership will have already been created\n            if($scope.fiModel.selectedMembership.id) {\n                promise = $scope.fiModel.updateMembershipRequest($scope.fiModel.selectedMembership);\n            } else {\n                //create membership\n                promise = $scope.fiModel.createMembershipRequest($scope.fiModel.selected);\n            }\n\n            promise.then(function(response) {\n\n                $scope.handleAuthenticationResponse(response);\n            }, function() {\n\n                $scope.fiModel.isConnecting = false;\n            });\n        };\n\n        $scope.updateRequiredCredentials = function(membership) {\n\n            $scope.fiModel.addWarning({captionCode: 'extraAuth'});\n            $scope.fiModel.selected.requiredUserCredentials = membership.credentials;\n            $scope.fiModel.isConnecting = false;\n        };\n\n        $scope.pollForAuth = function(membershipId) {\n\n\n            $timeout(function() {\n\n                if($scope.pollCount < 10) {\n                    var promise = $scope.fiModel.loadMembershipRequestByID(membershipId);\n\n                    promise.then(function(membership) {\n                        $scope.handleAuthenticationResponse(membership);\n                        $scope.pollCount++;\n                    }, function() {\n\n                        $scope.fiModel.isConnecting = false;\n                        $scope.pollCount = 0;\n                    });\n                } else {\n                    $scope.fiModel.addError({captionCode: 'badConnection'});\n                    $scope.pollCount = 0;\n                }\n\n            }, 2000);\n        };\n\n        $scope.handleAuthenticationResponse = function(data) {\n\n            switch(data.status) {\n                case 'CREATED':\n                    $scope.wizardNextStep();\n                    $scope.loadAccounts();\n                    break;\n                case 'CHALLENGE':\n                    $scope.fiModel.selected.extraAuthRequired = true;\n                    $scope.updateRequiredCredentials(data);\n                    break;\n                case 'PENDING':\n                    $scope.pollForAuth(data.id);\n                    break;\n            }\n        };\n\n    };\n});\n\n\n\n/** WEBPACK FOOTER **\n ** ./scripts/controllers.js\n **/","define(function(require, exports, module) {\n    'use strict';\n\n    var $ = require('jquery');\n\n    // @ngInject\n    exports.lazyLoader = function($window, lpCoreUtils) {\n        return {\n            restrict: 'A',\n            scope: {\n                callBack: '=',\n                stopLoading: '='\n            },\n            link: function(scope, element, attrs) {\n                var win;\n\n                var getHeight = function() {\n                    return scope.widgetElement.height() + scope.widgetElement.offset().top;\n                };\n\n                var doLoadMore = lpCoreUtils.debounce(function () {\n                    if(win.scrollTop() > (getHeight() - 150)) {\n                        win.off('scroll', doLoadMore);\n                        scope.callBack(true).then(function() {\n                            if(!scope.stopLoading) {\n                                win.on('scroll', doLoadMore);\n                            }\n                        });\n                    }\n                }, 10);\n\n                var initialize = function() {\n                    win = $($window);\n                    scope.widgetElement = element.closest('.widget');\n                    win.on('scroll', doLoadMore);\n                };\n\n                scope.$watch('stopLoading', function(newValue, oldValue) {\n\n                    if(newValue) {\n                        $($window).off('scroll', doLoadMore);\n                    } else if(oldValue && !newValue) {\n                        win.on('scroll', doLoadMore);\n                    }\n                });\n\n                initialize();\n            }\n\n        };\n    };\n});\n\n\n\n/** WEBPACK FOOTER **\n ** ./scripts/directives.js\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_10__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"jquery\"\n ** module id = 10\n ** module chunks = 0\n **/"],"sourceRoot":""}