{"version":3,"sources":["webpack:///container-tabs/webpack/universalModuleDefinition","webpack:///container-tabs/scripts/tabs.js","webpack:///container-tabs/webpack/bootstrap 109c2fefb2aa74bb2020","webpack:///container-tabs/./scripts/tabs.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","b$","window","$","NS","bdom","getNamespace","DeckContainer","classes","CONTAINERS","TABS","PANEL","extend","bdomDocument","node","apply","arguments","isPossibleDragTarget","localName","namespaceURI","DOMReady","prototype","self","getDisplay","on","click","event","sId","data","setTabSelected","keydown","enterKeyCode","spaceKeyCode","which","console","log","showPanel","panelId","panel","aTabs","i","length","removeClass","getPanel","htmlNode","find","model","name","addClass","_getNewPanelData","order","_getPanels","title","PANEL_NAME_PREFIX","props","type","label","value","viewHint","icon","area","_getNewPanelName","properties","template","json","item","originalItem","sTemplate","handlers","preferencesSaved","container","target","containerType","nodeName","currentTarget","refreshHTML"],"mappings":";CAAA,SAAAA,EAAAC,GACA,gBAAAC,UAAA,gBAAAC,QACAA,OAAAD,QAAAD,IACA,kBAAAG,gBAAAC,IACAD,UAAAH,GACA,gBAAAC,SACAA,QAAA,kBAAAD,IAEAD,EAAA,kBAAAC,KACCK,KAAA,WACD,MCAgB,UAAUC,GCN1B,QAAAC,GAAAC,GAGA,GAAAC,EAAAD,GACA,MAAAC,GAAAD,GAAAP,OAGA,IAAAC,GAAAO,EAAAD,IACAP,WACAS,GAAAF,EACAG,QAAA,EAUA,OANAL,GAAAE,GAAAI,KAAAV,EAAAD,QAAAC,IAAAD,QAAAM,GAGAL,EAAAS,QAAA,EAGAT,EAAAD,QAvBA,GAAAQ,KAqCA,OATAF,GAAAM,EAAAP,EAGAC,EAAAO,EAAAL,EAGAF,EAAAQ,EAAA,GAGAR,EAAA,KDgBM,SAASL,EAAQD,UErDvB,SAAAe,EAAAC,EAAAC,GACA,YAEA,IAAAC,GAAAH,EAAAI,KAAAC,aAAA,aACAC,EAAAH,EAAAI,QAAAD,cAIAE,GACAC,KAAA,OACAC,MAAA,iBAIAJ,GAAAK,OAAA,SAAAC,EAAAC,GACAP,EAAAQ,MAAAzB,KAAA0B,WACA1B,KAAA2B,sBAAA,IAEAC,UAAA,OACAC,aAAA,YACAC,SAAA,WACAb,EAAAc,UAAAD,SAAAvB,KAAAP,KAAA0B,UACA,IAAAM,GAAAhC,IACAa,GAAAb,KAAAiC,WAAA,WAAAC,IACAC,MAAA,SAAAC,GACA,GAAAC,GAAAxB,EAAAb,MAAAsC,KAAA,KACAN,GAAAO,eAAAF,IAEAG,QAAA,SAAAJ,GACA,GAAAK,GAAA,GACAC,EAAA,EACA,IAAAN,EAAAO,QAAAD,GAAAN,EAAAO,QAAAF,EAAA,CACA,GAAAJ,GAAAxB,EAAAb,MAAAsC,KAAA,KACAM,SAAAC,IAAAR,GACAL,EAAAO,eAAAF,QAKAE,eAAA,SAAAF,GACArC,KAAA8C,UAAAT,IAIAS,UAAA,SAAAC,GAIA,OAFAC,GADAC,EAAAjD,KAAAiC,WAAA,UAGAiB,EAAA,EAA2BA,EAAAD,EAAAE,OAAkBD,IAC7CrC,EAAAoC,EAAAC,IAAAE,YAAA,SAGA,iBAAAL,IAAA,gBAAAA,GACAC,EAAAhD,KAAAqD,SAAAN,GACa,gBAAAA,KACbC,EAAAD,GAGAC,GACAnC,EAAAb,KAAAsD,UAAAC,KAAA,mBAAAP,EAAAQ,MAAAC,KAAA,MAAAC,SAAA,UAGAzC,EAAAc,UAAAe,UAAArB,MAAAzB,KAAA0B,YAQAiC,iBAAA,SAAArB,GACA,GAAAsB,GAAA5D,KAAA6D,aAAAV,MACAb,SACAA,EAAAwB,MAAAxB,EAAAwB,OAAA9D,KAAA+D,mBAAAH,EAAA,EAEA,IAAAI,KACAC,KAAA,SACAR,KAAA,QACAS,MAAA,QACAC,MAAA7B,EAAAwB,OAAA,GACAM,SAAA,sCAEAH,KAAA,SACAR,KAAA,OACAU,MAAA7B,EAAA+B,MAAA,GACAH,MAAA,kBACAE,SAAA,qCAGA,QACAE,KAAAhC,EAAAsB,SACAA,MAAAtB,EAAAsB,SACAvD,GAAAiC,EAAAjC,IAAAL,KAAAuE,mBACAC,WAAAR,MAIAS,SAAA,SAAAC,GACA,GAAApC,IACAqC,KAAAD,EAAAlB,MAAAoB,cAEAC,EAAAjE,EAAA,aAAAZ,KAAA4B,WAAA5B,KAAA4B,WAAAU,EACA,OAAAuC,IAEAC,UACAC,iBAAA,SAAA3C,GACA,GAAA4C,GAAA5C,EAAA6C,OACAC,EAAAF,EAAAG,QAEAD,KAAA/D,EAAAE,OACAe,EAAAgD,cAAAC,mBAMC1E,GAAAC,OAAAC","file":"scripts/tabs.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"container-tabs\"] = factory();\n\telse\n\t\troot[\"container-tabs\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"container-tabs\"] = factory();\n\telse\n\t\troot[\"container-tabs\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n\n\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports) {\n\n\t/*global b$, window, console $*/\n\t(function (b$, window, $) {\n\t    \"use strict\";\n\n\t    var NS = b$.bdom.getNamespace('launchpad');\n\t    var DeckContainer = NS.classes.DeckContainer;\n\n\n\t    // Constants\n\t    var CONTAINERS = {\n\t        TABS: 'Tabs',\n\t        PANEL: 'PanelContainer'\n\t    };\n\n\t    //  ----------------------------------------------------------------\n\t    var Tabs = DeckContainer.extend(function (bdomDocument, node) {\n\t        DeckContainer.apply(this, arguments);\n\t        this.isPossibleDragTarget = false;\n\t    }, {\n\t        localName: 'Tabs',\n\t        namespaceURI: 'launchpad',\n\t        DOMReady: function() {\n\t            DeckContainer.prototype.DOMReady.call(this, arguments);\n\t            var self = this;\n\t            $(this.getDisplay('tab', true)).on({\n\t                click: function (event) {\n\t                    var sId = $(this).data('id');\n\t                    self.setTabSelected(sId);\n\t                },\n\t                keydown: function (event) {\n\t                    var enterKeyCode = 13;\n\t                    var spaceKeyCode = 32;\n\t                    if (event.which === spaceKeyCode || event.which === enterKeyCode) {\n\t                        var sId = $(this).data('id');\n\t                        console.log(sId);\n\t                        self.setTabSelected(sId);\n\t                    }\n\t                }\n\t            });\n\t        },\n\t        setTabSelected: function(sId) {\n\t            this.showPanel(sId);\n\t            //this.updateUrl();\n\t        },\n\n\t        showPanel: function(panelId){\n\t            var aTabs = this.getDisplay('tab', true);\n\t            var panel;\n\n\t            for (var i = 0; i < aTabs.length; i++) {\n\t                $(aTabs[i]).removeClass('active');\n\t            }\n\n\t            if (typeof panelId === 'number' || typeof panelId === 'string') {\n\t                panel = this.getPanel(panelId);\n\t            } else if (typeof panelId === 'object') {\n\t                panel = panelId;\n\t            }\n\n\t            if (panel) {\n\t                $(this.htmlNode).find('.--tab[data-id=\"' + panel.model.name + '\"]').addClass('active');\n\t            }\n\n\t            DeckContainer.prototype.showPanel.apply(this, arguments);\n\t        },\n\n\t        /**\n\t         * Overrides DeckContainer that provides preferences when creating new panels\n\t         * @param  {object} data Default values\n\t         * @return {object}      New panel model object\n\t         */\n\t        _getNewPanelData: function(data){\n\t            var order = this._getPanels().length;\n\t            data = data || {};\n\t            data.title = data.title || this.PANEL_NAME_PREFIX + ( order + 1 );\n\n\t            var props = [{\n\t                type: 'string',\n\t                name: 'title',\n\t                label: 'Title',\n\t                value: data.title || '',\n\t                viewHint: 'text-input,designModeOnly,manager'\n\t            }, {\n\t                type: 'string',\n\t                name: 'icon',\n\t                value: data.icon || '',\n\t                label: 'Icon (optional)',\n\t                viewHint: 'text-input,designModeOnly,manager'\n\t            }]\n\n\t            return {\n\t                area: data.order || order,\n\t                order: data.order || order,\n\t                id: data.id || this._getNewPanelName(),\n\t                properties: props\n\t            };\n\t        }\n\t    }, {\n\t        template: function (json) {\n\t            var data = {\n\t                item: json.model.originalItem\n\t            };\n\t            var sTemplate = window['templates_' + this.localName][this.localName](data);\n\t            return sTemplate;\n\t        },\n\t        handlers: {\n\t            'preferencesSaved': function(event) {\n\t                var container = event.target;\n\t                var containerType = container.nodeName;\n\n\t                if (containerType === CONTAINERS.PANEL) {\n\t                    event.currentTarget.refreshHTML();\n\t                }\n\t            }\n\t        }\n\t    }\n\t);\n\t})(b$, window, $);\n\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** scripts/tabs.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 109c2fefb2aa74bb2020\n **/","/*global b$, window, console $*/\n(function (b$, window, $) {\n    \"use strict\";\n\n    var NS = b$.bdom.getNamespace('launchpad');\n    var DeckContainer = NS.classes.DeckContainer;\n\n\n    // Constants\n    var CONTAINERS = {\n        TABS: 'Tabs',\n        PANEL: 'PanelContainer'\n    };\n\n    //  ----------------------------------------------------------------\n    var Tabs = DeckContainer.extend(function (bdomDocument, node) {\n        DeckContainer.apply(this, arguments);\n        this.isPossibleDragTarget = false;\n    }, {\n        localName: 'Tabs',\n        namespaceURI: 'launchpad',\n        DOMReady: function() {\n            DeckContainer.prototype.DOMReady.call(this, arguments);\n            var self = this;\n            $(this.getDisplay('tab', true)).on({\n                click: function (event) {\n                    var sId = $(this).data('id');\n                    self.setTabSelected(sId);\n                },\n                keydown: function (event) {\n                    var enterKeyCode = 13;\n                    var spaceKeyCode = 32;\n                    if (event.which === spaceKeyCode || event.which === enterKeyCode) {\n                        var sId = $(this).data('id');\n                        console.log(sId);\n                        self.setTabSelected(sId);\n                    }\n                }\n            });\n        },\n        setTabSelected: function(sId) {\n            this.showPanel(sId);\n            //this.updateUrl();\n        },\n\n        showPanel: function(panelId){\n            var aTabs = this.getDisplay('tab', true);\n            var panel;\n\n            for (var i = 0; i < aTabs.length; i++) {\n                $(aTabs[i]).removeClass('active');\n            }\n\n            if (typeof panelId === 'number' || typeof panelId === 'string') {\n                panel = this.getPanel(panelId);\n            } else if (typeof panelId === 'object') {\n                panel = panelId;\n            }\n\n            if (panel) {\n                $(this.htmlNode).find('.--tab[data-id=\"' + panel.model.name + '\"]').addClass('active');\n            }\n\n            DeckContainer.prototype.showPanel.apply(this, arguments);\n        },\n\n        /**\n         * Overrides DeckContainer that provides preferences when creating new panels\n         * @param  {object} data Default values\n         * @return {object}      New panel model object\n         */\n        _getNewPanelData: function(data){\n            var order = this._getPanels().length;\n            data = data || {};\n            data.title = data.title || this.PANEL_NAME_PREFIX + ( order + 1 );\n\n            var props = [{\n                type: 'string',\n                name: 'title',\n                label: 'Title',\n                value: data.title || '',\n                viewHint: 'text-input,designModeOnly,manager'\n            }, {\n                type: 'string',\n                name: 'icon',\n                value: data.icon || '',\n                label: 'Icon (optional)',\n                viewHint: 'text-input,designModeOnly,manager'\n            }]\n\n            return {\n                area: data.order || order,\n                order: data.order || order,\n                id: data.id || this._getNewPanelName(),\n                properties: props\n            };\n        }\n    }, {\n        template: function (json) {\n            var data = {\n                item: json.model.originalItem\n            };\n            var sTemplate = window['templates_' + this.localName][this.localName](data);\n            return sTemplate;\n        },\n        handlers: {\n            'preferencesSaved': function(event) {\n                var container = event.target;\n                var containerType = container.nodeName;\n\n                if (containerType === CONTAINERS.PANEL) {\n                    event.currentTarget.refreshHTML();\n                }\n            }\n        }\n    }\n);\n})(b$, window, $);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./scripts/tabs.js\n ** module id = 0\n ** module chunks = 0\n **/"],"sourceRoot":""}